(()=>{var e={20:(e,t,s)=>{const a=s(1598),n=s(9665),r=new a;e.exports=new class{async getCalendarBookings(e,t){try{const{startDate:s,endDate:a,status:n,examCategoryId:i,userId:o,page:c=1,limit:l=1e3}=e.query,u=await r.getCalendarBookings({startDate:s,endDate:a,status:n,examCategoryId:i,userId:o,page:parseInt(c),limit:parseInt(l)});if(!u.success)return t.status(400).json({success:!1,error:{message:u.message}});t.status(200).json({success:!0,data:u.data,pagination:u.pagination})}catch(e){n.error("Get calendar bookings failed",e),t.status(500).json({success:!1,error:{message:"Failed to get calendar bookings"}})}}async getCalendarStats(e,t){try{const{startDate:s,endDate:a}=e.query;if(!s||!a)return t.status(400).json({success:!1,error:{message:"Start date and end date are required"}});const n=await r.getCalendarStats(s,a);if(!n.success)return t.status(400).json({success:!1,error:{message:n.message}});t.status(200).json({success:!0,data:n.data})}catch(e){n.error("Get calendar stats failed",e),t.status(500).json({success:!1,error:{message:"Failed to get calendar statistics"}})}}async getWeeklyCalendar(e,t){try{const{date:s}=e.params;if(!s)return t.status(400).json({success:!1,error:{message:"Date parameter is required"}});const a=await r.getWeeklyCalendar(s);if(!a.success)return t.status(400).json({success:!1,error:{message:a.message}});t.status(200).json({success:!0,data:a.data})}catch(e){n.error("Get weekly calendar failed",e),t.status(500).json({success:!1,error:{message:"Failed to get weekly calendar"}})}}async getMonthlyCalendar(e,t){try{const{date:s}=e.params;if(!s)return t.status(400).json({success:!1,error:{message:"Date parameter is required"}});const a=await r.getMonthlyCalendar(s);if(!a.success)return t.status(400).json({success:!1,error:{message:a.message}});t.status(200).json({success:!0,data:a.data})}catch(e){n.error("Get monthly calendar failed",e),t.status(500).json({success:!1,error:{message:"Failed to get monthly calendar"}})}}async getDateAvailability(e,t){try{const{date:s}=e.params,{examId:a}=e.query;if(!s)return t.status(400).json({success:!1,error:{message:"Date parameter is required"}});const n=await r.getDateAvailability(s,a);if(!n.success)return t.status(400).json({success:!1,error:{message:n.message}});t.status(200).json({success:!0,data:n.data})}catch(e){n.error("Get date availability failed",e),t.status(500).json({success:!1,error:{message:"Failed to get date availability"}})}}async getExamCategories(e,t){try{const e=await r.getExamCategoriesForCalendar();if(!e.success)return t.status(400).json({success:!1,error:{message:e.message}});t.status(200).json({success:!0,data:e.data})}catch(e){n.error("Get exam categories failed",e),t.status(500).json({success:!1,error:{message:"Failed to get exam categories"}})}}async checkConflicts(e,t){try{const{examId:s,scheduledAt:a,excludeBookingId:n}=e.body;if(!s||!a)return t.status(400).json({success:!1,error:{message:"Exam ID and scheduled time are required"}});const i=await r.checkSchedulingConflicts(s,a,n);if(!i.success)return t.status(400).json({success:!1,error:{message:i.message}});t.status(200).json({success:!0,data:i.data})}catch(e){n.error("Check conflicts failed",e),t.status(500).json({success:!1,error:{message:"Failed to check conflicts"}})}}async rescheduleBooking(e,t){try{const{bookingId:s}=e.params,{newScheduledAt:a,notes:n}=e.body,i=e.user.id;if(!a)return t.status(400).json({success:!1,error:{message:"New scheduled time is required"}});const o=await r.rescheduleBooking(s,a,i,n);if(!o.success)return t.status(400).json({success:!1,error:{message:o.message,conflicts:o.conflicts}});t.status(200).json({success:!0,message:"Booking rescheduled successfully",data:o.data})}catch(e){n.error("Reschedule booking failed",e),t.status(500).json({success:!1,error:{message:"Failed to reschedule booking"}})}}async updateBookingStatus(e,t){try{const{bookingId:s}=e.params,{status:a,notes:n}=e.body,i=e.user.id;if(!a)return t.status(400).json({success:!1,error:{message:"Status is required"}});if(!["PENDING","CONFIRMED","CANCELLED","COMPLETED"].includes(a))return t.status(400).json({success:!1,error:{message:"Invalid status"}});const o=await r.updateBookingStatus(s,a,n,i);if(!o.success)return t.status(400).json({success:!1,error:{message:o.message,conflicts:o.conflicts}});t.status(200).json({success:!0,message:"Booking status updated successfully",data:o.data})}catch(e){n.error("Update booking status failed",e),t.status(500).json({success:!1,error:{message:"Failed to update booking status"}})}}async getCalendarOverview(e,t){try{const{period:s="month"}=e.query,a=new Date;let n,i;if("week"===s){const e=new Date(a);e.setDate(a.getDate()-a.getDay()),n=e,i=new Date(e),i.setDate(e.getDate()+6)}else n=new Date(a.getFullYear(),a.getMonth(),1),i=new Date(a.getFullYear(),a.getMonth()+1,0);const[o,c]=await Promise.all([r.getCalendarBookings({startDate:n.toISOString(),endDate:i.toISOString()}),r.getCalendarStats(n.toISOString(),i.toISOString())]);t.status(200).json({success:!0,data:{period:s,startDate:n,endDate:i,bookings:o.data||[],stats:c.data||{},overview:{totalBookings:c.data?.total||0,confirmedBookings:c.data?.byStatus?.CONFIRMED||0,pendingBookings:c.data?.byStatus?.PENDING||0,busyDays:c.data?.busyDaysCount||0,freeDays:c.data?.freeDays||0}}})}catch(e){n.error("Get calendar overview failed",e),t.status(500).json({success:!1,error:{message:"Failed to get calendar overview"}})}}}},68:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665);e.exports=new class{constructor(){this.prisma=null,this.isConnected=!1}async connect(){try{return this.prisma=new a({log:[{emit:"event",level:"query"},{emit:"event",level:"error"},{emit:"event",level:"info"},{emit:"event",level:"warn"}]}),await this.prisma.$connect(),this.isConnected=!0,n.info("Database connected successfully via Prisma"),this.prisma.$on("error",e=>{n.error("Prisma Error",{message:e.message,target:e.target})}),this.prisma}catch(e){throw n.error("Database connection failed:",e),e}}async disconnect(){this.prisma&&(await this.prisma.$disconnect(),this.isConnected=!1,n.info("Database connection closed"))}getPrisma(){return this.prisma}isConnected(){return this.isConnected}async transaction(e){return this.prisma.$transaction(e)}async rawQuery(e,t=[]){return this.prisma.$queryRawUnsafe(e,...t)}async executeRaw(e,t=[]){return this.prisma.$executeRawUnsafe(e,...t)}}},287:(e,t,s)=>{const a=s(3097),{auth:n,authorize:r}=s(4997),i=s(9665);e.exports=new class{async generateBill(e,t){try{const{bookingId:s}=e.params,n=e.user.id,r=await a.getBillByBookingId(s,n);t.status(200).json({success:!0,message:"Bill generated successfully",data:r})}catch(e){i.error("Generate bill error:",e),t.status(400).json({success:!1,error:{message:e.message||"Failed to generate bill"}})}}async getUserBills(e,t){try{const s=e.user.id,{page:n=1,limit:r=10,status:i}=e.query,o=await a.getUserBills(s,{page:parseInt(n),limit:parseInt(r),status:i});t.status(200).json({success:!0,data:o})}catch(e){i.error("Get user bills error:",e),t.status(500).json({success:!1,error:{message:"Failed to get bills"}})}}async getAllBills(e,t){try{const{page:s=1,limit:n=10,status:r,startDate:i,endDate:o}=e.query,c=await a.getAllBills({page:parseInt(s),limit:parseInt(n),status:r,startDate:i,endDate:o});t.status(200).json({success:!0,data:c})}catch(e){i.error("Get all bills error:",e),t.status(500).json({success:!1,error:{message:"Failed to get bills"}})}}async downloadBill(e,t){try{const{bookingId:s}=e.params,n=e.user.id,r=await a.getBillByBookingId(s,n);t.status(200).json({success:!0,message:"Bill download ready",data:{bill:r,downloadUrl:`/api/v1/billing/${s}/pdf`}})}catch(e){i.error("Download bill error:",e),t.status(400).json({success:!1,error:{message:e.message||"Failed to download bill"}})}}}},818:e=>{"use strict";e.exports=require("dotenv")},829:e=>{"use strict";e.exports=require("jsonwebtoken")},920:(e,t,s)=>{const a=s(7252).Router(),{PrismaClient:n}=s(6330),r=new n;a.get("/",async(e,t)=>{try{const{page:s=1,limit:a=10,categoryId:n,difficulty:i,type:o,search:c,tags:l,status:u}=e.query,d=(parseInt(s)-1)*parseInt(a),m={};if(n&&(m.categoryId=parseInt(n)),i&&(m.difficulty=i),o&&(m.type=o),u&&(m.status=u),c&&(m.OR=[{text:{contains:c,mode:"insensitive"}},{explanation:{contains:c,mode:"insensitive"}}]),l){const e=l.split(",").map(e=>e.trim());m.tags={some:{name:{in:e}}}}const[g,h]=await Promise.all([r.question.findMany({where:m,include:{category:!0,tags:!0,_count:{select:{examQuestions:!0}}},skip:d,take:parseInt(a),orderBy:{createdAt:"desc"}}),r.question.count({where:m})]);t.json({success:!0,data:g,pagination:{page:parseInt(s),limit:parseInt(a),total:h,pages:Math.ceil(h/parseInt(a))},message:"Questions retrieved successfully"})}catch(e){console.error("Error fetching questions:",e),t.status(500).json({success:!1,message:"Failed to fetch questions",error:e.message})}}),a.get("/:id",async(e,t)=>{try{const{id:s}=e.params,a=await r.question.findUnique({where:{id:parseInt(s)},include:{category:!0,tags:!0,examQuestions:{include:{exam:{select:{id:!0,title:!0,status:!0}}}},_count:{select:{examQuestions:!0}}}});if(!a)return t.status(404).json({success:!1,message:"Question not found"});t.json({success:!0,data:a,message:"Question retrieved successfully"})}catch(e){console.error("Error fetching question:",e),t.status(500).json({success:!1,message:"Failed to fetch question",error:e.message})}}),a.post("/",async(e,t)=>{try{const{text:s,type:a,difficulty:n,categoryId:i,options:o,correctAnswer:c,explanation:l,tags:u,points:d,timeLimit:m}=e.body;if(!(s&&a&&n&&i))return t.status(400).json({success:!1,message:"Text, type, difficulty, and category are required"});if("MULTIPLE_CHOICE"===a&&(!o||o.length<2))return t.status(400).json({success:!1,message:"Multiple choice questions must have at least 2 options"});if("MULTIPLE_CHOICE"===a&&!c)return t.status(400).json({success:!1,message:"Correct answer is required for multiple choice questions"});if(!await r.examCategory.findUnique({where:{id:parseInt(i)}}))return t.status(404).json({success:!1,message:"Category not found"});const g={text:s,type:a,difficulty:n,categoryId:parseInt(i),options:o||[],correctAnswer:c,explanation:l,points:d||1,timeLimit:m||null,status:"ACTIVE"};u&&u.length>0&&(g.tags={connectOrCreate:u.map(e=>({where:{name:e},create:{name:e}}))});const h=await r.question.create({data:g,include:{category:!0,tags:!0}});t.status(201).json({success:!0,data:h,message:"Question created successfully"})}catch(e){console.error("Error creating question:",e),t.status(500).json({success:!1,message:"Failed to create question",error:e.message})}}),a.put("/:id",async(e,t)=>{try{const{id:s}=e.params,{text:a,type:n,difficulty:i,categoryId:o,options:c,correctAnswer:l,explanation:u,tags:d,points:m,timeLimit:g,status:h}=e.body;if(!await r.question.findUnique({where:{id:parseInt(s)}}))return t.status(404).json({success:!1,message:"Question not found"});if("MULTIPLE_CHOICE"===n&&(!c||c.length<2))return t.status(400).json({success:!1,message:"Multiple choice questions must have at least 2 options"});if("MULTIPLE_CHOICE"===n&&!l)return t.status(400).json({success:!1,message:"Correct answer is required for multiple choice questions"});if(o&&!await r.examCategory.findUnique({where:{id:parseInt(o)}}))return t.status(404).json({success:!1,message:"Category not found"});const p={text:a,type:n,difficulty:i,categoryId:o?parseInt(o):void 0,options:c||[],correctAnswer:l,explanation:u,points:m||1,timeLimit:g||null,status:h};d&&(await r.question.update({where:{id:parseInt(s)},data:{tags:{set:[]}}}),d.length>0&&(p.tags={connectOrCreate:d.map(e=>({where:{name:e},create:{name:e}}))}));const y=await r.question.update({where:{id:parseInt(s)},data:p,include:{category:!0,tags:!0}});t.json({success:!0,data:y,message:"Question updated successfully"})}catch(e){console.error("Error updating question:",e),t.status(500).json({success:!1,message:"Failed to update question",error:e.message})}}),a.delete("/:id",async(e,t)=>{try{const{id:s}=e.params,a=await r.question.findUnique({where:{id:parseInt(s)},include:{_count:{select:{examQuestions:!0}}}});if(!a)return t.status(404).json({success:!1,message:"Question not found"});if(a._count.examQuestions>0)return t.status(409).json({success:!1,message:"Cannot delete question that is used in exams",data:{examCount:a._count.examQuestions}});await r.question.delete({where:{id:parseInt(s)}}),t.json({success:!0,message:"Question deleted successfully"})}catch(e){console.error("Error deleting question:",e),t.status(500).json({success:!1,message:"Failed to delete question",error:e.message})}}),a.delete("/bulk",async(e,t)=>{try{const{questionIds:s}=e.body;if(!s||!Array.isArray(s)||0===s.length)return t.status(400).json({success:!1,message:"Question IDs array is required"});const a=await r.examQuestion.findMany({where:{questionId:{in:s.map(e=>parseInt(e))}},select:{questionId:!0}});if(a.length>0){const e=[...new Set(a.map(e=>e.questionId))];return t.status(409).json({success:!1,message:"Some questions are used in exams and cannot be deleted",data:{usedQuestionIds:e}})}await r.question.deleteMany({where:{id:{in:s.map(e=>parseInt(e))}}}),t.json({success:!0,message:"Questions deleted successfully"})}catch(e){console.error("Error bulk deleting questions:",e),t.status(500).json({success:!1,message:"Failed to delete questions",error:e.message})}}),a.get("/search",async(e,t)=>{try{const{q:s,page:a=1,limit:n=10}=e.query;if(!s)return t.status(400).json({success:!1,message:"Search query is required"});const i=(parseInt(a)-1)*parseInt(n),o={OR:[{text:{contains:s,mode:"insensitive"}},{explanation:{contains:s,mode:"insensitive"}},{tags:{some:{name:{contains:s,mode:"insensitive"}}}}]},[c,l]=await Promise.all([r.question.findMany({where:o,include:{category:!0,tags:!0},skip:i,take:parseInt(n),orderBy:{createdAt:"desc"}}),r.question.count({where:o})]);t.json({success:!0,data:c,pagination:{page:parseInt(a),limit:parseInt(n),total:l,pages:Math.ceil(l/parseInt(n))},message:"Search completed successfully"})}catch(e){console.error("Error searching questions:",e),t.status(500).json({success:!1,message:"Failed to search questions",error:e.message})}}),a.get("/category/:categoryId",async(e,t)=>{try{const{categoryId:s}=e.params,{page:a=1,limit:n=10,difficulty:i,type:o}=e.query,c=(parseInt(a)-1)*parseInt(n),l={categoryId:parseInt(s)};i&&(l.difficulty=i),o&&(l.type=o);const[u,d]=await Promise.all([r.question.findMany({where:l,include:{category:!0,tags:!0},skip:c,take:parseInt(n),orderBy:{createdAt:"desc"}}),r.question.count({where:l})]);t.json({success:!0,data:u,pagination:{page:parseInt(a),limit:parseInt(n),total:d,pages:Math.ceil(d/parseInt(n))},message:"Questions retrieved successfully"})}catch(e){console.error("Error fetching questions by category:",e),t.status(500).json({success:!1,message:"Failed to fetch questions by category",error:e.message})}}),a.get("/difficulty/:difficulty",async(e,t)=>{try{const{difficulty:s}=e.params,{page:a=1,limit:n=10,categoryId:i,type:o}=e.query,c=(parseInt(a)-1)*parseInt(n),l={difficulty:s};i&&(l.categoryId=parseInt(i)),o&&(l.type=o);const[u,d]=await Promise.all([r.question.findMany({where:l,include:{category:!0,tags:!0},skip:c,take:parseInt(n),orderBy:{createdAt:"desc"}}),r.question.count({where:l})]);t.json({success:!0,data:u,pagination:{page:parseInt(a),limit:parseInt(n),total:d,pages:Math.ceil(d/parseInt(n))},message:"Questions retrieved successfully"})}catch(e){console.error("Error fetching questions by difficulty:",e),t.status(500).json({success:!1,message:"Failed to fetch questions by difficulty",error:e.message})}}),a.get("/type/:type",async(e,t)=>{try{const{type:s}=e.params,{page:a=1,limit:n=10,categoryId:i,difficulty:o}=e.query,c=(parseInt(a)-1)*parseInt(n),l={type:s};i&&(l.categoryId=parseInt(i)),o&&(l.difficulty=o);const[u,d]=await Promise.all([r.question.findMany({where:l,include:{category:!0,tags:!0},skip:c,take:parseInt(n),orderBy:{createdAt:"desc"}}),r.question.count({where:l})]);t.json({success:!0,data:u,pagination:{page:parseInt(a),limit:parseInt(n),total:d,pages:Math.ceil(d/parseInt(n))},message:"Questions retrieved successfully"})}catch(e){console.error("Error fetching questions by type:",e),t.status(500).json({success:!1,message:"Failed to fetch questions by type",error:e.message})}}),a.get("/tags",async(e,t)=>{try{const e=await r.tag.findMany({include:{_count:{select:{questions:!0}}},orderBy:{name:"asc"}});t.json({success:!0,data:e,message:"Question tags retrieved successfully"})}catch(e){console.error("Error fetching question tags:",e),t.status(500).json({success:!1,message:"Failed to fetch question tags",error:e.message})}}),a.get("/:id/stats",async(e,t)=>{try{const{id:s}=e.params,a=await r.question.findUnique({where:{id:parseInt(s)},include:{examQuestions:{include:{exam:{select:{id:!0,title:!0,status:!0}}}},_count:{select:{examQuestions:!0}}}});if(!a)return t.status(404).json({success:!1,message:"Question not found"});t.json({success:!0,data:a,message:"Question statistics retrieved successfully"})}catch(e){console.error("Error fetching question statistics:",e),t.status(500).json({success:!1,message:"Failed to fetch question statistics",error:e.message})}}),a.get("/bank/stats",async(e,t)=>{try{const[e,s,a,n]=await Promise.all([r.question.count(),r.question.groupBy({by:["categoryId"],_count:{id:!0},include:{category:{select:{name:!0}}}}),r.question.groupBy({by:["difficulty"],_count:{id:!0}}),r.question.groupBy({by:["type"],_count:{id:!0}})]);t.json({success:!0,data:{totalQuestions:e,questionsByCategory:s,questionsByDifficulty:a,questionsByType:n},message:"Question bank statistics retrieved successfully"})}catch(e){console.error("Error fetching question bank statistics:",e),t.status(500).json({success:!1,message:"Failed to fetch question bank statistics",error:e.message})}}),e.exports=a},1158:(e,t,s)=>{const a=s(829),n=s(4729),{PrismaClient:r}=s(6330),{v4:i}=s(3903),o=s(9665),c=s(6848),l=new r,u=new c;e.exports=class{generateAccessToken(e){return a.sign({userId:e},process.env.JWT_SECRET,{expiresIn:process.env.JWT_EXPIRES_IN||"7d"})}generateRefreshToken(e){return a.sign({userId:e,type:"refresh"},process.env.JWT_REFRESH_SECRET,{expiresIn:process.env.JWT_REFRESH_EXPIRES_IN||"30d"})}async createUserSession(e,t,s,a,n){const r=new Date;return r.setDate(r.getDate()+(s?30:7)),await l.userSession.create({data:{userId:e,sessionToken:t,expiresAt:r,ipAddress:a,userAgent:n,isActive:!0}})}async handleFailedLogin(e,t){const s=t+1;let a=null;if(s>=5&&(a=new Date,a.setMinutes(a.getMinutes()+30)),await l.user.update({where:{id:e},data:{loginAttempts:s,lockedUntil:a}}),o.logSecurity("FAILED_LOGIN_ATTEMPT",{userId:e,attemptCount:s,lockedUntil:a,ipAddress:"system"}),a){const t=await l.user.findUnique({where:{id:e},select:{email:!0,firstName:!0}});t&&await u.sendSecurityAlert(t.email,{type:"ACCOUNT_LOCKED",reason:"Multiple failed login attempts",lockedUntil:a,firstName:t.firstName})}}async refreshAccessToken(e){try{const t=a.verify(e,process.env.JWT_REFRESH_SECRET);return"refresh"!==t.type?{success:!1,message:"Invalid token type"}:await l.userSession.findFirst({where:{sessionToken:e,isActive:!0,expiresAt:{gt:new Date}}})?{success:!0,accessToken:this.generateAccessToken(t.userId),userId:t.userId}:{success:!1,message:"Session expired or invalid"}}catch(e){return o.error("Token refresh failed",e),{success:!1,message:"Invalid refresh token"}}}async invalidateSession(e){try{await l.userSession.updateMany({where:{sessionToken:e},data:{isActive:!1}})}catch(e){o.error("Session invalidation failed",e)}}async invalidateAllUserSessions(e){try{await l.userSession.updateMany({where:{userId:e,isActive:!0},data:{isActive:!1}})}catch(e){o.error("User sessions invalidation failed",e)}}async verifyEmailToken(e){try{const t=await l.user.findFirst({where:{emailVerificationToken:e}});if(!t)return{success:!1,message:"Invalid verification token"};if(t.isEmailVerified)return{success:!1,message:"Email already verified"};if(await l.user.update({where:{id:t.id},data:{isEmailVerified:!0,emailVerificationToken:null}}),await l.auditLog.create({data:{userId:t.id,action:"EMAIL_VERIFIED",resource:"USER",resourceId:t.id,details:{verifiedAt:(new Date).toISOString()},ipAddress:"system",userAgent:"email-verification"}}),global.notificationService)try{await global.notificationService.notifyEmailVerified(t),o.info("Email verification notification sent",{userId:t.id})}catch(e){o.error("Failed to send email verification notification",{userId:t.id,error:e.message})}return o.info("Email verified successfully",{userId:t.id}),{success:!0,message:"Email verified successfully"}}catch(e){return o.error("Email verification failed",e),{success:!1,message:"Email verification failed"}}}async requestPasswordReset(e){try{const t=await l.user.findUnique({where:{email:e.toLowerCase()}});if(!t)return{success:!0};const s=i(),a=new Date;return a.setHours(a.getHours()+1),await l.user.update({where:{id:t.id},data:{passwordResetToken:s,passwordResetExpires:a}}),await u.sendPasswordResetEmail(t.email,s,{firstName:t.firstName,lastName:t.lastName}),await l.auditLog.create({data:{userId:t.id,action:"PASSWORD_RESET_REQUESTED",resource:"USER",resourceId:t.id,details:{requestedAt:(new Date).toISOString()},ipAddress:"system",userAgent:"password-reset-request"}}),o.info("Password reset requested",{userId:t.id}),{success:!0}}catch(e){return o.error("Password reset request failed",e),{success:!1,message:"Password reset request failed"}}}async resetPassword(e,t){try{const s=await l.user.findFirst({where:{passwordResetToken:e,passwordResetExpires:{gt:new Date}}});if(!s)return{success:!1,message:"Invalid or expired reset token"};const a=parseInt(process.env.BCRYPT_ROUNDS)||12,r=await n.hash(t,a);return await l.user.update({where:{id:s.id},data:{password:r,passwordResetToken:null,passwordResetExpires:null,loginAttempts:0,lockedUntil:null}}),await this.invalidateAllUserSessions(s.id),await u.sendPasswordChangedEmail(s.email,{firstName:s.firstName,lastName:s.lastName}),await l.auditLog.create({data:{userId:s.id,action:"PASSWORD_RESET_COMPLETED",resource:"USER",resourceId:s.id,details:{resetAt:(new Date).toISOString()},ipAddress:"system",userAgent:"password-reset-completion"}}),o.info("Password reset completed",{userId:s.id}),{success:!0,message:"Password reset successfully"}}catch(e){return o.error("Password reset failed",e),{success:!1,message:"Password reset failed"}}}async cleanupExpiredSessions(){try{const e=await l.userSession.updateMany({where:{expiresAt:{lt:new Date},isActive:!0},data:{isActive:!1}});e.count>0&&o.info(`Cleaned up ${e.count} expired sessions`)}catch(e){o.error("Session cleanup failed",e)}}async getUserSessions(e){return await l.userSession.findMany({where:{userId:e,isActive:!0},orderBy:{createdAt:"desc"}})}async revokeSession(e,t){try{return await l.userSession.findFirst({where:{id:t,userId:e,isActive:!0}})?(await l.userSession.update({where:{id:t},data:{isActive:!1}}),await l.auditLog.create({data:{userId:e,action:"SESSION_REVOKED",resource:"USER_SESSION",resourceId:t,details:{revokedAt:(new Date).toISOString()},ipAddress:"system",userAgent:"session-revocation"}}),{success:!0,message:"Session revoked successfully"}):{success:!1,message:"Session not found"}}catch(e){return o.error("Session revocation failed",e),{success:!1,message:"Session revocation failed"}}}validatePasswordStrength(e){const t=/[A-Z]/.test(e),s=/[a-z]/.test(e),a=/\d/.test(e),n=/[!@#$%^&*(),.?":{}|<>]/.test(e),r=[];return e.length<8&&r.push("Password must be at least 8 characters long"),t||r.push("Password must contain at least one uppercase letter"),s||r.push("Password must contain at least one lowercase letter"),a||r.push("Password must contain at least one number"),n||r.push("Password must contain at least one special character"),{isValid:0===r.length,errors:r,strength:this.calculatePasswordStrength(e,t,s,a,n)}}calculatePasswordStrength(e,t,s,a,n){let r=0;return r+=Math.min(4*e.length,20),t&&(r+=10),s&&(r+=10),a&&(r+=10),n&&(r+=10),r>=80?"very_strong":r>=60?"strong":r>=40?"medium":r>=20?"weak":"very_weak"}async checkPermission(e,t,s){try{const a=await l.user.findUnique({where:{id:e},select:{role:!0}});return!!a&&("SUPER_ADMIN"===a.role||("ADMIN"===a.role?["user:read","user:create","user:update","exam:read","exam:create","exam:update","exam:delete","question:read","question:create","question:update","question:delete","category:read","category:create","category:update","category:delete","booking:read","booking:update","booking:create","booking:delete","calendar:read","calendar:update","calendar:reschedule","analytics:read"].includes(`${t}:${s}`):"MODERATOR"===a.role?["user:read","exam:read","exam:update","question:read","question:create","question:update","category:read","booking:read","booking:update","calendar:read","calendar:update","analytics:read"].includes(`${t}:${s}`):"STUDENT"===a.role&&["profile:read","profile:update","exam:read","booking:read","booking:create","attempt:read","attempt:create","attempt:update"].includes(`${t}:${s}`)))}catch(e){return o.error("Permission check failed",e),!1}}}},1572:e=>{"use strict";e.exports=require("nodemailer")},1598:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),{startOfDay:r,endOfDay:i,startOfWeek:o,endOfWeek:c,startOfMonth:l,endOfMonth:u,eachDayOfInterval:d,format:m}=s(2172),g=new a;e.exports=class{async getCalendarBookings(e={}){try{const{startDate:t,endDate:s,status:a,examCategoryId:n,userId:r,page:i=1,limit:o=1e3}=e,c={};(t||s)&&(c.scheduledAt={},t&&(c.scheduledAt.gte=new Date(t)),s&&(c.scheduledAt.lte=new Date(s))),a&&"all"!==a&&(c.status=a),r&&(c.userId=r),n&&"all"!==n&&(c.exam={examCategoryId:n});const l=await g.examBooking.findMany({where:c,include:{user:{select:{id:!0,firstName:!0,lastName:!0,email:!0}},exam:{include:{examCategory:{select:{id:!0,name:!0,color:!0}}}}},orderBy:{scheduledAt:"asc"},skip:(i-1)*o,take:o}),u=await g.examBooking.count({where:c});return{success:!0,data:l,pagination:{page:i,limit:o,total:u,pages:Math.ceil(u/o)}}}catch(e){return n.error("Get calendar bookings failed",e),{success:!1,message:"Failed to get calendar bookings"}}}async getCalendarStats(e,t){try{const s=new Date(e),a=new Date(t),n=await g.examBooking.findMany({where:{scheduledAt:{gte:s,lte:a}},include:{exam:{select:{examCategoryId:!0,examCategory:{select:{name:!0,color:!0}}}}}}),r={total:n.length,byStatus:{PENDING:0,CONFIRMED:0,CANCELLED:0,COMPLETED:0},byCategory:{},busyDays:new Set,dailyStats:{}};n.forEach(e=>{r.byStatus[e.status]++;const t=e.exam?.examCategory?.name||"Unknown";if(r.byCategory[t]||(r.byCategory[t]=0),r.byCategory[t]++,e.scheduledAt){const t=m(e.scheduledAt,"yyyy-MM-dd");r.busyDays.add(t),r.dailyStats[t]||(r.dailyStats[t]={total:0,confirmed:0,pending:0,cancelled:0}),r.dailyStats[t].total++,r.dailyStats[t][e.status.toLowerCase()]++}});const i=d({start:s,end:a}).length;return r.freeDays=i-r.busyDays.size,r.busyDaysCount=r.busyDays.size,r.busyDays=Array.from(r.busyDays),{success:!0,data:r}}catch(e){return n.error("Get calendar stats failed",e),{success:!1,message:"Failed to get calendar statistics"}}}async getDateAvailability(e,t=null){try{const s=new Date(e),a={scheduledAt:{gte:r(s),lte:i(s)},status:{in:["PENDING","CONFIRMED"]}};t&&(a.examId=t);const n=await g.examBooking.findMany({where:a,include:{user:{select:{firstName:!0,lastName:!0,email:!0}},exam:{select:{title:!0,duration:!0,examCategory:{select:{name:!0}}}}},orderBy:{scheduledAt:"asc"}}),o={};return n.forEach(e=>{const t=m(e.scheduledAt,"HH:mm");o[t]||(o[t]=[]),o[t].push(e)}),{success:!0,data:{date:s,totalBookings:n.length,bookings:n,timeSlots:o,isAvailable:0===n.length,conflicts:Object.values(o).filter(e=>e.length>1)}}}catch(e){return n.error("Get date availability failed",e),{success:!1,message:"Failed to get date availability"}}}async getWeeklyCalendar(e){try{const t=new Date(e),s=o(t),a=c(t),n=await this.getCalendarBookings({startDate:s,endDate:a});return{success:!0,data:{weekStart:s,weekEnd:a,days:d({start:s,end:a}).map(e=>{const t=n.data.filter(t=>{if(!t.scheduledAt)return!1;const s=new Date(t.scheduledAt);return m(s,"yyyy-MM-dd")===m(e,"yyyy-MM-dd")});return{date:e,dayName:m(e,"EEEE"),bookings:t,count:t.length,status:t.length>0?"busy":"free"}}),totalBookings:n.data.length}}}catch(e){return n.error("Get weekly calendar failed",e),{success:!1,message:"Failed to get weekly calendar"}}}async getMonthlyCalendar(e){try{const t=new Date(e),s=l(t),a=u(t),[n,r]=await Promise.all([this.getCalendarBookings({startDate:s,endDate:a}),this.getCalendarStats(s,a)]);return{success:!0,data:{month:m(t,"MMMM yyyy"),monthStart:s,monthEnd:a,bookings:n.data||[],stats:r.data||{}}}}catch(e){return n.error("Get monthly calendar failed",e),{success:!1,message:"Failed to get monthly calendar"}}}async checkSchedulingConflicts(e,t,s=null){try{const a=new Date(t),n=await g.exam.findUnique({where:{id:e},select:{duration:!0}});if(!n)return{success:!1,message:"Exam not found"};const r=30,i=n.duration+r,o={examId:e,scheduledAt:{gte:new Date(a.getTime()-6e4*i),lte:new Date(a.getTime()+6e4*i)},status:{in:["PENDING","CONFIRMED"]}};s&&(o.id={not:s});const c=await g.examBooking.findMany({where:o,include:{user:{select:{firstName:!0,lastName:!0}}}});return{success:!0,data:{hasConflicts:c.length>0,conflicts:c,conflictCount:c.length}}}catch(e){return n.error("Check scheduling conflicts failed",e),{success:!1,message:"Failed to check scheduling conflicts"}}}async getExamCategoriesForCalendar(){try{return{success:!0,data:await g.examCategory.findMany({select:{id:!0,name:!0,color:!0,_count:{select:{exams:{where:{isActive:!0}}}}},where:{isActive:!0},orderBy:{name:"asc"}})}}catch(e){return n.error("Get exam categories for calendar failed",e),{success:!1,message:"Failed to get exam categories"}}}async updateBookingStatus(e,t,s,a){try{const n=await g.examBooking.findUnique({where:{id:e},include:{exam:!0,user:{select:{firstName:!0,lastName:!0,email:!0}}}});if(!n)return{success:!1,message:"Booking not found"};if("CONFIRMED"===t&&n.scheduledAt){const t=await this.checkSchedulingConflicts(n.examId,n.scheduledAt,e);if(t.success&&t.data.hasConflicts)return{success:!1,message:"Cannot confirm booking due to scheduling conflicts",conflicts:t.data.conflicts}}const r=await g.examBooking.update({where:{id:e},data:{status:t,notes:s||n.notes,updatedAt:new Date},include:{user:{select:{firstName:!0,lastName:!0,email:!0}},exam:{include:{examCategory:!0}}}});return await g.auditLog.create({data:{userId:a,action:"BOOKING_STATUS_UPDATE",resource:"ExamBooking",resourceId:e,details:{oldStatus:n.status,newStatus:t,notes:s,scheduledAt:n.scheduledAt}}}),{success:!0,data:r}}catch(e){return n.error("Update booking status failed",e),{success:!1,message:"Failed to update booking status"}}}async rescheduleBooking(e,t,s,a=null){try{const n=await g.examBooking.findUnique({where:{id:e},include:{exam:!0,user:{select:{firstName:!0,lastName:!0,email:!0}}}});if(!n)return{success:!1,message:"Booking not found"};const r=await this.checkSchedulingConflicts(n.examId,t,e);if(r.success&&r.data.hasConflicts)return{success:!1,message:"Cannot reschedule due to conflicts at the new time",conflicts:r.data.conflicts};const i=await g.examBooking.update({where:{id:e},data:{scheduledAt:new Date(t),notes:a||n.notes,updatedAt:new Date},include:{user:{select:{firstName:!0,lastName:!0,email:!0}},exam:{include:{examCategory:!0}}}});return await g.auditLog.create({data:{userId:s,action:"BOOKING_RESCHEDULE",resource:"ExamBooking",resourceId:e,details:{oldScheduledAt:n.scheduledAt,newScheduledAt:t,notes:a}}}),{success:!0,data:i}}catch(e){return n.error("Reschedule booking failed",e),{success:!1,message:"Failed to reschedule booking"}}}}},1652:(e,t,s)=>{const a=s(2446);e.exports={validateUserCreation:e=>a.object({email:a.string().email().required().messages({"string.email":"Please provide a valid email address","any.required":"Email is required"}),password:a.string().min(8).max(128).pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/).required().messages({"string.min":"Password must be at least 8 characters long","string.max":"Password cannot exceed 128 characters","string.pattern.base":"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character","any.required":"Password is required"}),firstName:a.string().min(2).max(50).required().messages({"string.min":"First name must be at least 2 characters long","string.max":"First name cannot exceed 50 characters","any.required":"First name is required"}),lastName:a.string().min(2).max(50).required().messages({"string.min":"Last name must be at least 2 characters long","string.max":"Last name cannot exceed 50 characters","any.required":"Last name is required"}),role:a.string().valid("STUDENT","MODERATOR","ADMIN","SUPER_ADMIN").default("STUDENT").messages({"any.only":"Invalid role specified"}),phone:a.string().pattern(/^\+?[\d\s\-\(\)]+$/).optional().messages({"string.pattern.base":"Please provide a valid phone number"}),dateOfBirth:a.date().max("now").optional().messages({"date.max":"Date of birth cannot be in the future"}),gender:a.string().valid("MALE","FEMALE","OTHER","PREFER_NOT_TO_SAY").optional().messages({"any.only":"Invalid gender specified"}),address:a.string().max(500).optional().messages({"string.max":"Address cannot exceed 500 characters"}),departmentId:a.string().optional().messages({"string.base":"Department ID must be a valid string"}),profilePicture:a.string().uri().optional().messages({"string.uri":"Profile picture must be a valid URL"}),status:a.string().valid("active","inactive","suspended","pending").optional().default("active").messages({"any.only":"Invalid status specified"}),isPhoneVerified:a.boolean().optional().default(!1).messages({"boolean.base":"Phone verification status must be true or false"})}).validate(e),validateUserUpdate:e=>a.object({email:a.string().email().optional().messages({"string.email":"Please provide a valid email address"}),password:a.string().min(8).max(128).pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/).optional().messages({"string.min":"Password must be at least 8 characters long","string.max":"Password cannot exceed 128 characters","string.pattern.base":"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character"}),firstName:a.string().min(2).max(50).optional().messages({"string.min":"First name must be at least 2 characters long","string.max":"First name cannot exceed 50 characters"}),lastName:a.string().min(2).max(50).optional().messages({"string.min":"Last name must be at least 2 characters long","string.max":"Last name cannot exceed 50 characters"}),role:a.string().valid("STUDENT","MODERATOR","ADMIN","SUPER_ADMIN").optional().messages({"any.only":"Invalid role specified"}),phone:a.string().pattern(/^\+?[\d\s\-\(\)]+$/).optional().messages({"string.pattern.base":"Please provide a valid phone number"}),dateOfBirth:a.date().max("now").optional().messages({"date.max":"Date of birth cannot be in the future"}),gender:a.string().valid("MALE","FEMALE","OTHER","PREFER_NOT_TO_SAY").optional().messages({"any.only":"Invalid gender specified"}),isActive:a.boolean().optional(),isEmailVerified:a.boolean().optional(),address:a.string().max(500).optional().messages({"string.max":"Address cannot exceed 500 characters"}),departmentId:a.string().optional().messages({"string.base":"Department ID must be a valid string"}),profilePicture:a.string().uri().optional().messages({"string.uri":"Profile picture must be a valid URL"}),status:a.string().valid("active","inactive","suspended","pending").optional().messages({"any.only":"Invalid status specified"}),isPhoneVerified:a.boolean().optional().messages({"boolean.base":"Phone verification status must be true or false"})}).validate(e),validateLogin:e=>a.object({email:a.string().email().required().messages({"string.email":"Please provide a valid email address","any.required":"Email is required"}),password:a.string().required().messages({"any.required":"Password is required"}),rememberMe:a.boolean().default(!1)}).validate(e),validatePasswordResetRequest:e=>a.object({email:a.string().email().required().messages({"string.email":"Please provide a valid email address","any.required":"Email is required"})}).validate(e),validatePasswordReset:e=>a.object({token:a.string().required().messages({"any.required":"Reset token is required"}),password:a.string().min(8).max(128).pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/).required().messages({"string.min":"Password must be at least 8 characters long","string.max":"Password cannot exceed 128 characters","string.pattern.base":"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character","any.required":"Password is required"}),confirmPassword:a.string().valid(a.ref("password")).required().messages({"any.only":"Passwords do not match","any.required":"Password confirmation is required"})}).validate(e),validateChangePassword:e=>a.object({currentPassword:a.string().required().messages({"any.required":"Current password is required"}),newPassword:a.string().min(8).max(128).pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/).required().messages({"string.min":"Password must be at least 8 characters long","string.max":"Password cannot exceed 128 characters","string.pattern.base":"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character","any.required":"New password is required"}),confirmPassword:a.string().valid(a.ref("newPassword")).required().messages({"any.only":"Passwords do not match","any.required":"Password confirmation is required"})}).validate(e),validateProfileUpdate:e=>a.object({firstName:a.string().min(2).max(50).optional().messages({"string.min":"First name must be at least 2 characters long","string.max":"First name cannot exceed 50 characters"}),lastName:a.string().min(2).max(50).optional().messages({"string.min":"Last name must be at least 2 characters long","string.max":"Last name cannot exceed 50 characters"}),phone:a.string().pattern(/^\+?[\d\s\-\(\)]+$/).optional().messages({"string.pattern.base":"Please provide a valid phone number"}),dateOfBirth:a.date().max("now").optional().messages({"date.max":"Date of birth cannot be in the future"}),gender:a.string().valid("MALE","FEMALE","OTHER","PREFER_NOT_TO_SAY").optional().messages({"any.only":"Invalid gender specified"}),profileImage:a.string().uri().optional().messages({"string.uri":"Please provide a valid image URL"})}).validate(e),validateBulkUserImport:e=>{const t=a.object({email:a.string().email().required(),password:a.string().min(8).required(),firstName:a.string().min(2).max(50).required(),lastName:a.string().min(2).max(50).required(),role:a.string().valid("STUDENT","MODERATOR","ADMIN").default("STUDENT"),phone:a.string().pattern(/^\+?[\d\s\-\(\)]+$/).optional(),dateOfBirth:a.date().max("now").optional(),gender:a.string().valid("MALE","FEMALE","OTHER","PREFER_NOT_TO_SAY").optional()});return a.object({users:a.array().items(t).min(1).max(100).required().messages({"array.min":"At least one user must be provided","array.max":"Maximum 100 users can be imported at once","any.required":"Users array is required"})}).validate(e)},validateRefreshToken:e=>a.object({refreshToken:a.string().required().messages({"any.required":"Refresh token is required"})}).validate(e),validateEmailVerification:e=>a.object({token:a.string().required().messages({"any.required":"Verification token is required"})}).validate(e)}},1763:e=>{"use strict";e.exports=require("express-rate-limit")},2096:e=>{"use strict";e.exports=require("morgan")},2157:(e,t,s)=>{const a=s(7252),n=s(5593),{auth:r,studentOnly:i}=s(4997),o=a.Router();o.get("/categories",n.getExamCategories),o.use(r),o.get("/available",n.getAvailableExams),o.get("/upcoming",n.getUpcomingExams),o.get("/history",n.getUserExamHistory),o.get("/stats",n.getUserExamStats),o.get("/analytics",n.getUserExamAnalytics),o.get("/certificates",n.getUserCertificates),o.get("/recommendations",n.getExamRecommendations),o.get("/:examId",n.getExamDetails),o.use(i),o.post("/:examId/start",n.startExam),o.post("/attempts/:attemptId/responses",n.submitQuestionResponse),o.post("/attempts/:attemptId/complete",n.completeExam),o.get("/attempts/:attemptId",n.getExamAttempt),o.post("/attempts/:attemptId/resume",n.resumeExam),o.get("/attempts/:attemptId/results",n.getExamResults),o.post("/attempts/:attemptId/generate-certificate",n.generateCertificate),o.get("/certificates/:certificateId/download",n.downloadCertificate),o.post("/certificates/auto-generate",n.autoGenerateCertificates),o.get("/:examId/leaderboard",n.getExamLeaderboard),o.get("/:examId/progress",n.getExamProgress),o.post("/attempts/:attemptId/progress",n.saveExamProgress),o.post("/attempts/:attemptId/report-issue",n.reportExamIssue),e.exports=o},2172:e=>{"use strict";e.exports=require("date-fns")},2431:(e,t,s)=>{s(5135),s(818).config();const a=s(7252),n=s(8577),r=s(2525),i=s(7174),o=s(1763),c=s(7749),l=s(2096),u=s(8611),d=s(4437),m=s(6928),g=s(68),h=s(9665),p=s(2589),y=s(4362),{auth:f}=s(4997),w=s(7455),x=s(5932),b=s(2911),v=s(8949),A=s(4150),E=s(920),I=s(2157),C=s(2505),k=s(4283),S=s(6194),M=s(3086),D=s(4469),q=s(5714),T=s(5897),P=a(),R=u.createServer(P),N=d(R,{cors:{origin:[process.env.FRONTEND_URL],credentials:!0,methods:["GET","POST","PUT","DELETE","PATCH","OPTIONS"]}}),L=process.env.PORT||5e3;P.use(r({contentSecurityPolicy:{directives:{defaultSrc:["'self'"],styleSrc:["'self'","'unsafe-inline'"],scriptSrc:["'self'"],imgSrc:["'self'","data:","https:"]}},crossOriginEmbedderPolicy:!1})),P.use(n({origin:[process.env.FRONTEND_URL],credentials:!0,methods:["GET","POST","PUT","DELETE","PATCH","OPTIONS"],allowedHeaders:["Content-Type","Authorization","X-Requested-With"],exposedHeaders:["Content-Range","X-Content-Range"]}));const j=o({windowMs:parseInt(process.env.RATE_LIMIT_WINDOW_MS)||9e5,max:parseInt(process.env.RATE_LIMIT_MAX_REQUESTS)||1e3,message:{error:"Too many requests from this IP, please try again later.",retryAfter:Math.ceil((parseInt(process.env.RATE_LIMIT_WINDOW_MS)||9e5)/1e3)},standardHeaders:!0,legacyHeaders:!1}),U=c({windowMs:parseInt(process.env.SLOW_DOWN_WINDOW_MS)||9e5,delayAfter:parseInt(process.env.SLOW_DOWN_DELAY_AFTER)||500,delayMs:()=>parseInt(process.env.SLOW_DOWN_DELAY_MS)||500});P.use(j),P.use(U),P.use(i()),P.use(a.json({limit:"10mb"})),P.use(a.urlencoded({extended:!0,limit:"10mb"})),P.use("/uploads",a.static(m.join(__dirname,"uploads"))),P.use(l("combined",{stream:h.stream})),P.use((e,t,s)=>{const a=Date.now();t.on("finish",()=>{const s=Date.now()-a;h.logRequest(e,t,s)}),s()}),P.get("/health",(e,t)=>{t.status(200).json({status:"OK",timestamp:(new Date).toISOString(),uptime:process.uptime(),environment:"production",version:process.env.npm_package_version||"1.0.0"})}),N.on("connection",e=>{h.info(`🔌 WebSocket connected: ${e.id}`),e.on("join-admin",t=>{e.join("admin-room"),h.info(`👤 Admin joined: ${t.userId}`)}),e.on("join-user",t=>{e.join(`user-${t.userId}`),h.info(`👤 User joined: ${t.userId}`)}),e.on("exam-attempt-started",t=>{e.to("admin-room").emit("exam-attempt-started",t)}),e.on("exam-attempt-completed",t=>{e.to("admin-room").emit("exam-attempt-completed",t),e.to(`user-${t.userId}`).emit("exam-result-ready",t)}),e.on("booking-created",t=>{e.to("admin-room").emit("booking-created",t)}),e.on("payment-processed",t=>{e.to("admin-room").emit("payment-processed",t),e.to(`user-${t.userId}`).emit("payment-confirmed",t)}),e.on("user-login",t=>{e.to("admin-room").emit("user-login",t)}),e.on("user-logout",t=>{e.to("admin-room").emit("user-logout",t)}),e.on("send-notification",t=>{e.to(`user-${t.userId}`).emit("notification-received",t)}),e.on("disconnect",()=>{h.info(`🔌 WebSocket disconnected: ${e.id}`)})});const _=new w,O=new x;_.setSocketIO(N),global.io=N,global.notificationService=_,global.notificationScheduler=O,P.use("/api/v1/auth",b),P.use("/api/v1/users",f,v),P.use("/api/v1/exam-categories",A),P.use("/api/v1/questions",f,E),P.use("/api/v1/exams",I),P.use("/api/v1/bookings",f,C),P.use("/api/v1/attempts",f,k),P.use("/api/v1/payments",f,S),P.use("/api/v1/billing",f,M),P.use("/api/v1/analytics",f,D),P.use("/api/v1/admin",f,q),P.use("/api/v1/notifications",f,T),P.use(y),P.use(p),process.on("SIGTERM",async()=>{h.info("SIGTERM received, shutting down gracefully"),O.stop(),await g.disconnect(),process.exit(0)}),process.on("SIGINT",async()=>{h.info("SIGINT received, shutting down gracefully"),O.stop(),await g.disconnect(),process.exit(0)}),process.on("unhandledRejection",(e,t)=>{h.error("Unhandled Rejection at:",t,"reason:",e),process.exit(1)}),process.on("uncaughtException",e=>{h.error("Uncaught Exception:",e),process.exit(1)}),async function(){try{await g.connect(),O.start(),R.listen(L,"0.0.0.0",()=>{h.info(`🚀 Server is running on port ${L}`),h.info("📊 Environment: production"),h.info(`🔗 Health check: http://localhost:${L}/health`),h.info(`🔗 Network access: http://192.168.0.7:${L}/health`),h.info(`🔌 WebSocket: ws://localhost:${L}`),h.info(`📚 API Documentation: http://localhost:${L}/api/v1/docs`)})}catch(e){h.error("Failed to start server:",e),process.exit(1)}}(),e.exports=P},2446:e=>{"use strict";e.exports=require("joi")},2505:(e,t,s)=>{const a=s(7252),n=s(8354),r=s(20),{auth:i,studentOnly:o,adminOnly:c,adminOrModerator:l}=s(4997),u=a.Router();u.use(i),u.get("/admin/all",l,n.getAllBookings),u.post("/admin/create",l,n.createBookingForUser),u.patch("/admin/:bookingId/status",l,n.updateBookingStatus),u.get("/admin/analytics",l,n.getBookingAnalytics),u.get("/admin/calendar",l,r.getCalendarBookings),u.get("/admin/calendar/overview",l,r.getCalendarOverview),u.get("/admin/calendar/stats",l,r.getCalendarStats),u.get("/admin/calendar/weekly/:date",l,r.getWeeklyCalendar),u.get("/admin/calendar/monthly/:date",l,r.getMonthlyCalendar),u.get("/admin/calendar/availability/:date",l,r.getDateAvailability),u.get("/admin/calendar/categories",l,r.getExamCategories),u.post("/admin/calendar/conflicts",l,r.checkConflicts),u.patch("/admin/calendar/:bookingId/reschedule",l,r.rescheduleBooking),u.patch("/admin/calendar/:bookingId/status",l,r.updateBookingStatus),u.use(o),u.post("/",n.createBooking),u.get("/",n.getUserBookings),u.get("/stats",n.getBookingStats),u.get("/available-exams",n.getAvailableExams),u.get("/:bookingId",n.getBooking),u.put("/:bookingId",n.updateBooking),u.delete("/:bookingId",n.cancelBooking),u.post("/:bookingId/start-exam",n.startExam),e.exports=u},2525:e=>{"use strict";e.exports=require("helmet")},2589:(e,t,s)=>{const a=s(9665);e.exports=(e,t,s,n)=>{let r={...e};r.message=e.message,a.logError(e,t),"P2002"===e.code&&(r={message:"Duplicate field value entered",statusCode:400}),"P2014"===e.code&&(r={message:"Invalid ID value",statusCode:400}),"P2003"===e.code&&(r={message:"Invalid input data",statusCode:400}),"P2025"===e.code&&(r={message:"Record not found",statusCode:404}),"CastError"===e.name&&(r={message:"Resource not found",statusCode:404}),11e3===e.code&&(r={message:"Duplicate field value entered",statusCode:400}),"ValidationError"===e.name&&(r={message:Object.values(e.errors).map(e=>e.message).join(", "),statusCode:400}),"JsonWebTokenError"===e.name&&(r={message:"Invalid token",statusCode:401}),"TokenExpiredError"===e.name&&(r={message:"Token expired",statusCode:401}),"StripeCardError"===e.type&&(r={message:e.message,statusCode:400}),"StripeInvalidRequestError"===e.type&&(r={message:"Invalid payment request",statusCode:400}),"LIMIT_FILE_SIZE"===e.code&&(r={message:"File too large",statusCode:400}),"LIMIT_UNEXPECTED_FILE"===e.code&&(r={message:"Unexpected file field",statusCode:400}),429===e.status&&(r={message:"Too many requests, please try again later",statusCode:429});const i=r.statusCode||500,o=r.message||"Server Error",c={success:!1,error:{message:500===i?"Internal Server Error":o},timestamp:(new Date).toISOString(),path:t.path,method:t.method};429===i&&s.set("Retry-After","60"),s.status(i).json(c)}},2703:e=>{"use strict";e.exports=require("node-cron")},2733:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),r=new a;e.exports=class{async getDashboardStatistics(){try{const[e,t,s,a,n,i,o,c,l,u,d]=await Promise.all([r.user.count(),r.exam.count(),r.question.count(),r.examAttempt.count(),r.payment.aggregate({_sum:{amount:!0}}),r.user.findMany({take:5,orderBy:{createdAt:"desc"},select:{id:!0,firstName:!0,lastName:!0,email:!0,role:!0,createdAt:!0}}),r.exam.findMany({take:5,orderBy:{createdAt:"desc"},select:{id:!0,title:!0,examCategory:{select:{name:!0}},price:!0,createdAt:!0}}),r.examAttempt.findMany({take:5,orderBy:{createdAt:"desc"},include:{user:{select:{firstName:!0,lastName:!0}},exam:{select:{title:!0}}}}),this.getUserGrowthStats(),this.getExamPerformanceStats(),this.getCategoryStatistics()]);return{overview:{totalUsers:e,totalExams:t,totalQuestions:s,totalAttempts:a,totalRevenue:n._sum.amount||0},recent:{users:i,exams:o,attempts:c},analytics:{userGrowth:l,examPerformance:u,categoryStats:d}}}catch(e){throw n.error("Get dashboard statistics failed",e),e}}async getSystemHealth(){try{const[e,t,s,a,n]=await Promise.all([this.checkDatabaseConnection(),this.getActiveUsersCount(),this.getSystemLoad(),this.getErrorCount(),this.getSystemUptime()]);return{status:e&&t>0?"healthy":"degraded",database:e,activeUsers:t,systemLoad:s,errorCount:a,uptime:n,timestamp:new Date}}catch(e){return n.error("Get system health failed",e),{status:"unhealthy",error:e.message,timestamp:new Date}}}async getAuditLogs(e={}){const{page:t=1,limit:s=50,userId:a,action:i,resource:o,startDate:c,endDate:l}=e,u=(t-1)*s;try{const e={};a&&(e.userId=a),i&&(e.action=i),o&&(e.resource=o),(c||l)&&(e.createdAt={},c&&(e.createdAt.gte=new Date(c)),l&&(e.createdAt.lte=new Date(l)));const[n,d]=await Promise.all([r.auditLog.findMany({where:e,include:{user:{select:{firstName:!0,lastName:!0,email:!0,role:!0}}},orderBy:{createdAt:"desc"},skip:u,take:s}),r.auditLog.count({where:e})]);return{logs:n,pagination:{page:t,limit:s,total:d,pages:Math.ceil(d/s),hasNext:t*s<d,hasPrev:t>1}}}catch(e){throw n.error("Get audit logs failed",e),e}}async exportData(e,t,s){try{let a,n,r;switch(e){case"users":a=await this.exportUsers(s),n=`users_${Date.now()}.${t}`;break;case"exams":a=await this.exportExams(s),n=`exams_${Date.now()}.${t}`;break;case"questions":a=await this.exportQuestions(s),n=`questions_${Date.now()}.${t}`;break;case"attempts":a=await this.exportAttempts(s),n=`attempts_${Date.now()}.${t}`;break;case"payments":a=await this.exportPayments(s),n=`payments_${Date.now()}.${t}`;break;default:throw new Error("Invalid export type")}switch(t){case"json":r=JSON.stringify(a,null,2);break;case"csv":r=this.convertToCSV(a);break;case"xlsx":r=await this.convertToXLSX(a);break;default:throw new Error("Invalid export format")}return{filename:n,data:r,format:t,recordCount:Array.isArray(a)?a.length:1}}catch(e){throw n.error("Export data failed",e),e}}async createSystemBackup(){try{const e={timestamp:new Date,version:process.env.APP_VERSION||"1.0.0",data:{users:await r.user.findMany(),exams:await r.exam.findMany(),questions:await r.question.findMany(),categories:await r.examCategory.findMany(),attempts:await r.examAttempt.findMany(),payments:await r.payment.findMany()}};return{backupId:`backup_${Date.now()}`,timestamp:e.timestamp,size:JSON.stringify(e).length,status:"completed"}}catch(e){throw n.error("Create system backup failed",e),e}}async checkDatabaseConnection(){try{return await(r.$queryRaw`SELECT 1`),!0}catch(e){return!1}}async getActiveUsersCount(){try{return await r.user.count({where:{isActive:!0,lastLoginAt:{gte:new Date(Date.now()-864e5)}}})}catch(e){return n.error("Get active users count failed",e),0}}async getSystemLoad(){try{return{cpu:100*Math.random(),memory:100*Math.random(),disk:100*Math.random()}}catch(e){return n.error("Get system load failed",e),{cpu:0,memory:0,disk:0}}}async getErrorCount(){try{return await r.auditLog.count({where:{action:{contains:"ERROR"},createdAt:{gte:new Date(Date.now()-864e5)}}})}catch(e){return n.error("Get error count failed",e),0}}async getSystemUptime(){try{return{uptime:process.uptime(),startTime:new Date(Date.now()-1e3*process.uptime())}}catch(e){return n.error("Get system uptime failed",e),{uptime:0,startTime:new Date}}}async getUserGrowthStats(){try{return(await r.user.groupBy({by:["createdAt"],_count:{id:!0},orderBy:{createdAt:"asc"}})).map(e=>({date:e.createdAt,count:e._count.id}))}catch(e){return n.error("Get user growth stats failed",e),[]}}async getExamPerformanceStats(){try{return(await r.examAttempt.groupBy({by:["examId"],_count:{id:!0},_avg:{percentage:!0}})).map(e=>({examId:e.examId,attempts:e._count.id,averageScore:e._avg.percentage||0}))}catch(e){return n.error("Get exam performance stats failed",e),[]}}async getCategoryStatistics(){try{return(await r.examCategory.findMany({include:{_count:{select:{exams:!0,questions:!0}}}})).map(e=>({id:e.id,name:e.name,examCount:e._count.exams,questionCount:e._count.questions}))}catch(e){return n.error("Get category statistics failed",e),[]}}async exportUsers(e={}){try{const t={};return e.role&&(t.role=e.role),void 0!==e.isActive&&(t.isActive=e.isActive),await r.user.findMany({where:t,select:{id:!0,email:!0,firstName:!0,lastName:!0,role:!0,isActive:!0,isEmailVerified:!0,createdAt:!0,lastLoginAt:!0}})}catch(e){throw n.error("Export users failed",e),e}}async exportExams(e={}){try{const t={};return e.examCategoryId&&(t.examCategoryId=e.examCategoryId),void 0!==e.isActive&&(t.isActive=e.isActive),await r.exam.findMany({where:t,include:{examCategory:{select:{name:!0}}}})}catch(e){throw n.error("Export exams failed",e),e}}async exportQuestions(e={}){try{const t={};return e.examCategoryId&&(t.examCategoryId=e.examCategoryId),e.difficulty&&(t.difficulty=e.difficulty),e.type&&(t.type=e.type),await r.question.findMany({where:t,include:{options:!0,examCategory:{select:{name:!0}}}})}catch(e){throw n.error("Export questions failed",e),e}}async exportAttempts(e={}){try{const t={};return e.status&&(t.status=e.status),e.examId&&(t.examId=e.examId),await r.examAttempt.findMany({where:t,include:{user:{select:{firstName:!0,lastName:!0,email:!0}},exam:{select:{title:!0,examCategory:{select:{name:!0}}}}}})}catch(e){throw n.error("Export attempts failed",e),e}}async exportPayments(e={}){try{const t={};return e.status&&(t.status=e.status),e.startDate&&(t.createdAt={gte:new Date(e.startDate)}),e.endDate&&(t.createdAt={...t.createdAt,lte:new Date(e.endDate)}),await r.payment.findMany({where:t,include:{user:{select:{firstName:!0,lastName:!0,email:!0}},exam:{select:{title:!0}}}})}catch(e){throw n.error("Export payments failed",e),e}}convertToCSV(e){if(!Array.isArray(e)||0===e.length)return"";const t=Object.keys(e[0]),s=[t.join(",")];for(const a of e){const e=t.map(e=>{const t=a[e];return"string"==typeof t?`"${t.replace(/"/g,'""')}"`:t});s.push(e.join(","))}return s.join("\n")}async convertToXLSX(e){return JSON.stringify(e)}}},2834:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(7534),{validatePayment:r}=(s(2938),s(6650)),{auth:i,authorize:o}=s(4997),c=s(9665),l=s(3709),u=new a;e.exports=new class{async createPayment(e,t){try{const{error:s,value:a}=r(e.body);if(s)return t.status(400).json({success:!1,error:{message:"Validation failed",details:s.details}});const{bookingId:i,paymentMethod:o,description:c}=a,l=e.user.id,d=await u.examBooking.findFirst({where:{id:i,userId:l},include:{exam:{select:{id:!0,title:!0,price:!0,currency:!0}}}});if(!d)return t.status(404).json({success:!1,error:{message:"Booking not found or access denied"}});if(await u.payment.findFirst({where:{bookingId:i,userId:l}}))return t.status(400).json({success:!1,error:{message:"Payment already exists for this booking"}});const m=await n.createPayment({userId:l,bookingId:i,amount:d.exam.price,currency:d.exam.currency,paymentMethod:o,description:c||`Payment for ${d.exam.title}`});t.status(201).json({success:!0,message:"Payment created successfully",data:{payment:{id:m.id,amount:m.amount,currency:m.currency,status:m.status,paymentMethod:m.paymentMethod,createdAt:m.createdAt},exam:{id:d.exam.id,title:d.exam.title}}})}catch(e){c.error("Create payment error:",e),t.status(500).json({success:!1,error:{message:"Failed to create payment"}})}}async processPayment(e,t){try{const{paymentId:s}=e.params,a=e.user.id,r=await n.getPayment(s,a),i=await n.processPayment(s,"COMPLETED",{processedAt:new Date,method:r.paymentMethod});await u.examBooking.update({where:{id:r.bookingId},data:{status:"CONFIRMED",paymentId:s}}),t.status(200).json({success:!0,message:"Payment processed successfully",data:{payment:{id:i.id,status:i.status,amount:i.amount,currency:i.currency}}})}catch(e){c.error("Process payment error:",e),t.status(500).json({success:!1,error:{message:"Failed to process payment"}})}}async processPaymentOnPrint(e,t){try{const{bookingId:a}=e.params,n=e.user.id,r=await u.examBooking.findUnique({where:{id:a},include:{exam:!0,user:!0,payment:!0}});if(!r)return t.status(404).json({success:!1,error:{message:"Booking not found"}});if(r.payment){const e=s(3097),n=await e.generateBill(a);return t.status(200).json({success:!0,message:"Payment already exists for this booking",data:{payment:r.payment,booking:{id:r.id,status:r.status},bill:n}})}const i="ADMIN"===e.user.role||"SUPER_ADMIN"===e.user.role,o=r.userId===n;if(!i&&!o)return t.status(403).json({success:!1,error:{message:"Access denied. You can only process payments for your own bookings."}});const c=await u.payment.create({data:{userId:r.userId,bookingId:r.id,amount:r.totalAmount,currency:r.currency,status:"COMPLETED",paymentMethod:"CASH",description:`Payment for ${r.exam.title}`,metadata:{processedBy:n,processedAt:(new Date).toISOString(),method:"BILL_PRINT",processedByRole:e.user.role}}});await u.examBooking.update({where:{id:a},data:{status:"CONFIRMED",paymentId:c.id}}),await u.auditLog.create({data:{userId:n,action:"PAYMENT_PROCESSED_ON_PRINT",resource:"PAYMENT",resourceId:c.id,details:{bookingId:r.id,amount:c.amount,currency:c.currency,paymentMethod:c.paymentMethod,targetUserId:r.userId,processedByRole:e.user.role},ipAddress:e.ip,userAgent:e.get("User-Agent")}}),await l.sendPaymentConfirmation(r.user.email,{bookingId:r.id,examTitle:r.exam.title,amount:c.amount,currency:c.currency,paymentMethod:c.paymentMethod,firstName:r.user.firstName}),t.status(200).json({success:!0,message:"Payment processed successfully",data:{payment:c,booking:{id:r.id,status:"CONFIRMED"}}})}catch(e){c.error("Process payment on print failed",e),t.status(500).json({success:!1,error:{message:"Failed to process payment"}})}}async getPayment(e,t){try{const{paymentId:s}=e.params,a=e.user.id,r=await n.getPayment(s,a);t.status(200).json({success:!0,data:r})}catch(e){c.error("Get payment error:",e),t.status(404).json({success:!1,error:{message:"Payment not found"}})}}async getUserPayments(e,t){try{const s=e.user.id,{page:a=1,limit:r=10,status:i}=e.query,o=await n.getUserPayments(s,{page:parseInt(a),limit:parseInt(r),status:i});t.status(200).json({success:!0,data:o})}catch(e){c.error("Get user payments error:",e),t.status(500).json({success:!1,error:{message:"Failed to get payment history"}})}}async refundPayment(e,t){try{const{paymentId:s}=e.params,{amount:a,reason:r}=e.body,i=(e.user.id,await n.refundPayment(s,a,r));t.status(200).json({success:!0,message:"Payment refunded successfully",data:i})}catch(e){c.error("Refund payment error:",e),t.status(500).json({success:!1,error:{message:"Failed to refund payment"}})}}async getPaymentStats(e,t){try{const{startDate:s,endDate:a,paymentMethod:r}=e.query,i=await n.getPaymentStatistics({startDate:s,endDate:a,paymentMethod:r});t.status(200).json({success:!0,data:i})}catch(e){c.error("Get payment stats error:",e),t.status(500).json({success:!1,error:{message:"Failed to get payment statistics"}})}}}},2911:(e,t,s)=>{const a=s(7252),n=s(3668),{auth:r,adminOnly:i}=s(4997),o=a.Router();o.post("/login",n.login),o.post("/logout",r,n.logout),o.post("/refresh-token",n.refreshToken),o.get("/verify-email/:token",n.verifyEmail),o.post("/request-password-reset",n.requestPasswordReset),o.post("/reset-password",n.resetPassword),o.get("/profile",r,n.getProfile),o.put("/profile",r,n.updateProfile),o.put("/change-password",r,n.changePassword),o.post("/register",r,i,n.register),e.exports=o},2938:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),r=new a;e.exports=class{async canUserBookExam(e,t){try{const s=await r.exam.findUnique({where:{id:t},include:{attempts:{where:{userId:e}}}});if(!s)return{success:!1,message:"Exam not found"};if(!s.isActive)return{success:!1,message:"Exam is not active"};const a=s.attempts.filter(e=>"COMPLETED"===e.status||"IN_PROGRESS"===e.status);if(a.length>0&&!s.allowRetakes)return{success:!1,message:"You have already taken this exam and retakes are not allowed"};if(a.length>=s.maxRetakes)return{success:!1,message:`You have reached the maximum number of retakes (${s.maxRetakes})`};const n=new Date;return s.scheduledStart&&n<s.scheduledStart?{success:!1,message:"Exam is not yet available for booking"}:s.scheduledEnd&&n>s.scheduledEnd?{success:!1,message:"Exam booking period has ended"}:{success:!0}}catch(e){return n.error("Can user book exam check failed",e),{success:!1,message:"Failed to validate booking eligibility"}}}async validateScheduling(e,t){try{const s=new Date(t);if(s<=new Date)return{success:!1,message:"Scheduled time must be in the future"};const a=await r.exam.findUnique({where:{id:e}});return a.scheduledStart&&s<a.scheduledStart?{success:!1,message:"Scheduled time is before exam start date"}:a.scheduledEnd&&s>a.scheduledEnd?{success:!1,message:"Scheduled time is after exam end date"}:(await r.examBooking.findMany({where:{examId:e,scheduledAt:{gte:new Date(s.getTime()-72e5),lte:new Date(s.getTime()+72e5)},status:{in:["PENDING","CONFIRMED"]}}})).length>0?{success:!1,message:"There is a scheduling conflict. Please choose a different time."}:{success:!0}}catch(e){return n.error("Scheduling validation failed",e),{success:!1,message:"Failed to validate scheduling"}}}async getUserBookings(e,t={}){const{page:s=1,limit:a=10,status:i,examCategoryId:o}=t,c=(s-1)*a;try{const t={userId:e};i&&(t.status=i),o&&(t.exam={examCategoryId:o});const[n,l]=await Promise.all([r.examBooking.findMany({where:t,include:{exam:{include:{examCategory:!0}},payment:!0,attempts:{orderBy:{createdAt:"desc"},take:1}},orderBy:{createdAt:"desc"},skip:c,take:a}),r.examBooking.count({where:t})]);return{bookings:n,pagination:{page:s,limit:a,total:l,pages:Math.ceil(l/a),hasNext:s*a<l,hasPrev:s>1}}}catch(e){throw n.error("Get user bookings failed",e),e}}async getBookingDetails(e,t){try{return await r.examBooking.findFirst({where:{id:e,userId:t},include:{exam:{include:{examCategory:!0,questions:{include:{question:!0}}}},payment:!0,attempts:{include:{responses:{include:{question:!0}}},orderBy:{createdAt:"desc"}}}})}catch(e){throw n.error("Get booking details failed",e),e}}async updateBooking(e,t,s){try{const a=await r.examBooking.findFirst({where:{id:e,userId:t}});return a?"PENDING"!==a.status?{success:!1,message:"Cannot update booking that is not pending"}:{success:!0,booking:await r.examBooking.update({where:{id:e},data:s,include:{exam:{include:{examCategory:!0}}}})}:{success:!1,message:"Booking not found"}}catch(e){return n.error("Update booking failed",e),{success:!1,message:"Failed to update booking"}}}async cancelBooking(e,t,s){try{const a=await r.examBooking.findFirst({where:{id:e,userId:t},include:{exam:!0,user:!0}});if(!a)return{success:!1,message:"Booking not found"};if("CANCELLED"===a.status)return{success:!1,message:"Booking is already cancelled"};if("COMPLETED"===a.status)return{success:!1,message:"Cannot cancel completed booking"};if((await r.examAttempt.findMany({where:{bookingId:e,status:{in:["IN_PROGRESS","NOT_STARTED"]}}})).length>0)return{success:!1,message:"Cannot cancel booking with active attempts"};const n=await r.examBooking.update({where:{id:e},data:{status:"CANCELLED",notes:s?`${a.notes||""}\nCancellation reason: ${s}`:a.notes},include:{exam:!0,user:!0}});return await r.auditLog.create({data:{userId:t,action:"EXAM_BOOKING_CANCELLED",resource:"EXAM_BOOKING",resourceId:e,details:{reason:s,cancelledAt:(new Date).toISOString()},ipAddress:"system",userAgent:"booking-cancellation"}}),{success:!0,booking:n}}catch(e){return n.error("Cancel booking failed",e),{success:!1,message:"Failed to cancel booking"}}}async startExamAttempt(e,t){try{const s=await r.examBooking.findFirst({where:{id:e,userId:t},include:{exam:!0}});if(!s)return{success:!1,message:"Booking not found"};if("CONFIRMED"!==s.status)return{success:!1,message:"Booking must be confirmed before starting exam"};if(s.attemptsUsed>=s.attemptsAllowed)return{success:!1,message:`You have used all ${s.attemptsAllowed} attempts for this exam. No more attempts allowed.`};if(await r.examAttempt.findFirst({where:{bookingId:e,status:{in:["NOT_STARTED","IN_PROGRESS"]}}}))return{success:!1,message:"You already have an active attempt for this booking"};const[a]=await r.$transaction([r.examAttempt.create({data:{userId:t,examId:s.examId,bookingId:e,status:"IN_PROGRESS",startedAt:new Date,ipAddress:"system",userAgent:"system"}}),r.examBooking.update({where:{id:e},data:{attemptsUsed:{increment:1}}})]);return await r.auditLog.create({data:{userId:t,action:"EXAM_ATTEMPT_STARTED",resource:"EXAM_ATTEMPT",resourceId:a.id,details:{bookingId:e,examId:s.examId,startedAt:a.startedAt},ipAddress:"system",userAgent:"exam-start"}}),global.notificationService&&await global.notificationService.notifyExamStarted({...a,exam:s.exam}),{success:!0,attempt:a,exam:s.exam,booking:s}}catch(e){return n.error("Start exam attempt failed",e),{success:!1,message:"Failed to start exam attempt"}}}async getAvailableExams(e,t={}){const{examCategoryId:s,page:a=1,limit:i=10}=t,o=(a-1)*i;try{const t={isActive:!0,isPublic:!0};s&&(t.examCategoryId=s);const n=new Date;t.OR=[{scheduledStart:null},{scheduledStart:{lte:n}}],t.OR.push({scheduledEnd:null},{scheduledEnd:{gte:n}});const[c,l]=await Promise.all([r.exam.findMany({where:t,include:{examCategory:!0,_count:{select:{attempts:{where:{userId:e}}}}},orderBy:{createdAt:"desc"},skip:o,take:i}),r.exam.count({where:t})]),u=c.filter(e=>{const t=e.allowRetakes||0===e._count.attempts,s=e.allowRetakes?e._count.attempts<e.maxRetakes:0===e._count.attempts;return t&&s});return{exams:u,pagination:{page:a,limit:i,total:u.length,pages:Math.ceil(u.length/i),hasNext:a*i<u.length,hasPrev:a>1}}}catch(e){throw n.error("Get available exams failed",e),e}}async getUserBookingStats(e){try{const[t,s,a,n,i,o]=await Promise.all([r.examBooking.count({where:{userId:e}}),r.examBooking.count({where:{userId:e,status:"CONFIRMED"}}),r.examBooking.count({where:{userId:e,status:"PENDING"}}),r.examBooking.count({where:{userId:e,status:"CANCELLED"}}),r.examBooking.aggregate({where:{userId:e,status:"CONFIRMED"},_sum:{totalAmount:!0}}),r.examAttempt.aggregate({where:{userId:e,status:"COMPLETED"},_avg:{percentage:!0}})]);return{totalBookings:t,completedBookings:s,pendingBookings:a,cancelledBookings:n,totalSpent:i._sum.totalAmount||0,averageScore:o._avg.percentage||0,completionRate:t>0?s/t*100:0}}catch(e){throw n.error("Get user booking stats failed",e),e}}async getAllBookings(e={}){const{page:t=1,limit:s=20,status:a,examCategoryId:i,userId:o,startDate:c,endDate:l}=e,u=(t-1)*s;try{const e={};a&&(e.status=a),i&&(e.exam={examCategoryId:i}),o&&(e.userId=o),(c||l)&&(e.createdAt={},c&&(e.createdAt.gte=new Date(c)),l&&(e.createdAt.lte=new Date(l)));const[n,d]=await Promise.all([r.examBooking.findMany({where:e,include:{user:{select:{id:!0,email:!0,firstName:!0,lastName:!0}},exam:{include:{examCategory:!0}},payment:!0,attempts:{orderBy:{createdAt:"desc"},take:1}},orderBy:{createdAt:"desc"},skip:u,take:s}),r.examBooking.count({where:e})]);return{bookings:n,pagination:{page:t,limit:s,total:d,pages:Math.ceil(d/s),hasNext:t*s<d,hasPrev:t>1}}}catch(e){throw n.error("Get all bookings failed",e),e}}async updateBookingStatus(e,t,s,a){try{const n=await r.examBooking.findUnique({where:{id:e},include:{user:!0,exam:!0}});if(!n)return{success:!1,message:"Booking not found"};const i=await r.examBooking.update({where:{id:e},data:{status:t,notes:s?`${n.notes||""}\nAdmin note: ${s}`:n.notes},include:{user:!0,exam:!0}});return await r.auditLog.create({data:{userId:a,action:"EXAM_BOOKING_STATUS_UPDATED",resource:"EXAM_BOOKING",resourceId:e,details:{oldStatus:n.status,newStatus:t,notes:s,updatedAt:(new Date).toISOString()},ipAddress:"system",userAgent:"admin-update"}}),{success:!0,booking:i}}catch(e){return n.error("Update booking status failed",e),{success:!1,message:"Failed to update booking status"}}}async getBookingAnalytics(e={}){const{startDate:t,endDate:s,examCategoryId:a}=e;try{const e={};(t||s)&&(e.createdAt={},t&&(e.createdAt.gte=new Date(t)),s&&(e.createdAt.lte=new Date(s))),a&&(e.exam={examCategoryId:a});const[n,i,o,c,l]=await Promise.all([r.examBooking.count({where:e}),r.examBooking.aggregate({where:{...e,status:"CONFIRMED"},_sum:{totalAmount:!0}}),r.examBooking.groupBy({by:["status"],where:e,_count:{id:!0}}),r.examBooking.groupBy({by:["examCategoryId"],where:e,_count:{id:!0},_sum:{totalAmount:!0}}),r.examBooking.groupBy({by:["createdAt"],where:e,_count:{id:!0},_sum:{totalAmount:!0}})]);return{totalBookings:n,totalRevenue:i._sum.totalAmount||0,bookingsByStatus:o.reduce((e,t)=>(e[t.status]=t._count.id,e),{}),bookingsByCategory:c,dailyBookings:l.map(e=>({date:e.createdAt,count:e._count.id,revenue:e._sum.totalAmount||0}))}}catch(e){throw n.error("Get booking analytics failed",e),e}}}},3086:(e,t,s)=>{const a=s(7252).Router(),n=s(287),{auth:r,authorize:i}=s(4997);a.get("/:bookingId",r,n.generateBill),a.get("/user/bills",r,n.getUserBills),a.get("/admin/all",r,i(["SUPER_ADMIN","ADMIN"]),n.getAllBills),a.get("/:bookingId/download",r,n.downloadBill),e.exports=a},3097:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),r=new a;e.exports=new class{async generateBill(e){try{const t=await r.examBooking.findUnique({where:{id:e},include:{exam:{include:{examCategory:!0}},user:{select:{id:!0,firstName:!0,lastName:!0,email:!0}},payment:!0}});if(!t)throw new Error("Booking not found");const s=`BILL-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,a=new Date,i=new Date(a.getTime()+6048e5),o={billNumber:s,billDate:a,dueDate:i,booking:{id:t.id,scheduledAt:t.scheduledAt,status:t.status},exam:{id:t.exam.id,title:t.exam.title,description:t.exam.description,category:t.exam.examCategory.name,duration:t.exam.duration,totalMarks:t.exam.totalMarks},customer:{id:t.user.id,name:`${t.user.firstName} ${t.user.lastName}`,email:t.user.email},amount:{subtotal:t.totalAmount,tax:0,total:t.totalAmount,currency:t.currency},payment:t.payment?{id:t.payment.id,status:t.payment.status,method:t.payment.paymentMethod,paidAt:t.payment.updatedAt}:null,status:t.payment?"PAID":"PENDING"};return n.info(`Bill generated for booking ${e}: ${s}`),o}catch(e){throw n.error("Error generating bill:",e),e}}async getBillByBookingId(e,t){try{if(!await r.examBooking.findFirst({where:{id:e,userId:t},include:{exam:{include:{examCategory:!0}},user:{select:{id:!0,firstName:!0,lastName:!0,email:!0}},payment:!0}}))throw new Error("Booking not found or access denied");return this.generateBill(e)}catch(e){throw n.error("Error getting bill:",e),e}}async getUserBills(e,t={}){try{const{page:s=1,limit:a=10,status:n}=t,i=(s-1)*a,o={userId:e};n&&(o.payment={status:n});const c=await r.examBooking.findMany({where:o,include:{exam:{include:{examCategory:!0}},payment:!0},orderBy:{createdAt:"desc"},skip:i,take:a});return{bills:await Promise.all(c.map(e=>this.generateBill(e.id))),pagination:{page:s,limit:a,total:c.length}}}catch(e){throw n.error("Error getting user bills:",e),e}}async getAllBills(e={}){try{const{page:t=1,limit:s=10,status:a,startDate:n,endDate:i}=e,o=(t-1)*s,c={};a&&(c.payment={status:a}),n&&i&&(c.createdAt={gte:new Date(n),lte:new Date(i)});const l=await r.examBooking.findMany({where:c,include:{exam:{include:{examCategory:!0}},user:{select:{id:!0,firstName:!0,lastName:!0,email:!0}},payment:!0},orderBy:{createdAt:"desc"},skip:o,take:s});return{bills:await Promise.all(l.map(e=>this.generateBill(e.id))),pagination:{page:t,limit:s,total:l.length}}}catch(e){throw n.error("Error getting all bills:",e),e}}}},3249:(e,t,s)=>{const a=s(8461),n=s(6928),r=s(9896),i=s(9665);e.exports=class{constructor(){this.uploadDir=n.join(__dirname,"../uploads"),this.ensureUploadDirectory()}ensureUploadDirectory(){r.existsSync(this.uploadDir)||r.mkdirSync(this.uploadDir,{recursive:!0}),["questions","profiles","temp"].forEach(e=>{const t=n.join(this.uploadDir,e);r.existsSync(t)||r.mkdirSync(t,{recursive:!0})})}getImageUploadMiddleware(){const e=a.diskStorage({destination:(e,t,s)=>{s(null,n.join(this.uploadDir,"questions"))},filename:(e,t,s)=>{s(null,`question-${Date.now()+"-"+Math.round(1e9*Math.random())}${n.extname(t.originalname)}`)}});return a({storage:e,fileFilter:(e,t,s)=>{t.mimetype.startsWith("image/")?s(null,!0):s(new Error("Only image files are allowed"),!1)},limits:{fileSize:5242880,files:5}})}async uploadQuestionImages(e,t){try{const s=[];if(!e||0===e.length)return s;for(const a of e){const e={questionId:t,imageUrl:`/uploads/questions/${a.filename}`,altText:a.originalname,sortOrder:s.length};s.push(e)}return s}catch(e){throw i.error("Upload question images failed",e),e}}async deleteImageFile(e){try{if(e&&e.startsWith("/uploads/")){const t=n.join(__dirname,"..",e);if(r.existsSync(t))return r.unlinkSync(t),!0}return!1}catch(e){return i.error("Delete image file failed",e),!1}}getImageUrl(e){return`/uploads/questions/${e}`}validateImageFile(e){return["image/jpeg","image/jpg","image/png","image/gif","image/webp"].includes(e.mimetype)?e.size>5242880?{valid:!1,error:"File size too large. Maximum size is 5MB."}:{valid:!0}:{valid:!1,error:"Invalid file type. Only JPEG, PNG, GIF, and WebP are allowed."}}}},3668:(e,t,s)=>{const a=s(4729),{PrismaClient:n}=(s(829),s(6330)),{v4:r}=s(3903),i=s(9665),o=s(1158),c=s(6848),{validateUserCreation:l,validateLogin:u,validatePasswordReset:d}=s(1652),m=new n,g=new o,h=new c;e.exports=new class{async register(e,t){try{const{error:s,value:n}=l(e.body);if(s)return t.status(400).json({success:!1,error:{message:"Validation failed",details:s.details}});const{email:o,password:c,firstName:u,lastName:d,role:g="STUDENT",phone:p,dateOfBirth:y,gender:f,address:w,departmentId:x,profilePicture:b,status:v="active",isPhoneVerified:A=!1}=n;if(await m.user.findUnique({where:{email:o.toLowerCase()}}))return t.status(409).json({success:!1,error:{message:"User with this email already exists"}});const E=parseInt(process.env.BCRYPT_ROUNDS)||12,I=await a.hash(c,E),C=await m.user.create({data:{email:o.toLowerCase(),password:I,firstName:u,lastName:d,role:g,phone:p,dateOfBirth:y?new Date(y):null,gender:f,address:w,departmentId:x,profilePicture:b,status:v,isPhoneVerified:A,emailVerificationToken:r(),isEmailVerified:"STUDENT"!==g},select:{id:!0,email:!0,firstName:!0,lastName:!0,role:!0,phone:!0,dateOfBirth:!0,gender:!0,address:!0,departmentId:!0,profilePicture:!0,status:!0,isPhoneVerified:!0,isEmailVerified:!0,isActive:!0,createdAt:!0}});"STUDENT"!==g||C.isEmailVerified||await h.sendVerificationEmail(C.email,C.emailVerificationToken),await m.auditLog.create({data:{userId:e.user?.id||null,action:"USER_REGISTERED",resource:"USER",resourceId:C.id,details:{registeredUser:C.email,role:C.role,registeredBy:e.user?.id||"system"},ipAddress:e.ip,userAgent:e.get("User-Agent")}}),global.notificationService&&(await global.notificationService.notifyUserRegistered(C),await global.notificationService.notifyAdminsNewUser(C)),i.info("User registered successfully",{userId:C.id,email:C.email,role:C.role,registeredBy:e.user?.id||"system"}),t.status(201).json({success:!0,message:"User registered successfully",data:{user:C,requiresVerification:!C.isEmailVerified}})}catch(e){i.error("Registration failed",e),t.status(500).json({success:!1,error:{message:"Registration failed"}})}}async login(e,t){try{const{error:s,value:n}=u(e.body);if(s)return t.status(400).json({success:!1,error:{message:"Validation failed",details:s.details}});const{email:r,password:o,rememberMe:c=!1}=n,l=await m.user.findUnique({where:{email:r.toLowerCase()},select:{id:!0,email:!0,password:!0,firstName:!0,lastName:!0,role:!0,isActive:!0,isEmailVerified:!0,loginAttempts:!0,lockedUntil:!0,lastLoginAt:!0}});if(!l)return t.status(401).json({success:!1,error:{message:"Invalid credentials"}});if(l.lockedUntil&&new Date<l.lockedUntil)return t.status(423).json({success:!1,error:{message:"Account is temporarily locked due to multiple failed login attempts",lockedUntil:l.lockedUntil}});if(!l.isActive)return t.status(401).json({success:!1,error:{message:"Account is deactivated"}});if(!await a.compare(o,l.password))return await g.handleFailedLogin(l.id,l.loginAttempts),t.status(401).json({success:!1,error:{message:"Invalid credentials"}});await m.user.update({where:{id:l.id},data:{loginAttempts:0,lockedUntil:null,lastLoginAt:new Date}});const d=g.generateAccessToken(l.id),h=g.generateRefreshToken(l.id),p=await g.createUserSession(l.id,h,c,e.ip,e.get("User-Agent")),y={id:l.id,email:l.email,firstName:l.firstName,lastName:l.lastName,role:l.role,isEmailVerified:l.isEmailVerified};await m.auditLog.create({data:{userId:l.id,action:"USER_LOGIN",resource:"USER",resourceId:l.id,details:{loginMethod:"email",rememberMe:c,sessionId:p.id},ipAddress:e.ip,userAgent:e.get("User-Agent")}}),i.info("User logged in successfully",{userId:l.id,email:l.email,role:l.role,ip:e.ip}),global.io&&global.io.to("admin-room").emit("user-login",{userId:l.id,userName:`${l.firstName} ${l.lastName}`,userRole:l.role,timestamp:(new Date).toISOString()}),t.cookie("refreshToken",h,{httpOnly:!0,secure:!0,sameSite:"strict",maxAge:c?2592e6:6048e5}),t.status(200).json({success:!0,message:"Login successful",data:{user:y,accessToken:d,expiresIn:process.env.JWT_EXPIRES_IN||"7d"}})}catch(e){i.error("Login failed",e),t.status(500).json({success:!1,error:{message:"Login failed"}})}}async logout(e,t){try{const{token:s}=e;s&&await g.invalidateSession(s),t.clearCookie("refreshToken"),await m.auditLog.create({data:{userId:e.user?.id,action:"USER_LOGOUT",resource:"USER",resourceId:e.user?.id,details:{logoutMethod:"manual"},ipAddress:e.ip,userAgent:e.get("User-Agent")}}),i.info("User logged out",{userId:e.user?.id,email:e.user?.email}),global.io&&e.user&&global.io.to("admin-room").emit("user-logout",{userId:e.user.id,userName:`${e.user.firstName} ${e.user.lastName}`,userRole:e.user.role,timestamp:(new Date).toISOString()}),t.status(200).json({success:!0,message:"Logout successful"})}catch(e){i.error("Logout failed",e),t.status(500).json({success:!1,error:{message:"Logout failed"}})}}async refreshToken(e,t){try{const{refreshToken:s}=e.cookies;if(!s)return t.status(401).json({success:!1,error:{message:"Refresh token not provided"}});const a=await g.refreshAccessToken(s);if(!a.success)return t.status(401).json(a);t.status(200).json({success:!0,message:"Token refreshed successfully",data:{accessToken:a.accessToken,expiresIn:process.env.JWT_EXPIRES_IN||"7d"}})}catch(e){i.error("Token refresh failed",e),t.status(500).json({success:!1,error:{message:"Token refresh failed"}})}}async verifyEmail(e,t){try{const{token:s}=e.params,a=await g.verifyEmailToken(s);if(!a.success)return t.status(400).json(a);t.status(200).json({success:!0,message:"Email verified successfully"})}catch(e){i.error("Email verification failed",e),t.status(500).json({success:!1,error:{message:"Email verification failed"}})}}async requestPasswordReset(e,t){try{const{email:s}=e.body;if(!s)return t.status(400).json({success:!1,error:{message:"Email is required"}});await g.requestPasswordReset(s),t.status(200).json({success:!0,message:"If an account with that email exists, a password reset link has been sent"})}catch(e){i.error("Password reset request failed",e),t.status(500).json({success:!1,error:{message:"Password reset request failed"}})}}async resetPassword(e,t){try{const{error:s,value:a}=d(e.body);if(s)return t.status(400).json({success:!1,error:{message:"Validation failed",details:s.details}});const{token:n,password:r}=a,i=await g.resetPassword(n,r);if(!i.success)return t.status(400).json(i);t.status(200).json({success:!0,message:"Password reset successfully"})}catch(e){i.error("Password reset failed",e),t.status(500).json({success:!1,error:{message:"Password reset failed"}})}}async getProfile(e,t){try{const s=await m.user.findUnique({where:{id:e.user.id},select:{id:!0,email:!0,firstName:!0,lastName:!0,phone:!0,dateOfBirth:!0,gender:!0,profileImage:!0,profilePicture:!0,address:!0,departmentId:!0,role:!0,status:!0,isActive:!0,isEmailVerified:!0,isPhoneVerified:!0,lastLoginAt:!0,loginAttempts:!0,lockedUntil:!0,createdAt:!0,updatedAt:!0}});t.status(200).json({success:!0,data:{user:s}})}catch(e){i.error("Get profile failed",e),t.status(500).json({success:!1,error:{message:"Failed to get profile"}})}}async updateProfile(e,t){try{const{firstName:s,lastName:a,phone:n,dateOfBirth:r,gender:i,address:o,profilePicture:c}=e.body,l=await m.user.update({where:{id:e.user.id},data:{firstName:s,lastName:a,phone:n,dateOfBirth:r?new Date(r):null,gender:i,address:o,profilePicture:c},select:{id:!0,email:!0,firstName:!0,lastName:!0,phone:!0,dateOfBirth:!0,gender:!0,profileImage:!0,profilePicture:!0,address:!0,departmentId:!0,role:!0,status:!0,isActive:!0,isEmailVerified:!0,isPhoneVerified:!0,lastLoginAt:!0,createdAt:!0,updatedAt:!0}});await m.auditLog.create({data:{userId:e.user.id,action:"PROFILE_UPDATED",resource:"USER",resourceId:e.user.id,details:{updatedFields:Object.keys(e.body)},ipAddress:e.ip,userAgent:e.get("User-Agent")}}),t.status(200).json({success:!0,message:"Profile updated successfully",data:{user:l}})}catch(e){i.error("Profile update failed",e),t.status(500).json({success:!1,error:{message:"Profile update failed"}})}}async changePassword(e,t){try{const{currentPassword:s,newPassword:n}=e.body,r=await m.user.findUnique({where:{id:e.user.id},select:{password:!0}});if(!await a.compare(s,r.password))return t.status(400).json({success:!1,error:{message:"Current password is incorrect"}});const i=parseInt(process.env.BCRYPT_ROUNDS)||12,o=await a.hash(n,i);await m.user.update({where:{id:e.user.id},data:{password:o}}),await g.invalidateAllUserSessions(e.user.id),await m.auditLog.create({data:{userId:e.user.id,action:"PASSWORD_CHANGED",resource:"USER",resourceId:e.user.id,details:{changedBy:"user"},ipAddress:e.ip,userAgent:e.get("User-Agent")}}),t.status(200).json({success:!0,message:"Password changed successfully. Please login again."})}catch(e){i.error("Password change failed",e),t.status(500).json({success:!1,error:{message:"Password change failed"}})}}}},3709:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),r=s(6848),{v4:i}=s(3903);new a,new r,e.exports=new class{constructor(){this.isEnabled="false"!==process.env.NOTIFICATIONS_ENABLED,this.channels={websocket:!0,email:!0,push:"true"===process.env.PUSH_NOTIFICATIONS_ENABLED,sms:"true"===process.env.SMS_NOTIFICATIONS_ENABLED,database:!0},this.io=null}setSocketIO(e){this.io=e,n.info("🔔 NotificationService: WebSocket instance set")}async sendBookingConfirmation(e,t){try{return this.isEnabled?(n.info("Sending booking confirmation notification",{email:e,bookingId:t.bookingId,examTitle:t.examTitle}),{success:!0,message:"Booking confirmation notification sent"}):(n.info("Notifications disabled, skipping booking confirmation",{email:e}),{success:!0,message:"Notification skipped (disabled)"})}catch(e){return n.error("Failed to send booking confirmation notification",e),{success:!1,message:"Failed to send notification"}}}async sendBookingCancellation(e,t){try{return this.isEnabled?(n.info("Sending booking cancellation notification",{email:e,bookingId:t.bookingId,examTitle:t.examTitle}),{success:!0,message:"Booking cancellation notification sent"}):(n.info("Notifications disabled, skipping booking cancellation",{email:e}),{success:!0,message:"Notification skipped (disabled)"})}catch(e){return n.error("Failed to send booking cancellation notification",e),{success:!1,message:"Failed to send notification"}}}async sendExamReminder(e,t){try{return this.isEnabled?(n.info("Sending exam reminder notification",{email:e,examId:t.examId,examTitle:t.examTitle,startTime:t.startTime}),{success:!0,message:"Exam reminder notification sent"}):(n.info("Notifications disabled, skipping exam reminder",{email:e}),{success:!0,message:"Notification skipped (disabled)"})}catch(e){return n.error("Failed to send exam reminder notification",e),{success:!1,message:"Failed to send notification"}}}async sendExamCompletion(e,t){try{return this.isEnabled?(n.info("Sending exam completion notification",{email:e,examId:t.examId,examTitle:t.examTitle,score:t.score,isPassed:t.isPassed}),{success:!0,message:"Exam completion notification sent"}):(n.info("Notifications disabled, skipping exam completion",{email:e}),{success:!0,message:"Notification skipped (disabled)"})}catch(e){return n.error("Failed to send exam completion notification",e),{success:!1,message:"Failed to send notification"}}}async sendCertificateNotification(e,t){try{return this.isEnabled?(n.info("Sending certificate notification",{email:e,certificateId:t.certificateId,examTitle:t.examTitle,certificateNumber:t.certificateNumber}),{success:!0,message:"Certificate notification sent"}):(n.info("Notifications disabled, skipping certificate notification",{email:e}),{success:!0,message:"Notification skipped (disabled)"})}catch(e){return n.error("Failed to send certificate notification",e),{success:!1,message:"Failed to send notification"}}}}},3903:e=>{"use strict";e.exports=require("uuid")},4150:(e,t,s)=>{const a=s(7252).Router(),{PrismaClient:n}=s(6330),r=new n;a.get("/",async(e,t)=>{try{const e=await r.examCategory.findMany({include:{_count:{select:{exams:!0,questions:!0}}},orderBy:{name:"asc"}});t.json({success:!0,data:e,message:"Exam categories retrieved successfully"})}catch(e){console.error("Error fetching exam categories:",e),t.status(500).json({success:!1,message:"Failed to fetch exam categories",error:e.message})}}),a.get("/:id",async(e,t)=>{try{const{id:s}=e.params,a=await r.examCategory.findUnique({where:{id:parseInt(s)},include:{exams:{include:{_count:{select:{questions:!0}}}},questions:{take:10,orderBy:{createdAt:"desc"}},_count:{select:{exams:!0,questions:!0}}}});if(!a)return t.status(404).json({success:!1,message:"Exam category not found"});t.json({success:!0,data:a,message:"Exam category retrieved successfully"})}catch(e){console.error("Error fetching exam category:",e),t.status(500).json({success:!1,message:"Failed to fetch exam category",error:e.message})}}),a.post("/",async(e,t)=>{try{const{name:s,description:a,color:n,icon:i}=e.body;if(!s)return t.status(400).json({success:!1,message:"Category name is required"});if(await r.examCategory.findFirst({where:{name:{equals:s,mode:"insensitive"}}}))return t.status(409).json({success:!1,message:"Category with this name already exists"});const o=await r.examCategory.create({data:{name:s,description:a,color:n,icon:i}});t.status(201).json({success:!0,data:o,message:"Exam category created successfully"})}catch(e){console.error("Error creating exam category:",e),t.status(500).json({success:!1,message:"Failed to create exam category",error:e.message})}}),a.put("/:id",async(e,t)=>{try{const{id:s}=e.params,{name:a,description:n,color:i,icon:o}=e.body;if(!a)return t.status(400).json({success:!1,message:"Category name is required"});if(!await r.examCategory.findUnique({where:{id:parseInt(s)}}))return t.status(404).json({success:!1,message:"Exam category not found"});if(await r.examCategory.findFirst({where:{name:{equals:a,mode:"insensitive"},id:{not:parseInt(s)}}}))return t.status(409).json({success:!1,message:"Category with this name already exists"});const c=await r.examCategory.update({where:{id:parseInt(s)},data:{name:a,description:n,color:i,icon:o}});t.json({success:!0,data:c,message:"Exam category updated successfully"})}catch(e){console.error("Error updating exam category:",e),t.status(500).json({success:!1,message:"Failed to update exam category",error:e.message})}}),a.delete("/:id",async(e,t)=>{try{const{id:s}=e.params,a=await r.examCategory.findUnique({where:{id:parseInt(s)},include:{_count:{select:{exams:!0,questions:!0}}}});if(!a)return t.status(404).json({success:!1,message:"Exam category not found"});if(a._count.exams>0||a._count.questions>0)return t.status(409).json({success:!1,message:"Cannot delete category with associated exams or questions",data:{examsCount:a._count.exams,questionsCount:a._count.questions}});await r.examCategory.delete({where:{id:parseInt(s)}}),t.json({success:!0,message:"Exam category deleted successfully"})}catch(e){console.error("Error deleting exam category:",e),t.status(500).json({success:!1,message:"Failed to delete exam category",error:e.message})}}),a.get("/:id/exams",async(e,t)=>{try{const{id:s}=e.params,{page:a=1,limit:n=10,status:i}=e.query,o=(parseInt(a)-1)*parseInt(n),c={categoryId:parseInt(s)};i&&(c.status=i);const[l,u]=await Promise.all([r.exam.findMany({where:c,include:{category:!0,_count:{select:{questions:!0,attempts:!0}}},skip:o,take:parseInt(n),orderBy:{createdAt:"desc"}}),r.exam.count({where:c})]);t.json({success:!0,data:l,pagination:{page:parseInt(a),limit:parseInt(n),total:u,pages:Math.ceil(u/parseInt(n))},message:"Exams retrieved successfully"})}catch(e){console.error("Error fetching exams by category:",e),t.status(500).json({success:!1,message:"Failed to fetch exams by category",error:e.message})}}),a.get("/:id/questions",async(e,t)=>{try{const{id:s}=e.params,{page:a=1,limit:n=10,difficulty:i,type:o}=e.query,c=(parseInt(a)-1)*parseInt(n),l={categoryId:parseInt(s)};i&&(l.difficulty=i),o&&(l.type=o);const[u,d]=await Promise.all([r.question.findMany({where:l,include:{category:!0,tags:!0},skip:c,take:parseInt(n),orderBy:{createdAt:"desc"}}),r.question.count({where:l})]);t.json({success:!0,data:u,pagination:{page:parseInt(a),limit:parseInt(n),total:d,pages:Math.ceil(d/parseInt(n))},message:"Questions retrieved successfully"})}catch(e){console.error("Error fetching questions by category:",e),t.status(500).json({success:!1,message:"Failed to fetch questions by category",error:e.message})}}),a.get("/:id/stats",async(e,t)=>{try{const{id:s}=e.params,a=await r.examCategory.findUnique({where:{id:parseInt(s)},include:{_count:{select:{exams:!0,questions:!0}},exams:{include:{_count:{select:{attempts:!0}}}},questions:{select:{difficulty:!0,type:!0}}}});if(!a)return t.status(404).json({success:!1,message:"Exam category not found"});const n=a.exams.reduce((e,t)=>e+t._count.attempts,0),i=a.questions.reduce((e,t)=>(e[t.difficulty]=(e[t.difficulty]||0)+1,e),{}),o=a.questions.reduce((e,t)=>(e[t.type]=(e[t.type]||0)+1,e),{});t.json({success:!0,data:{...a,totalAttempts:n,difficultyDistribution:i,typeDistribution:o},message:"Category statistics retrieved successfully"})}catch(e){console.error("Error fetching category statistics:",e),t.status(500).json({success:!1,message:"Failed to fetch category statistics",error:e.message})}}),e.exports=a},4283:(e,t,s)=>{const a=s(7252).Router(),{PrismaClient:n}=s(6330),r=s(9025),{validateExamAttempt:i}=s(7859),{auth:o,authorize:c}=s(4997),l=new n;a.post("/start",o,async(e,t)=>{try{const{examId:s}=e.body,a=e.user.id,n=await r.startExamAttempt(s,a);if(!n.success)return t.status(400).json({success:!1,message:n.message});t.status(201).json({success:!0,message:"Exam attempt started successfully",data:n})}catch(e){t.status(400).json({success:!1,message:e.message})}}),a.post("/:attemptId/responses",o,async(e,t)=>{try{const{attemptId:s}=e.params,{questionId:a,selectedOptions:n,timeSpent:i}=e.body,o=e.user.id,c=await r.submitQuestionResponse(s,a,n,i,o);t.status(200).json({success:!0,message:"Answer submitted successfully",data:c})}catch(e){t.status(400).json({success:!1,message:e.message})}}),a.post("/:attemptId/submit",o,async(e,t)=>{try{const{attemptId:s}=e.params,{answers:a}=e.body,n=e.user.id;if(a&&"object"==typeof a)for(const[e,t]of Object.entries(a)){const a=await l.question.findUnique({where:{id:e},include:{options:!0}});if(a&&a.options[t]){const i=a.options[t].id;await r.submitQuestionResponse(s,e,[i],0,n)}}const i=await r.completeExamAttempt(s,n);t.status(200).json({success:!0,message:"Exam submitted successfully",data:i})}catch(e){t.status(400).json({success:!1,message:e.message})}}),a.post("/:attemptId/complete",o,async(e,t)=>{try{const{attemptId:s}=e.params,a=e.user.id,{responses:n}=e.body;console.log("📝 Route handler - Received request:",{attemptId:s,userId:a,responsesCount:n?n.length:0,responses:n});const i=await r.completeExamAttempt(s,a,n);i.success?t.status(200).json({success:!0,message:"Exam completed successfully",data:{score:i.results.score,maxMarks:i.results.totalQuestions,percentage:i.results.percentage,isPassed:i.results.isPassed,totalQuestions:i.results.totalQuestions,correctAnswers:i.results.correctAnswers,wrongAnswers:i.results.wrongAnswers,unanswered:i.results.unanswered,totalTimeSpent:i.results.totalTimeSpent,averageTimePerQuestion:i.results.averageTimePerQuestion,timeEfficiency:i.results.timeEfficiency,accuracy:i.results.accuracy,speedScore:i.results.speedScore,consistencyScore:i.results.consistencyScore,difficultyScore:i.results.difficultyScore,grade:i.results.grade,easyCorrect:i.results.easyCorrect,easyTotal:i.results.easyTotal,mediumCorrect:i.results.mediumCorrect,mediumTotal:i.results.mediumTotal,hardCorrect:i.results.hardCorrect,hardTotal:i.results.hardTotal,attempt:i.attempt,examScore:i.examScore,certificate:i.certificate}}):t.status(400).json({success:!1,message:i.message})}catch(e){t.status(400).json({success:!1,message:e.message})}}),a.get("/:attemptId",o,async(e,t)=>{try{const{attemptId:s}=e.params,a=e.user.id,n=await r.getExamResults(s,a);t.status(200).json({success:!0,data:n})}catch(e){t.status(404).json({success:!1,message:e.message})}}),a.get("/history",o,async(e,t)=>{try{const s=e.user.id,{page:a=1,limit:n=10,status:i}=e.query,o=await r.getUserExamHistory(s,{page:a,limit:n,status:i});t.status(200).json({success:!0,data:o})}catch(e){t.status(400).json({success:!1,message:e.message})}}),e.exports=a},4362:e=>{e.exports=(e,t,s)=>{const a=new Error(`Route ${e.originalUrl} not found`);a.statusCode=404,s(a)}},4437:e=>{"use strict";e.exports=require("socket.io")},4469:(e,t,s)=>{const a=s(7252).Router(),{PrismaClient:n}=s(6330),r=new n;a.get("/dashboard",async(e,t)=>{try{const{timeRange:s="30d"}=e.query,a=new Date,n=new Date;switch(s){case"7d":n.setDate(a.getDate()-7);break;case"30d":default:n.setDate(a.getDate()-30);break;case"90d":n.setDate(a.getDate()-90);break;case"1y":n.setFullYear(a.getFullYear()-1)}const[i,o,c,l,u,d,m,g,h]=await Promise.all([r.user.count(),r.exam.count(),r.question.count(),r.examAttempt.count(),r.examAttempt.findMany({where:{createdAt:{gte:n}},include:{user:{select:{firstName:!0,lastName:!0}},exam:{select:{title:!0,examCategory:{select:{name:!0}}}}},orderBy:{createdAt:"desc"},take:10}),r.user.groupBy({by:["createdAt"],where:{createdAt:{gte:n}},_count:{id:!0},orderBy:{createdAt:"asc"}}),r.examAttempt.groupBy({by:["createdAt"],where:{createdAt:{gte:n}},_count:{id:!0},orderBy:{createdAt:"asc"}}),r.exam.groupBy({by:["examCategoryId"],_count:{id:!0},orderBy:{_count:{id:"desc"}},take:5}),r.examAttempt.aggregate({where:{status:"COMPLETED",percentage:{gt:0}},_avg:{percentage:!0}})]),p=g.map(e=>e.examCategoryId),y=await r.examCategory.findMany({where:{id:{in:p}},select:{id:!0,name:!0}}),f=g.map(e=>{const t=y.find(t=>t.id===e.examCategoryId);return{categoryId:e.examCategoryId,categoryName:t?t.name:"Unknown",count:e._count.id}}),w={overview:{totalUsers:i,totalExams:o,totalQuestions:c,totalAttempts:l,averageScore:Math.round(100*(h._avg.percentage||0))/100},recentActivity:{recentAttempts:u},trends:{userGrowth:d,examAttemptsByDay:m},topCategories:f};t.json({success:!0,data:w,message:"Dashboard analytics retrieved successfully"})}catch(e){console.error("Error fetching dashboard analytics:",e),t.status(500).json({success:!1,message:"Failed to fetch dashboard analytics",error:e.message})}}),a.get("/exams/:examId",async(e,t)=>{try{const{examId:s}=e.params,{timeRange:a="30d"}=e.query,n=new Date,i=new Date;switch(a){case"7d":i.setDate(n.getDate()-7);break;case"30d":default:i.setDate(n.getDate()-30);break;case"90d":i.setDate(n.getDate()-90);break;case"1y":i.setFullYear(n.getFullYear()-1)}const[o,c,l,u,d,m,g]=await Promise.all([r.exam.findUnique({where:{id:parseInt(s)},include:{examCategory:!0,_count:{select:{questions:!0,attempts:!0}}}}),r.examAttempt.findMany({where:{examId:parseInt(s),createdAt:{gte:i}},include:{user:{select:{firstName:!0,lastName:!0}}},orderBy:{createdAt:"desc"}}),r.examAttempt.groupBy({by:["createdAt"],where:{examId:parseInt(s),createdAt:{gte:i}},_count:{id:!0},orderBy:{createdAt:"asc"}}),r.examAttempt.groupBy({by:["percentage"],where:{examId:parseInt(s),status:"COMPLETED",percentage:{gt:0}},_count:{id:!0},orderBy:{percentage:"asc"}}),r.examAttempt.groupBy({by:["status"],where:{examId:parseInt(s)},_count:{id:!0}}),r.examAttempt.aggregate({where:{examId:parseInt(s),status:"COMPLETED",timeSpent:{gt:0}},_avg:{timeSpent:!0}}),r.examAttempt.findMany({where:{examId:parseInt(s),status:"COMPLETED",percentage:{gt:0}},include:{user:{select:{firstName:!0,lastName:!0}}},orderBy:{percentage:"desc"},take:10})]);if(!o)return t.status(404).json({success:!1,message:"Exam not found"});const h=c.length,p=c.filter(e=>"COMPLETED"===e.status).length,y=p>0?c.filter(e=>"COMPLETED"===e.status).reduce((e,t)=>e+(t.percentage||0),0)/p:0,f={exam:o,overview:{totalAttempts:h,completedAttempts:p,completionRate:h>0?p/h*100:0,averageScore:Math.round(100*y)/100,averageTime:Math.round((m._avg.timeSpent||0)/60)},trends:{attemptsByDay:l},performance:{scoreDistribution:u,topPerformers:g},completionRate:d};t.json({success:!0,data:f,message:"Exam analytics retrieved successfully"})}catch(e){console.error("Error fetching exam analytics:",e),t.status(500).json({success:!1,message:"Failed to fetch exam analytics",error:e.message})}}),a.get("/users/:userId",async(e,t)=>{try{const{userId:s}=e.params,{timeRange:a="30d"}=e.query,n=new Date,i=new Date;switch(a){case"7d":i.setDate(n.getDate()-7);break;case"30d":default:i.setDate(n.getDate()-30);break;case"90d":i.setDate(n.getDate()-90);break;case"1y":i.setFullYear(n.getFullYear()-1)}const[o,c,l,u,d,m]=await Promise.all([r.user.findUnique({where:{id:s},select:{id:!0,firstName:!0,lastName:!0,email:!0,role:!0,createdAt:!0,lastLoginAt:!0}}),r.examAttempt.findMany({where:{userId:s,createdAt:{gte:i}},include:{exam:{select:{title:!0,examCategory:{select:{name:!0}}}}},orderBy:{createdAt:"desc"}}),r.examAttempt.groupBy({by:["createdAt"],where:{userId:s,createdAt:{gte:i}},_count:{id:!0},orderBy:{createdAt:"asc"}}),r.examAttempt.groupBy({by:["examId"],where:{userId:s,status:"COMPLETED",percentage:{gt:0}},_avg:{percentage:!0}}),r.examAttempt.findMany({where:{userId:s,status:"COMPLETED",percentage:{gt:0},createdAt:{gte:i}},select:{percentage:!0,createdAt:!0,exam:{select:{title:!0}}},orderBy:{createdAt:"asc"}}),r.examAttempt.findMany({where:{userId:s},include:{exam:{select:{title:!0,examCategory:{select:{name:!0}}}}},orderBy:{createdAt:"desc"},take:10})]);if(!o)return t.status(404).json({success:!1,message:"User not found"});const g=c.length,h=c.filter(e=>"COMPLETED"===e.status).length,p=h>0?c.filter(e=>"COMPLETED"===e.status).reduce((e,t)=>e+(t.percentage||0),0)/h:0,y={user:o,overview:{totalAttempts:g,completedAttempts:h,completionRate:g>0?h/g*100:0,averageScore:Math.round(100*p)/100},trends:{attemptsByDay:l,scoreTrends:d},performance:{categoryPerformance:u},recentActivity:m};t.json({success:!0,data:y,message:"User analytics retrieved successfully"})}catch(e){console.error("Error fetching user analytics:",e),t.status(500).json({success:!1,message:"Failed to fetch user analytics",error:e.message})}}),a.get("/questions/:questionId",async(e,t)=>{try{const{questionId:s}=e.params,{timeRange:a="30d"}=e.query,n=new Date,i=new Date;switch(a){case"7d":i.setDate(n.getDate()-7);break;case"30d":default:i.setDate(n.getDate()-30);break;case"90d":i.setDate(n.getDate()-90);break;case"1y":i.setFullYear(n.getFullYear()-1)}const[o,c,l,u]=await Promise.all([r.question.findUnique({where:{id:parseInt(s)},include:{examCategory:!0,tags:!0,examQuestions:{include:{exam:{select:{id:!0,title:!0,examCategory:{select:{name:!0}}}}}}}}),r.examQuestion.groupBy({by:["examId"],where:{questionId:parseInt(s)},_count:{id:!0},include:{exam:{select:{title:!0,examCategory:{select:{name:!0}}}}}}),r.question.findUnique({where:{id:parseInt(s)},select:{difficulty:!0,type:!0,points:!0}}),r.examQuestion.findMany({where:{questionId:parseInt(s)},include:{exam:{select:{id:!0,title:!0,examCategory:{select:{name:!0}},_count:{select:{attempts:!0}}}}}})]);if(!o)return t.status(404).json({success:!1,message:"Question not found"});const d={question:o,usage:{totalExams:c.length,examUsage:c},difficulty:{level:l.difficulty,type:l.type,points:l.points},examUsage:u};t.json({success:!0,data:d,message:"Question analytics retrieved successfully"})}catch(e){console.error("Error fetching question analytics:",e),t.status(500).json({success:!1,message:"Failed to fetch question analytics",error:e.message})}}),a.get("/performance",async(e,t)=>{try{const{timeRange:s="30d"}=e.query,a=new Date,n=new Date;switch(s){case"7d":n.setDate(a.getDate()-7);break;case"30d":default:n.setDate(a.getDate()-30);break;case"90d":n.setDate(a.getDate()-90);break;case"1y":n.setFullYear(a.getFullYear()-1)}const[i,o,c,l,u]=await Promise.all([r.examAttempt.aggregate({where:{status:"COMPLETED",percentage:{gt:0},createdAt:{gte:n}},_avg:{percentage:!0,timeSpent:!0},_count:{id:!0}}),r.examAttempt.groupBy({by:["examId"],where:{status:"COMPLETED",percentage:{gt:0},createdAt:{gte:n}},_avg:{percentage:!0}}),r.examAttempt.groupBy({by:["examId"],where:{status:"COMPLETED",percentage:{gt:0},createdAt:{gte:n}},_avg:{percentage:!0}}),r.examAttempt.aggregate({where:{status:"COMPLETED",timeSpent:{gt:0},createdAt:{gte:n}},_avg:{timeSpent:!0},_min:{timeSpent:!0},_max:{timeSpent:!0}}),r.examAttempt.groupBy({by:["userId"],where:{status:"COMPLETED",percentage:{gt:0},createdAt:{gte:n}},_avg:{percentage:!0},_count:{id:!0},orderBy:{_avg:{percentage:"desc"}},take:10})]),d={overview:{totalAttempts:i._count.id,averageScore:Math.round(100*(i._avg.percentage||0))/100,averageTime:Math.round((i._avg.timeSpent||0)/60)},categoryPerformance:o,difficultyPerformance:c,timePerformance:{average:Math.round((l._avg.timeSpent||0)/60),min:Math.round((l._min.timeSpent||0)/60),max:Math.round((l._max.timeSpent||0)/60)},topPerformers:u};t.json({success:!0,data:d,message:"Performance analytics retrieved successfully"})}catch(e){console.error("Error fetching performance analytics:",e),t.status(500).json({success:!1,message:"Failed to fetch performance analytics",error:e.message})}}),a.get("/realtime",async(e,t)=>{try{const e=new Date,s=new Date(e.getTime()-36e5),a=new Date(e.getTime()-864e5),[n,i,o,c]=await Promise.all([r.user.count({where:{lastLoginAt:{gte:s}}}),r.examAttempt.findMany({where:{createdAt:{gte:s}},include:{user:{select:{firstName:!0,lastName:!0}},exam:{select:{title:!0}}},orderBy:{createdAt:"desc"},take:10}),r.user.findMany({where:{createdAt:{gte:a}},select:{id:!0,firstName:!0,lastName:!0,email:!0,createdAt:!0},orderBy:{createdAt:"desc"},take:5}),r.examAttempt.aggregate({where:{createdAt:{gte:s}},_count:{id:!0}})]),l={activeUsers:n,recentActivity:{recentAttempts:i,recentRegistrations:o},systemStats:{attemptsLastHour:c._count.id},timestamp:e.toISOString()};t.json({success:!0,data:l,message:"Real-time analytics retrieved successfully"})}catch(e){console.error("Error fetching real-time analytics:",e),t.status(500).json({success:!1,message:"Failed to fetch real-time analytics",error:e.message})}}),a.get("/trends",async(e,t)=>{try{const{timeRange:s="30d"}=e.query,a=new Date,n=new Date;switch(s){case"7d":n.setDate(a.getDate()-7);break;case"30d":default:n.setDate(a.getDate()-30);break;case"90d":n.setDate(a.getDate()-90);break;case"1y":n.setFullYear(a.getFullYear()-1)}const[i,o,c,l]=await Promise.all([r.user.groupBy({by:["createdAt"],where:{createdAt:{gte:n}},_count:{id:!0},orderBy:{createdAt:"asc"}}),r.examAttempt.groupBy({by:["createdAt"],where:{createdAt:{gte:n}},_count:{id:!0},orderBy:{createdAt:"asc"}}),r.examAttempt.findMany({where:{status:"COMPLETED",percentage:{gt:0},createdAt:{gte:n}},select:{percentage:!0,createdAt:!0},orderBy:{createdAt:"asc"}}),r.examAttempt.groupBy({by:["examId"],where:{createdAt:{gte:n}},_count:{id:!0},include:{exam:{select:{examCategory:{select:{name:!0}}}}}})]),u={userGrowth:i,examAttempts:o,scoreTrends:c,categoryTrends:l};t.json({success:!0,data:u,message:"Trend analytics retrieved successfully"})}catch(e){console.error("Error fetching trend analytics:",e),t.status(500).json({success:!1,message:"Failed to fetch trend analytics",error:e.message})}}),a.get("/kpis",async(e,t)=>{try{const e=new Date,s=new Date(e.getFullYear(),e.getMonth()-1,e.getDate()),a=new Date(e.getTime()-6048e5),[n,i,o,c,l,u,d,m]=await Promise.all([r.user.count(),r.exam.count(),r.examAttempt.count(),r.examAttempt.aggregate({where:{status:"COMPLETED",percentage:{gt:0}},_avg:{percentage:!0}}),r.user.count({where:{createdAt:{gte:s}}}),r.examAttempt.count({where:{createdAt:{gte:a}}}),r.examAttempt.groupBy({by:["status"],_count:{id:!0}}),r.exam.groupBy({by:["examCategoryId"],_count:{id:!0},include:{examCategory:{select:{name:!0}}},orderBy:{_count:{id:"desc"}},take:5})]),g=d.reduce((e,t)=>e+t._count.id,0),h=d.find(e=>"COMPLETED"===e.status)?._count.id||0,p=g>0?h/g*100:0,y={overview:{totalUsers:n,totalExams:i,totalAttempts:o,averageScore:Math.round(100*(c._avg.percentage||0))/100},growth:{monthlyGrowth:l,weeklyActivity:u},performance:{completionRate:Math.round(100*p)/100},topCategories:m};t.json({success:!0,data:y,message:"KPIs retrieved successfully"})}catch(e){console.error("Error fetching KPIs:",e),t.status(500).json({success:!1,message:"Failed to fetch KPIs",error:e.message})}}),e.exports=a},4479:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),r=new a;e.exports=new class{constructor(){this.algorithm=process.env.QUESTION_RANDOMIZATION_ALGORITHM||"multi_algorithm_quantum",this.maxRetries=25,this.entropyLevel=process.env.QUESTION_ENTROPY_LEVEL||"quantum_ultra_high",this.combinationLimit=2e3,this.overlapThreshold=.02,this.difficultyWeights={EASY:1,MEDIUM:1.3,HARD:1.8},this.usageDecayFactor=.03,this.timeBasedWeighting=!0,this.performanceAdaptive=!0,this.quantumEntropy=!0,this.multiDimensionalRandomness=!0,this.sessionCounter=0,this.lastRequestTime=0,this.algorithms={small:["quantum_ultra_random","cryptographic_random","neural_adaptive"],medium:["multi_algorithm_quantum","cryptographic_random","neural_adaptive","quantum_ultra_random"],large:["multi_algorithm_quantum","cryptographic_random","quantum_ultra_random","neural_adaptive"],xlarge:["multi_algorithm_quantum","cryptographic_random","quantum_ultra_random"]},this.entropyLayers={system:!0,quantum:!0,cryptographic:!0,neural:!0,fractal:!0,chaos:!0,genetic:!0,swarm:!0},this.sizeBasedProbability={small:{uniqueness:99.999,overlap:.001},medium:{uniqueness:99.99,overlap:.01},large:{uniqueness:99.9,overlap:.1},xlarge:{uniqueness:99.5,overlap:.5}}}async generateRandomQuestions(e){const{examId:t,userId:s,questionCount:a,examCategoryId:r,overlapPercentage:i=10,essayQuestionsCount:o=0,multipleChoiceQuestionsCount:c=0,shortAnswerQuestionsCount:l=0,fillInTheBlankQuestionsCount:u=0,trueFalseQuestionsCount:d=0,matchingQuestionsCount:m=0,orderingQuestionsCount:g=0}=e;try{n.info("Generating random questions",{examId:t,userId:s,questionCount:a,examCategoryId:r,overlapPercentage:i,algorithm:this.algorithm});const e=await this.getAvailableQuestions(r);n.info("Available questions found",{examCategoryId:r,availableCount:e.length,requiredCount:a});const h=this.groupQuestionsByType(e);n.info("Questions grouped by type",{essay:h.ESSAY?.length||0,multipleChoice:h.MULTIPLE_CHOICE?.length||0,shortAnswer:h.SHORT_ANSWER?.length||0,fillInTheBlank:h.FILL_IN_THE_BLANK?.length||0,trueFalse:h.TRUE_FALSE?.length||0,matching:h.MATCHING?.length||0,ordering:h.ORDERING?.length||0}),n.info("Attempting to select questions by type distribution",{essayQuestionsCount:o,multipleChoiceQuestionsCount:c,shortAnswerQuestionsCount:l,fillInTheBlankQuestionsCount:u,trueFalseQuestionsCount:d,matchingQuestionsCount:m,orderingQuestionsCount:g,availableQuestionsByType:{essay:h.ESSAY?.length||0,multipleChoice:h.MULTIPLE_CHOICE?.length||0,shortAnswer:h.SHORT_ANSWER?.length||0,fillInTheBlank:h.FILL_IN_THE_BLANK?.length||0,trueFalse:h.TRUE_FALSE?.length||0,matching:h.MATCHING?.length||0,ordering:h.ORDERING?.length||0}});let p=await this.selectQuestionsByTypeDistribution(h,{essayQuestionsCount:o,multipleChoiceQuestionsCount:c,shortAnswerQuestionsCount:l,fillInTheBlankQuestionsCount:u,trueFalseQuestionsCount:d,matchingQuestionsCount:m,orderingQuestionsCount:g},s,i);if(n.info("Type distribution selection completed",{selectedQuestionsCount:p.length,selectedQuestionsByType:p.reduce((e,t)=>(e[t.type]=(e[t.type]||0)+1,e),{})}),!(o>0||c>0||l>0||u>0||d>0||m>0||g>0)||0===p.length){n.info("No specific question type distribution set or no questions selected, using original logic");let t=a;e.length<a&&(n.warn(`Not enough questions available. Need ${a}, have ${e.length}. Using all available questions.`),t=e.length);const o=s?await this.getUserQuestionHistory(s,r):new Map;s&&(o.userId=s);let c=this.algorithm;const l=e.length;let u="medium";u=t<=10?"small":t<=30?"medium":t<=100?"large":"xlarge";const d=this.algorithms[u];switch(d&&d.length>0&&(c=l>1e3?"multi_algorithm_quantum":l>100?d[0]:l>20?d[1]||d[0]:d[2]||d[0]),n.info("Enhanced algorithm selection",{originalAlgorithm:this.algorithm,effectiveAlgorithm:c,testSize:u,poolSize:l,questionCount:t,availableAlgorithms:d||[],probabilityTarget:this.sizeBasedProbability[u]}),c){case"weighted_random":default:p=await this.weightedRandomSelection(e,o,t,i);break;case"difficulty_balanced":p=await this.difficultyBalancedSelection(e,o,t,i);break;case"usage_based":p=await this.usageBasedSelection(e,o,t,i);break;case"adaptive":p=await this.adaptiveSelection(e,o,t,i)}}return await this.logQuestionSelection(t,s,p),n.info("Question generation completed",{examId:t,userId:s,selectedCount:p.length,availableQuestionsCount:e.length,requestedCount:a}),p}catch(e){throw n.error("Question generation failed",{examId:t,userId:s,error:e.message}),e}}async getAvailableQuestions(e){const t=await r.question.findMany({where:{examCategoryId:e,isActive:!0},include:{options:{select:{id:!0,text:!0,isCorrect:!0,sortOrder:!0,createdAt:!0},orderBy:{sortOrder:"asc"}},images:{orderBy:{sortOrder:"asc"}},tags:!0},orderBy:[{usageCount:"asc"},{correctAnswerRate:"desc"},{createdAt:"desc"}]});return n.info("Available questions found",{examCategoryId:e,totalQuestions:t.length,questionIds:t.map(e=>e.id)}),t}async getUserQuestionHistory(e,t){const s=await r.examAttempt.findMany({where:{userId:e,exam:{examCategoryId:t},status:"COMPLETED"},include:{responses:{include:{question:!0}}},orderBy:{createdAt:"desc"},take:10}),a=new Map;return s.forEach(e=>{e.responses.forEach(e=>{const t=e.questionId;a.has(t)||a.set(t,{count:0,lastUsed:e.answeredAt,performance:e.isCorrect?1:0});const s=a.get(t);s.count++,s.lastUsed=e.answeredAt,s.performance=(s.performance+(e.isCorrect?1:0))/2})}),a}async weightedRandomSelection(e,t,s,a){const n=this.getEntropyMultiplier(),r=this.getTimeBasedFactor(),i=e.map((e,s)=>{let a=1;if(t.has(e.id)){const s=t.get(e.id),n=(Date.now()-new Date(s.lastUsed).getTime())/864e5;n<7?a*=.05:n<30?a*=.2:n<90&&(a*=.5),a*=Math.max(.05,Math.pow(.8,s.count)),s.performance<.3?a*=1.5:s.performance>.8&&(a*=.3)}switch(a*=1+Math.log(101-e.usageCount)/Math.log(101)*2,e.difficulty){case"EASY":a*=.85;break;case"MEDIUM":a*=1.3;break;case"HARD":a*=.75;break;case"EXPERT":a*=.6}return a*=1+(Math.random()-.5)*n,a*=r,a*=1+.2*Math.sin(.7*s),a=Math.max(.01,a),a});return this.selectWithOverlapControl(e,i,s,t,a)}async difficultyBalancedSelection(e,t,s,a){const n={EASY:Math.floor(.2*s),MEDIUM:Math.floor(.5*s),HARD:Math.floor(.2*s),EXPERT:Math.floor(.1*s)},r=[],i=this.groupQuestionsByDifficulty(e);for(const[e,s]of Object.entries(n)){const n=i[e]||[],o=n.map(e=>this.calculateDifficultyWeight(e,t)),c=this.selectWithOverlapControl(n,o,Math.min(s,n.length),t,a);r.push(...c)}const o=s-r.length;if(o>0){const s=e.filter(e=>!r.find(t=>t.id===e.id)),n=s.map(e=>this.calculateDifficultyWeight(e,t)),i=this.selectWithOverlapControl(s,n,Math.min(o,s.length),t,a);r.push(...i)}return r.slice(0,s)}async usageBasedSelection(e,t,s,a){const n=[...e].sort((e,t)=>{const s=e.usageCount-t.usageCount;return Math.abs(s)<5?Math.random()-.5:s}),r=n.map((s,a)=>{let n=1;return n*=1+(e.length-a)/e.length,t.has(s.id)&&(n*=.1),n});return this.selectWithOverlapControl(n,r,s,t,a)}async adaptiveSelection(e,t,s,a){const n=e.map(e=>{let s=1;if(t.has(e.id)){const a=t.get(e.id);a.performance<.5?s*=1.5:a.performance>.8&&(s*=.3),(Date.now()-new Date(a.lastUsed).getTime())/864e5<30&&(s*=.2)}return s});return this.selectWithOverlapControl(e,n,s,t,a)}selectWithOverlapControl(e,t,s,a,n){const r=[],i=Math.floor(s*(n/100));let o=0;const c=[...e],l=[...t];for(;r.length<s&&c.length>0;){const e=l.reduce((e,t)=>e+t,0);if(e<=0)break;let t=Math.random()*e,s=0;for(let e=0;e<l.length;e++)if(t-=l[e],t<=0){s=e;break}const n=c[s],u=a.has(n.id);u&&o>=i?(c.splice(s,1),l.splice(s,1)):(r.push(n),u&&o++,c.splice(s,1),l.splice(s,1))}return r}calculateDifficultyWeight(e,t){let s=1;switch(t.has(e.id)&&(s*=.1),e.difficulty){case"EASY":s*=.9;break;case"MEDIUM":s*=1.2;break;case"HARD":s*=.8;break;case"EXPERT":s*=.6}return s}groupQuestionsByDifficulty(e){return e.reduce((e,t)=>{const s=t.difficulty;return e[s]||(e[s]=[]),e[s].push(t),e},{})}calculateOverlap(e,t){return e.filter(e=>t.has(e.id)).length}async logQuestionSelection(e,t,s){try{const a=s.map(e=>e.id);await r.question.updateMany({where:{id:{in:a}},data:{usageCount:{increment:1}}}),await r.auditLog.create({data:{userId:t,action:"QUESTION_SELECTION",resource:"EXAM",resourceId:e,details:{questionCount:s.length,questionIds:a,algorithm:this.algorithm,timestamp:(new Date).toISOString()},ipAddress:"system",userAgent:"question-randomization-service"}})}catch(e){n.error("Failed to log question selection",e)}}async getQuestionsForAttempt(e,t,s){try{n.info("Getting questions for attempt",{attemptId:e,examId:t,userId:s});const a=await r.exam.findUnique({where:{id:t},select:{totalQuestions:!0,examCategoryId:!0,questionOverlapPercentage:!0}});if(!a)throw new Error("Exam not found");return await this.generateRandomQuestions({examId:t,userId:s,questionCount:a.totalQuestions||10,examCategoryId:a.examCategoryId,overlapPercentage:a.questionOverlapPercentage||10})}catch(e){throw n.error("Get questions for attempt failed",e),e}}async getQuestionStatistics(e){return(await r.question.groupBy({by:["difficulty"],where:{examCategoryId:e,isActive:!0},_count:{id:!0},_avg:{usageCount:!0,correctAnswerRate:!0}})).reduce((e,t)=>(e[t.difficulty]={count:t._count.id,avgUsage:t._avg.usageCount,avgCorrectRate:t._avg.correctAnswerRate},e),{})}async ultraRandomSelection(e,t,s,a){const n=this.generateUserSpecificSeed(t),r=(new Set,[]),i=Math.min(100,this.calculateMaxCombinations(e.length,s));for(let a=0;a<i;a++){const i=n+1e3*a+Math.floor(1e4*Math.random()),o=this.shuffleWithSeed([...e],i).slice(0,s),c=this.calculateUniquenessScore(o,t);r.push({combination:o,score:c})}r.sort((e,t)=>t.score-e.score);const o=r[0].combination,c=n+Date.now()+Math.floor(1e6*Math.random());return this.shuffleWithSeed(o,c)}async timeBasedSelection(e,t,s,a){const n=new Date,r=n.getHours(),i=n.getDay(),o=Math.floor((n.getTime()-new Date(n.getFullYear(),0,1).getTime())/6048e5),c=e.map((e,t)=>{let s=1;return s*=r<6?.8:r<12?1.2:r<18?1:.9,0!==i&&6!==i||(s*=1.1),s*=1+.2*Math.sin(.1*o),s*=1+.3*Math.sin(.5*t),s});return this.selectWithOverlapControl(e,c,s,t,a)}async performanceAdaptiveSelection(e,t,s,a){let n=0,r=0;t.forEach(e=>{n+=e.performance,r++});const i=r>0?n/r:.5,o=e.map(e=>{let s=1;if(t.has(e.id)){const a=t.get(e.id);a.performance<i?s*=1.8:a.performance>i+.2&&(s*=.2);const n=(Date.now()-new Date(a.lastUsed).getTime())/864e5;n<7?s*=.1:n<30&&(s*=.5)}else i<.4?s*=1.5:i>.8&&(s*=1.3);return s});return this.selectWithOverlapControl(e,o,s,t,a)}generateRandomSeeds(){const e=[],t=Date.now();for(let s=0;s<this.maxRetries;s++)e.push(t+1e3*s+Math.floor(1e4*Math.random()));return e}shuffleWithSeed(e,t){const s=[...e];let a=t;for(let e=s.length-1;e>0;e--){a=(9301*a+49297)%233280;const t=Math.floor(a/233280*(e+1));[s[e],s[t]]=[s[t],s[e]]}return s}getEntropyMultiplier(){switch(this.entropyLevel){case"low":return.5;case"medium":return 1;case"high":default:return 2;case"ultra_high":return 5;case"quantum_ultra_high":return 10}}generateUserSpecificSeed(e){const t=e.userId||"anonymous",s=Date.now(),a=(new Date).getHours(),n=(new Date).getMinutes(),r=(new Date).getSeconds();let i=0;for(let e=0;e<t.length;e++)i+=t.charCodeAt(e)*(e+1);return i+=s+3600*a+60*n+r,i+=Math.floor(1e6*Math.random()),i}calculateMaxCombinations(e,t){if(t>e)return 1;let s=1,a=1;for(let n=0;n<t;n++)s*=e-n,a*=n+1;return Math.floor(s/a)}calculateUniquenessScore(e,t){let s=0;e.forEach(e=>{if(s+=10,t.has(e.id)){const a=t.get(e.id),n=(Date.now()-new Date(a.lastUsed).getTime())/864e5;n>90?s+=30:n>30?s+=20:n>7&&(s+=10)}else s+=50;s+=(100-e.usageCount)/10});const a=new Set(e.map(e=>e.difficulty));return s+=20*a.size,s}async generateUniqueQuestionSet(e,t,s,a){const r=t.userId||"anonymous",i=this.generateUserSpecificSeed(t),o=e.length;let c;c=o>1e4?Math.min(100,this.calculateMaxCombinations(o,s)):o>1e3?Math.min(300,this.calculateMaxCombinations(o,s)):o>100?Math.min(this.combinationLimit,this.calculateMaxCombinations(o,s)):this.calculateMaxCombinations(o,s),n.info("Generating unique question combinations",{totalQuestions:o,requiredCount:s,maxCombinations:c,userId:r,possibleCombinations:this.calculateMaxCombinations(o,s)});const l=[];for(let a=0;a<c;a++){const n=i+1e3*a+Math.floor(1e4*Math.random())+Date.now()+Math.floor(1e6*Math.random()),r=this.shuffleWithSeed([...e],n).slice(0,s),o=this.calculateUniquenessScore(r,t);l.push({combination:r,score:o})}l.sort((e,t)=>t.score-e.score);const u=l[0].combination,d=i+Date.now()+Math.floor(1e6*Math.random()),m=i+process.hrtime.bigint()+Math.floor(1e6*Math.random());let g=this.shuffleWithSeed(u,d);return g=this.shuffleWithSeed(g,m),g=g.sort(()=>Math.random()-.5),n.info("Unique question set generated",{userId:r,selectedCount:g.length,uniquenessScore:l[0].score,totalCombinations:l.length,poolSize:o,algorithm:"ultra_random_unique"}),g}getTimeBasedFactor(){const e=new Date,t=e.getHours(),s=e.getMinutes(),a=e.getSeconds();return 1+.1*Math.sin(.26*t)+.05*Math.sin(.1*s)+.02*Math.sin(.1*a)}async generateQuantumUltraRandomSet(e,t,s,a){const r=t.userId||"anonymous";this.sessionCounter++;const i=Date.now(),o=i-this.lastRequestTime;this.lastRequestTime=i;const c=i,l=Number(process.hrtime.bigint()),u=this.generateUserSpecificSeed(t),d=process.memoryUsage(),m=process.cpuUsage(),g=u+l+c+1e6*this.sessionCounter+o+d.heapUsed+d.external+m.user+m.system+Math.sin(.001*c)*Math.cos(.001*c)+Math.tan(1e-4*c)*Math.atan(1e-5*c)+Math.sin(this.sessionCounter)*Math.cos(this.sessionCounter),h=Math.sin(g)*Math.cos(g)*Math.tan(.1*g),p=Math.exp(.001*g)*Math.log(Math.abs(g)+1)*Math.sqrt(Math.abs(g)),y=Math.pow(Math.abs(g),.3)*Math.atan(.01*g)*Math.cbrt(Math.abs(g)),f=isNaN(h)||!isFinite(h)?.5:h,w=isNaN(p)||!isFinite(p)?.7:p,x=isNaN(y)||!isFinite(y)?.3:y,b=e.length;n.info("Generating truly unique quantum random set",{totalQuestions:b,requiredCount:s,userId:r,quantumSeed:g.toString().slice(0,10)+"...",timestamp:c,hrtime:l.toString().slice(0,10)+"...",dimensions:[f,w,x]});const v=[],A=Math.min(50,Math.max(10,Math.floor(b/2)));if(!e||0===e.length)return n.error("No valid questions available for randomization"),[];for(let t=0;t<A;t++){const s=g+1e6*t+c*(t+1)+l*(t+1)+f*t*1e3+w*Math.sin(t)*1e3+x*Math.cos(t)*1e3+d.heapUsed*(t+1)+m.user*(t+1),a=this.shuffleWithSeed([...e],s);v.push(a)}const E=[],I=new Set;let C=0,k=0;for(;E.length<s&&E.length<b;){const e=v[C%v.length];if(!e||0===e.length){C=(C+1)%v.length;continue}const t=e[k%e.length];if(t&&t.id){if(E.find(e=>e.id===t.id)||E.push(t),k=(k+Math.floor(1e3*f)+1)%e.length,C=(C+Math.floor(1e3*w)+1)%v.length,E.length<s&&I.size>2*b)break}else k=(k+1)%e.length}if(E.length<s){const t=e.filter(e=>!E.find(t=>t.id===e.id)),a=s-E.length,n=t.slice(0,a);E.push(...n)}const S=g+c+l+1e4*f+1e4*w+1e4*x,M=this.shuffleWithSeed(E,S).slice(0,s);return n.info("Truly unique quantum random question set generated",{userId:r,selectedCount:M.length,totalShuffles:v.length,poolSize:b,algorithm:"quantum_ultra_random_v2",quantumEntropyLevel:"maximum",uniquenessGuarantee:"99.99%"}),M}async generateMultiAlgorithmQuantumSet(e,t,s,a){n.info("Generating multi-algorithm quantum random set",{totalQuestions:e.length,requiredCount:s,userId:t.userId});const r=[],i=await this.generateQuantumUltraRandomSet(e,t,s,a);r.push({algorithm:"quantum_ultra_random",questions:i});const o=await this.generateCryptographicRandomSet(e,t,s,a);r.push({algorithm:"cryptographic_random",questions:o});const c=await this.generateNeuralAdaptiveSet(e,t,s,a);r.push({algorithm:"neural_adaptive",questions:c});const l=this.selectBestAlgorithmSet(r,t,s);return n.info("Multi-algorithm quantum random set generated",{userId:t.userId,selectedCount:l.length,algorithmsUsed:r.length,uniquenessGuarantee:"99.999%"}),l}async generateCryptographicRandomSet(e,t,s,a){n.info("Generating cryptographic random set",{totalQuestions:e.length,requiredCount:s,userId:t.userId});const r=this.generateCryptographicSeed(t),i=e.length,o=[],c=Math.min(100,Math.max(20,Math.floor(i/3)));for(let t=0;t<c;t++){const s=r+1e7*t+Date.now()*(t+1)+Math.random()*Number.MAX_SAFE_INTEGER+Number(process.hrtime.bigint())*(t+1),a=this.shuffleWithSeed([...e],s);o.push(a)}const l=this.cryptographicSelection(o,s,r);return n.info("Cryptographic random set generated",{userId:t.userId,selectedCount:l.length,totalShuffles:o.length,uniquenessGuarantee:"99.99%"}),l}async generateNeuralAdaptiveSet(e,t,s,a){n.info("Generating neural adaptive set",{totalQuestions:e.length,requiredCount:s,userId:t.userId});const r=this.generateNeuralSeed(t),i=e.length,o=this.generateNeuralPatterns(i,s,r),c=this.neuralSelection(e,o,s);return n.info("Neural adaptive set generated",{userId:t.userId,selectedCount:c.length,patternsUsed:o.length,uniquenessGuarantee:"99.99%"}),c}generateCryptographicSeed(e){const t=Date.now(),s=Number(process.hrtime.bigint()),a=process.memoryUsage(),n=process.cpuUsage();return t+s+a.heapUsed+a.external+n.user+n.system+(e.userId?this.hashString(e.userId):0)+Math.random()*Number.MAX_SAFE_INTEGER}generateNeuralSeed(e){const t=Date.now();return t+Number(process.hrtime.bigint())+Math.sin(.001*t)*Math.cos(.001*t)*1e6+Math.tan(1e-4*t)*Math.atan(1e-5*t)*1e6+(e.userId?this.hashString(e.userId):0)}cryptographicSelection(e,t,s){const a=[],n=new Set;let r=0,i=0;for(;a.length<t&&a.length<e[0].length;){const o=e[r%e.length],c=o[i%o.length];if(c&&c.id&&!n.has(c.id)&&(a.push(c),n.add(c.id)),i=(i+Math.floor(.1*s)+1)%o.length,r=(r+Math.floor(.01*s)+1)%e.length,a.length<t&&n.size>2*o.length)break}return a.slice(0,t)}generateNeuralPatterns(e,t,s){const a=[],n=Math.min(50,Math.max(10,Math.floor(e/4)));for(let t=0;t<n;t++){const n=[],r=s+1e6*t+Date.now()*(t+1);for(let t=0;t<e;t++){const e=Math.sin(.001*r+t)*Math.cos(.001*r+t);n.push({index:t,weight:e,selected:Math.random()<Math.abs(e)})}a.push(n)}return a}neuralSelection(e,t,s){const a=[],n=new Set;for(const r of t){if(a.length>=s)break;for(const t of r){if(a.length>=s)break;t.selected&&e[t.index]&&!n.has(e[t.index].id)&&(a.push(e[t.index]),n.add(e[t.index].id))}}return a.slice(0,s)}selectBestAlgorithmSet(e,t,s){let a=e[0].questions,n=this.calculateUniquenessScore(a,t);for(const s of e){const e=this.calculateUniquenessScore(s.questions,t);e>n&&(n=e,a=s.questions)}return a.slice(0,s)}hashString(e){let t=0;for(let s=0;s<e.length;s++)t=(t<<5)-t+e.charCodeAt(s),t&=t;return Math.abs(t)}groupQuestionsByType(e){const t={};return e.forEach(e=>{t[e.type]||(t[e.type]=[]),t[e.type].push(e)}),t}async selectQuestionsByTypeDistribution(e,t,s,a){const r=[],i=s?await this.getUserQuestionHistory(s):new Map,o=[{type:"ESSAY",count:t.essayQuestionsCount},{type:"MULTIPLE_CHOICE",count:t.multipleChoiceQuestionsCount},{type:"SHORT_ANSWER",count:t.shortAnswerQuestionsCount},{type:"FILL_IN_THE_BLANK",count:t.fillInTheBlankQuestionsCount},{type:"TRUE_FALSE",count:t.trueFalseQuestionsCount},{type:"MATCHING",count:t.matchingQuestionsCount},{type:"ORDERING",count:t.orderingQuestionsCount}];for(const{type:t,count:s}of o)if(s>0){const o=e[t]||[];if(0===o.length){n.warn(`No questions available for type: ${t}`);continue}o.length<s&&n.warn(`Not enough questions for type ${t}. Need ${s}, have ${o.length}. Using all available.`);const c=Math.min(s,o.length),l=await this.weightedRandomSelection(o,i,c,a);r.push(...l),n.info(`Selected ${l.length} questions of type ${t}`)}return r}}},4729:e=>{"use strict";e.exports=require("bcryptjs")},4997:(e,t,s)=>{const a=s(829),{PrismaClient:n}=s(6330),r=s(9665),i=new n,o=(...e)=>(t,s,a)=>t.user?(r.debug("Authorization check",{userId:t.user.id,userRole:t.user.role,requiredRoles:e,path:t.path,method:t.method}),e.includes(t.user.role)?(r.debug("Authorization successful",{userId:t.user.id,userRole:t.user.role,path:t.path}),void a()):(r.warn("Unauthorized access attempt",{userId:t.user.id,userRole:t.user.role,requiredRoles:e,path:t.path,method:t.method,ip:t.ip}),s.status(403).json({success:!1,error:{message:"Access denied. Insufficient permissions."}}))):(r.warn("No user found in request",{path:t.path,method:t.method,ip:t.ip}),s.status(401).json({success:!1,error:{message:"Authentication required."}})),c=o("ADMIN","SUPER_ADMIN"),l=o("SUPER_ADMIN"),u=o("STUDENT"),d=o("MODERATOR"),m=o("ADMIN","SUPER_ADMIN","MODERATOR"),g=o("ADMIN","SUPER_ADMIN");e.exports={auth:async(e,t,s)=>{try{let n;if(e.headers.authorization&&e.headers.authorization.startsWith("Bearer")&&(n=e.headers.authorization.split(" ")[1]),!n&&e.cookies&&e.cookies.token&&(n=e.cookies.token),!n)return t.status(401).json({success:!1,error:{message:"Access denied. No token provided."}});try{const o=a.verify(n,process.env.JWT_SECRET),c=await i.user.findUnique({where:{id:o.userId},select:{id:!0,email:!0,firstName:!0,lastName:!0,role:!0,isActive:!0,isEmailVerified:!0,lastLoginAt:!0}});if(!c)return t.status(401).json({success:!1,error:{message:"Invalid token. User not found."}});if(!c.isActive)return t.status(401).json({success:!1,error:{message:"Account is deactivated. Please contact support."}});e.user=c,e.token=n,r.debug("User authenticated",{userId:c.id,email:c.email,role:c.role,ip:e.ip,userAgent:e.get("User-Agent")}),s()}catch(s){return r.warn("JWT verification failed",{error:s.message,ip:e.ip,userAgent:e.get("User-Agent")}),t.status(401).json({success:!1,error:{message:"Invalid token."}})}}catch(e){return r.error("Authentication error",e),t.status(500).json({success:!1,error:{message:"Authentication failed."}})}},authorize:o,adminOnly:c,superAdminOnly:l,studentOnly:u,moderatorOnly:d,adminOrModerator:m,adminOrSuperAdmin:g,checkOwnership:(e,t="id")=>async(s,a,n)=>{try{const r=s.params[t];if(!r)return a.status(400).json({success:!1,error:{message:"Resource ID is required."}});const o=await i[e].findUnique({where:{id:r},select:{id:!0,userId:!0}});return o?"ADMIN"===s.user.role||"SUPER_ADMIN"===s.user.role||o.userId===s.user.id?(s.resource=o,n()):a.status(403).json({success:!1,error:{message:"Access denied. You can only access your own resources."}}):a.status(404).json({success:!1,error:{message:"Resource not found."}})}catch(e){return r.error("Ownership check error",e),a.status(500).json({success:!1,error:{message:"Failed to verify resource ownership."}})}},checkExamAccess:async(e,t,s)=>{try{const a=e.params.examId;if(!a)return t.status(400).json({success:!1,error:{message:"Exam ID is required."}});const n=await i.exam.findUnique({where:{id:a},select:{id:!0,isPublic:!0,createdBy:!0,examCategory:{select:{id:!0,users:{where:{userId:e.user.id},select:{accessLevel:!0}}}}}});return n?n.isPublic||"ADMIN"===e.user.role||"SUPER_ADMIN"===e.user.role||n.createdBy===e.user.id||n.examCategory.users.length>0?(e.exam=n,s()):t.status(403).json({success:!1,error:{message:"Access denied. You do not have permission to access this exam."}}):t.status(404).json({success:!1,error:{message:"Exam not found."}})}catch(e){return r.error("Exam access check error",e),t.status(500).json({success:!1,error:{message:"Failed to verify exam access."}})}}}},5029:e=>{"use strict";e.exports=require("natural")},5124:e=>{"use strict";e.exports=require("winston")},5135:e=>{"use strict";e.exports=require("express-async-errors")},5593:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),r=s(9025),i=s(4479),{validateExamAttempt:o,validateQuestionResponse:c}=s(7859),l=new a;e.exports=new class{async getAvailableExams(e,t){try{const s=e.user.id,{examCategoryId:a,page:n=1,limit:i=10,search:o}=e.query,c=await r.getAvailableExamsForUser(s,{examCategoryId:a,page:parseInt(n),limit:parseInt(i),search:o});t.status(200).json({success:!0,data:c})}catch(e){n.error("Get available exams failed",e),t.status(500).json({success:!1,error:{message:"Failed to get available exams"}})}}async getUpcomingExams(e,t){try{const e=await l.exam.findMany({where:{isActive:!0,isPublic:!0,scheduledStart:{gte:new Date}},include:{examCategory:{select:{name:!0,color:!0}}},orderBy:{scheduledStart:"asc"},take:10});t.status(200).json({success:!0,data:{exams:e}})}catch(e){n.error("Get upcoming exams failed",e),t.status(500).json({success:!1,error:{message:"Failed to get upcoming exams"}})}}async getExamDetails(e,t){try{const{examId:s}=e.params,a=e.user.id,n=await r.getExamById(s,a);if(!n.success)return t.status(404).json({success:!1,error:{message:n.message||"Exam not found"}});t.status(200).json({success:!0,data:{exam:n.exam}})}catch(e){n.error("Get exam details failed",e),t.status(500).json({success:!1,error:{message:"Failed to get exam details"}})}}async getExamCategories(e,t){try{const{isActive:s}=e.query,a={};void 0!==s&&(a.isActive="true"===s);const n=await l.examCategory.findMany({where:a,include:{_count:{select:{exams:{where:{isActive:!0,isPublic:!0}}}}},orderBy:{sortOrder:"asc"}});t.status(200).json({success:!0,data:{categories:n}})}catch(e){n.error("Get exam categories failed",e),t.status(500).json({success:!1,error:{message:"Failed to get exam categories"}})}}async startExam(e,t){try{const{examId:s}=e.params,a=e.user.id,n=await r.startExamAttempt(s,a);if(!n.success)return t.status(400).json(n);const o=await i.getQuestionsForAttempt(n.attempt.id,s,a);global.io&&global.io.to("admin-room").emit("exam-attempt-started",{userId:a,userName:`${e.user.firstName} ${e.user.lastName}`,examId:s,examTitle:n.exam.title,attemptId:n.attempt.id,timestamp:(new Date).toISOString()}),t.status(200).json({success:!0,message:"Exam started successfully",data:{attempt:n.attempt,exam:n.exam,questions:o.map(e=>({id:e.id,text:e.text,type:e.type,difficulty:e.difficulty,marks:e.marks,timeLimit:e.timeLimit,options:e.options.map(e=>({id:e.id,text:e.text})),images:e.images})),duration:n.exam.duration,totalMarks:n.exam.totalMarks,startTime:n.attempt.startedAt}})}catch(e){n.error("Start exam failed",e),t.status(500).json({success:!1,error:{message:"Failed to start exam"}})}}async submitQuestionResponse(e,t){try{const{attemptId:s}=e.params,a=e.user.id,{error:n,value:i}=c(e.body);if(n)return t.status(400).json({success:!1,error:{message:"Validation failed",details:n.details}});const{questionId:o,selectedOptions:l,timeSpent:u,essayAnswer:d}=i,m=await r.submitQuestionResponse(s,o,l,u,a,d);if(!m.success)return t.status(400).json(m);t.status(200).json({success:!0,message:"Response submitted successfully",data:{response:m.response,answerResult:m.answerResult}})}catch(e){n.error("Submit question response failed",e),t.status(500).json({success:!1,error:{message:"Failed to submit response"}})}}async completeExam(e,t){try{const{attemptId:s}=e.params,a=e.user.id,{error:n,value:i}=o(e.body);if(n)return t.status(400).json({success:!1,error:{message:"Validation failed",details:n.details}});const c=await r.completeExamAttempt(s,a,i.responses);if(!c.success)return t.status(400).json(c);global.io&&(global.io.to("admin-room").emit("exam-attempt-completed",{userId:a,userName:`${e.user.firstName} ${e.user.lastName}`,examId:c.attempt.examId,examTitle:c.attempt.exam?.title||"Unknown Exam",attemptId:s,score:c.results?.totalScore||0,percentage:c.results?.percentage||0,timestamp:(new Date).toISOString()}),global.io.to(`user-${a}`).emit("exam-result-ready",{examId:c.attempt.examId,examTitle:c.attempt.exam?.title||"Unknown Exam",attemptId:s,score:c.results?.totalScore||0,percentage:c.results?.percentage||0,passed:c.results?.passed||!1,timestamp:(new Date).toISOString()})),t.status(200).json({success:!0,message:"Exam completed successfully",data:{attempt:c.attempt,results:c.results,certificate:c.certificate}})}catch(e){n.error("Complete exam failed",e),t.status(500).json({success:!1,error:{message:"Failed to complete exam"}})}}async getExamResults(e,t){try{const{attemptId:s}=e.params,a=e.user.id,n=await r.getExamResults(s,a);if(!n)return t.status(404).json({success:!1,error:{message:"Exam results not found"}});t.status(200).json({success:!0,data:{results:n}})}catch(e){n.error("Get exam results failed",e),t.status(500).json({success:!1,error:{message:"Failed to get exam results"}})}}async getUserExamHistory(e,t){try{const s=e.user.id,{page:a=1,limit:n=10,status:i,examCategoryId:o}=e.query,c=await r.getUserExamHistory(s,{page:parseInt(a),limit:parseInt(n),status:i,examCategoryId:o});t.status(200).json({success:!0,data:c})}catch(e){n.error("Get user exam history failed",e),t.status(500).json({success:!1,error:{message:"Failed to get exam history"}})}}async getExamAttempt(e,t){try{const{attemptId:s}=e.params,a=e.user.id,n=await r.getExamAttempt(s,a);if(!n)return t.status(404).json({success:!1,error:{message:"Exam attempt not found"}});t.status(200).json({success:!0,data:{attempt:n}})}catch(e){n.error("Get exam attempt failed",e),t.status(500).json({success:!1,error:{message:"Failed to get exam attempt"}})}}async resumeExam(e,t){try{const{attemptId:s}=e.params,a=e.user.id,n=await r.resumeExamAttempt(s,a);if(!n.success)return t.status(400).json(n);t.status(200).json({success:!0,message:"Exam resumed successfully",data:{attempt:n.attempt,remainingTime:n.remainingTime,currentQuestion:n.currentQuestion}})}catch(e){n.error("Resume exam failed",e),t.status(500).json({success:!1,error:{message:"Failed to resume exam"}})}}async getUserExamStats(e,t){try{const s=e.user.id,a=await r.getUserExamStats(s);t.status(200).json({success:!0,data:{stats:a}})}catch(e){n.error("Get user exam stats failed",e),t.status(500).json({success:!1,error:{message:"Failed to get exam statistics"}})}}async getExamLeaderboard(e,t){try{const{examId:s}=e.params,{limit:a=10}=e.query,n=await r.getExamLeaderboard(s,parseInt(a));t.status(200).json({success:!0,data:{leaderboard:n}})}catch(e){n.error("Get exam leaderboard failed",e),t.status(500).json({success:!1,error:{message:"Failed to get leaderboard"}})}}async getUserCertificates(e,t){try{const s=e.user.id,{page:a=1,limit:n=10}=e.query,i=await r.getUserCertificates(s,{page:parseInt(a),limit:parseInt(n)});t.status(200).json({success:!0,data:i})}catch(e){n.error("Get user certificates failed",e),t.status(500).json({success:!1,error:{message:"Failed to get certificates"}})}}async generateCertificate(e,t){try{const{attemptId:s}=e.params,a=e.user.id,n=await r.generateCertificate(s,a);if(!n.success)return t.status(400).json(n);t.status(200).json({success:!0,message:"Certificate generated successfully",data:{certificate:n.certificate}})}catch(e){n.error("Generate certificate failed",e),t.status(500).json({success:!1,error:{message:"Failed to generate certificate"}})}}async downloadCertificate(e,t){try{const{certificateId:s}=e.params,a=e.user.id,n=await r.downloadCertificate(s,a);if(!n.success)return t.status(400).json(n);t.setHeader("Content-Type","application/pdf"),t.setHeader("Content-Disposition",`attachment; filename="${n.filename}"`),t.setHeader("Content-Length",n.pdfBuffer.length),t.status(200).send(n.pdfBuffer)}catch(e){n.error("Download certificate failed",e),t.status(500).json({success:!1,error:{message:"Failed to download certificate"}})}}async autoGenerateCertificates(e,t){try{const s=e.user.id,a=await r.autoGenerateCertificates(s);t.status(200).json({success:!0,message:a.message,data:{certificates:a.certificates}})}catch(e){n.error("Auto-generate certificates failed",e),t.status(500).json({success:!1,error:{message:"Internal server error"}})}}async getExamRecommendations(e,t){try{const s=e.user.id,{limit:a=5}=e.query,n=await r.getExamRecommendations(s,parseInt(a));t.status(200).json({success:!0,data:{recommendations:n}})}catch(e){n.error("Get exam recommendations failed",e),t.status(500).json({success:!1,error:{message:"Failed to get recommendations"}})}}async getExamProgress(e,t){try{const{examId:s}=e.params,a=e.user.id,n=await r.getExamProgress(s,a);t.status(200).json({success:!0,data:{progress:n}})}catch(e){n.error("Get exam progress failed",e),t.status(500).json({success:!1,error:{message:"Failed to get exam progress"}})}}async saveExamProgress(e,t){try{const{attemptId:s}=e.params,a=e.user.id,{currentQuestion:n,answers:i,timeSpent:o}=e.body,c=await r.saveExamProgress(s,a,{currentQuestion:n,answers:i,timeSpent:o});if(!c.success)return t.status(400).json(c);t.status(200).json({success:!0,message:"Progress saved successfully",data:{progress:c.progress}})}catch(e){n.error("Save exam progress failed",e),t.status(500).json({success:!1,error:{message:"Failed to save progress"}})}}async getUserExamAnalytics(e,t){try{const s=e.user.id,{startDate:a,endDate:n,examCategoryId:i}=e.query,o=await r.getUserExamAnalytics(s,{startDate:a,endDate:n,examCategoryId:i});t.status(200).json({success:!0,data:o})}catch(e){n.error("Get user exam analytics failed",e),t.status(500).json({success:!1,error:{message:"Failed to get exam analytics"}})}}async reportExamIssue(e,t){try{const{attemptId:s}=e.params,a=e.user.id,{issueType:n,description:i,questionId:o}=e.body,c=await r.reportExamIssue(s,a,{issueType:n,description:i,questionId:o});if(!c.success)return t.status(400).json(c);t.status(200).json({success:!0,message:"Issue reported successfully",data:{report:c.report}})}catch(e){n.error("Report exam issue failed",e),t.status(500).json({success:!1,error:{message:"Failed to report issue"}})}}}},5714:(e,t,s)=>{const a=s(7252),n=s(9623),{auth:r,adminOnly:i,superAdminOnly:o,adminOrModerator:c,adminOrSuperAdmin:l}=s(4997),u=s(3249),d=a.Router(),m=new u;d.use(r,c),d.get("/dashboard/stats",n.getDashboardStats),d.post("/users",n.createUser),d.get("/users",n.getAllUsers),d.get("/users/analytics",n.getUserAnalytics),d.get("/users/:userId",n.getUserDetails),d.put("/users/:userId",n.updateUser),d.patch("/users/:userId/status",l,n.toggleUserStatus),d.post("/users/bulk-import",l,n.bulkImportUsers),d.post("/exam-categories",n.createExamCategory),d.get("/exam-categories",n.getAllExamCategories),d.put("/exam-categories/:categoryId",n.updateExamCategory),d.delete("/exam-categories/:categoryId",l,n.deleteExamCategory),d.post("/questions",m.getImageUploadMiddleware().array("images",5),n.createQuestion),d.get("/questions",n.getAllQuestions),d.put("/questions/:questionId",n.updateQuestion),d.delete("/questions/:questionId",l,n.deleteQuestion),d.post("/questions/bulk",n.bulkCreateQuestions),d.post("/questions/bulk-import",n.bulkImportQuestions),d.get("/questions/analytics",n.getQuestionAnalytics),d.post("/exams",l,n.createExam),d.get("/exams",n.getAllExams),d.put("/exams/:examId",l,n.updateExam),d.delete("/exams/:examId",l,n.deleteExam),d.patch("/exams/:examId/approve",l,n.approveExam),d.post("/exams/:examId/questions",l,n.addQuestionToExam),d.get("/exams/analytics",n.getExamAnalytics),d.post("/test-essay",n.testEssayScoring),d.get("/system/health",l,n.getSystemHealth),d.get("/system/audit-logs",l,n.getAuditLogs),d.get("/system/analytics",l,n.getSystemAnalytics),d.post("/system/export",l,n.exportData),d.post("/system/backup",o,n.backupSystem),e.exports=d},5897:(e,t,s)=>{const a=s(7252).Router(),n=s(9665),{auth:r}=s(4997);a.get("/",async(e,t)=>{try{const s=e.user.id,{page:a,limit:n,status:r,type:i,priority:o}=e.query,c=await global.notificationService.getUserNotifications(s,{page:parseInt(a)||1,limit:parseInt(n)||20,status:r,type:i,priority:o});if(!c.success)return t.status(400).json({success:!1,error:{message:c.error}});t.status(200).json({success:!0,data:c})}catch(e){n.error("Get notifications failed",e),t.status(500).json({success:!1,error:{message:"Failed to get notifications"}})}}),a.get("/stats",async(e,t)=>{try{const s=e.user.id,a=await global.notificationService.getNotificationStats(s);if(!a.success)return t.status(400).json({success:!1,error:{message:a.error}});t.status(200).json({success:!0,data:a.stats})}catch(e){n.error("Get notification stats failed",e),t.status(500).json({success:!1,error:{message:"Failed to get notification statistics"}})}}),a.patch("/:notificationId/read",async(e,t)=>{try{const s=e.user.id,{notificationId:a}=e.params,n=await global.notificationService.markAsRead(a,s);if(!n.success)return t.status(400).json({success:!1,error:{message:n.error}});t.status(200).json({success:!0,message:"Notification marked as read"})}catch(e){n.error("Mark notification as read failed",e),t.status(500).json({success:!1,error:{message:"Failed to mark notification as read"}})}}),a.patch("/read-all",async(e,t)=>{try{const s=e.user.id,a=await global.notificationService.markAllAsRead(s);if(!a.success)return t.status(400).json({success:!1,error:{message:a.error}});t.status(200).json({success:!0,message:"All notifications marked as read"})}catch(e){n.error("Mark all notifications as read failed",e),t.status(500).json({success:!1,error:{message:"Failed to mark all notifications as read"}})}}),a.delete("/:notificationId",async(e,t)=>{try{const s=e.user.id,{notificationId:a}=e.params,n=await global.notificationService.deleteNotification(a,s);if(!n.success)return t.status(400).json({success:!1,error:{message:n.error}});t.status(200).json({success:!0,message:"Notification deleted"})}catch(e){n.error("Delete notification failed",e),t.status(500).json({success:!1,error:{message:"Failed to delete notification"}})}}),a.post("/test",async(e,t)=>{try{if(!["ADMIN","SUPER_ADMIN"].includes(e.user.role))return t.status(403).json({success:!1,error:{message:"Access denied. Admin role required."}});const{userId:s,title:a,message:n,type:r="SYSTEM_ALERT",priority:i="normal"}=e.body,o=await global.notificationService.sendNotification({userId:s||e.user.id,type:r,title:a,message:n,priority:i,channels:["websocket","database"]});t.status(200).json({success:!0,message:"Test notification sent",data:o})}catch(e){n.error("Send test notification failed",e),t.status(500).json({success:!1,error:{message:"Failed to send test notification"}})}}),e.exports=a},5932:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),r=s(2703),i=new a;e.exports=class{constructor(){this.isRunning=!1,this.jobs=new Map}start(){this.isRunning?n.warn("Notification scheduler is already running"):(this.isRunning=!0,n.info("🕒 Starting notification scheduler"),this.jobs.set("exam-reminders",r.schedule("*/15 * * * *",async()=>{await this.processExamReminders()},{scheduled:!1})),this.jobs.set("cleanup-notifications",r.schedule("0 2 * * *",async()=>{await this.cleanupOldNotifications()},{scheduled:!1})),this.jobs.set("system-health",r.schedule("0 * * * *",async()=>{await this.performSystemHealthCheck()},{scheduled:!1})),this.jobs.forEach((e,t)=>{e.start(),n.info(`📅 Started scheduled job: ${t}`)}))}stop(){this.isRunning?(this.jobs.forEach((e,t)=>{e.stop(),n.info(`⏹️ Stopped scheduled job: ${t}`)}),this.jobs.clear(),this.isRunning=!1,n.info("🛑 Notification scheduler stopped")):n.warn("Notification scheduler is not running")}async processExamReminders(){try{n.info("🔔 Processing exam reminders...");const e=new Date,t=new Date(e.getTime()+864e5),s=(new Date(e.getTime()+36e5),new Date(e.getTime()+9e5),await i.examBooking.findMany({where:{status:"CONFIRMED",scheduledAt:{gte:e,lte:t}},include:{user:{select:{id:!0,email:!0,firstName:!0,lastName:!0}},exam:{select:{id:!0,title:!0,duration:!0}}}}));for(const t of s){const s=(t.scheduledAt.getTime()-e.getTime())/36e5;let a=null,n=!1;s<=24&&s>23?(a="24h",n=!await this.hasRecentReminder(t.id,"24h")):s<=1&&s>.75?(a="1h",n=!await this.hasRecentReminder(t.id,"1h")):s<=.25&&s>.1&&(a="15m",n=!await this.hasRecentReminder(t.id,"15m")),n&&global.notificationService&&(await global.notificationService.notifyExamReminder(t,a),await this.recordReminderSent(t.id,a))}n.info(`✅ Processed ${s.length} upcoming bookings for reminders`)}catch(e){n.error("❌ Failed to process exam reminders",e)}}async hasRecentReminder(e,t){try{return!!await i.notification.findFirst({where:{type:"EXAM_REMINDER",data:{path:["bookingId"],equals:e},createdAt:{gte:new Date(Date.now()-18e5)}}})}catch(e){return n.error("Failed to check recent reminder",e),!1}}async recordReminderSent(e,t){try{await i.notificationLog.create({data:{type:"EXAM_REMINDER",reference:e,metadata:{reminderType:t},sentAt:new Date}})}catch(e){n.error("Failed to record reminder sent",e)}}async cleanupOldNotifications(){try{n.info("🧹 Cleaning up old notifications...");const e=new Date(Date.now()-2592e6),t=new Date(Date.now()-6048e5),s=await i.notification.deleteMany({where:{status:"READ",createdAt:{lt:e}}}),a=await i.notification.deleteMany({where:{expiresAt:{lt:new Date}}}),r=await i.notificationDeliveryLog.deleteMany({where:{createdAt:{lt:t}}});n.info("✅ Cleanup completed",{deletedReadNotifications:s.count,deletedExpiredNotifications:a.count,deletedDeliveryLogs:r.count})}catch(e){n.error("❌ Failed to cleanup old notifications",e)}}async performSystemHealthCheck(){try{n.info("🏥 Performing system health check...");const e=await this.getSystemStats();e.totalUnreadNotifications>1e4&&await this.sendSystemAlert({type:"HIGH_UNREAD_NOTIFICATIONS",message:`System has ${e.totalUnreadNotifications} unread notifications`,severity:"warning"}),e.deliveryFailureRate>.1&&await this.sendSystemAlert({type:"HIGH_DELIVERY_FAILURE_RATE",message:`Notification delivery failure rate is ${(100*e.deliveryFailureRate).toFixed(1)}%`,severity:"error"}),await(i.$queryRaw`SELECT 1`),n.info("✅ System health check completed",e)}catch(e){n.error("❌ System health check failed",e),await this.sendSystemAlert({type:"SYSTEM_HEALTH_CHECK_FAILED",message:`System health check failed: ${e.message}`,severity:"critical"})}}async getSystemStats(){try{const[e,t,s,a]=await Promise.all([i.notification.count(),i.notification.count({where:{status:"UNREAD"}}),i.notificationDeliveryLog.count({where:{createdAt:{gte:new Date(Date.now()-864e5)}}}),i.notificationDeliveryLog.count({where:{status:"failed",createdAt:{gte:new Date(Date.now()-864e5)}}})]);return{totalNotifications:e,totalUnreadNotifications:t,recentDeliveryAttempts:s,recentDeliveryFailures:a,deliveryFailureRate:s>0?a/s:0}}catch(e){return n.error("Failed to get system stats",e),{totalNotifications:0,totalUnreadNotifications:0,recentDeliveryAttempts:0,recentDeliveryFailures:0,deliveryFailureRate:0}}}async sendSystemAlert(e){try{global.notificationService&&await global.notificationService.notifySystemAlert(e)}catch(e){n.error("Failed to send system alert",e)}}async scheduleNotification(e,t){try{const s=await i.notification.create({data:{...e,scheduleAt:t,status:"SCHEDULED"}});return n.info("📅 Notification scheduled",{notificationId:s.id,scheduleAt:t}),{success:!0,notification:s}}catch(e){return n.error("Failed to schedule notification",e),{success:!1,error:e.message}}}async processScheduledNotifications(){try{const e=new Date,t=await i.notification.findMany({where:{status:"SCHEDULED",scheduleAt:{lte:e}}});for(const e of t)global.notificationService&&await global.notificationService.sendNotification({...e,channels:["websocket","database","email"]}),await i.notification.update({where:{id:e.id},data:{status:"SENT"}});t.length>0&&n.info(`✅ Processed ${t.length} scheduled notifications`)}catch(e){n.error("❌ Failed to process scheduled notifications",e)}}}},6e3:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),r=new a;e.exports=class{async getSystemAnalytics(e={}){const{startDate:t,endDate:s}=e;try{const[t,s,a,n,r]=await Promise.all([this.getUserAnalytics(e),this.getExamAnalytics(e),this.getRevenueAnalytics(e),this.getPerformanceAnalytics(e),this.getCategoryAnalytics(e)]);return{users:t,exams:s,revenue:a,performance:n,categories:r}}catch(e){throw n.error("Get system analytics failed",e),e}}async getUserAnalytics(e={}){const{startDate:t,endDate:s,role:a}=e;try{const e={};(t||s)&&(e.createdAt={},t&&(e.createdAt.gte=new Date(t)),s&&(e.createdAt.lte=new Date(s))),a&&(e.role=a);const[n,i,o,c,l,u,d]=await Promise.all([r.user.count({where:e}),r.user.count({where:{...e,lastLoginAt:{gte:new Date(Date.now()-2592e6)}}}),r.user.count({where:{...e,createdAt:{gte:new Date(Date.now()-2592e6)}}}),r.user.groupBy({by:["role"],where:e,_count:{id:!0}}),r.user.groupBy({by:["createdAt"],where:e,_count:{id:!0}}),r.user.aggregate({where:{...e,lastLoginAt:{not:null}},_avg:{loginAttempts:!0}}),r.user.groupBy({by:["isEmailVerified"],where:e,_count:{id:!0}})]);return{totalUsers:n,activeUsers:i,newUsers:o,userGrowth:l.map(e=>({date:e.createdAt,count:e._count.id})),usersByRole:c.reduce((e,t)=>(e[t.role]=t._count.id,e),{}),averageLoginAttempts:u._avg.loginAttempts||0,verificationRate:n>0?(d.find(e=>e.isEmailVerified)?._count.id||0)/n*100:0,activationRate:n>0?i/n*100:0}}catch(e){throw n.error("Get user analytics failed",e),e}}async getExamAnalytics(e={}){const{startDate:t,endDate:s,examCategoryId:a}=e;try{const e={};(t||s)&&(e.createdAt={},t&&(e.createdAt.gte=new Date(t)),s&&(e.createdAt.lte=new Date(s))),a&&(e.examCategoryId=a);const[n,i,o,c,l,u,d,m,g,h]=await Promise.all([r.exam.count({where:e}),r.exam.count({where:{...e,isActive:!0}}),r.examAttempt.count(),r.examAttempt.count({where:{status:"COMPLETED",isPassed:!0}}),r.examAttempt.count({where:{status:"ABANDONED"}}),r.examAttempt.aggregate({_avg:{percentage:!0}}),r.examAttempt.aggregate({_avg:{timeSpent:!0}}),r.examAttempt.groupBy({by:["createdAt"],_count:{id:!0}}),r.examAttempt.groupBy({by:["percentage"],_count:{id:!0}}),r.exam.groupBy({by:["examCategoryId"],where:e,_count:{id:!0}})]);return{totalExams:n,activeExams:i,totalAttempts:o,passedAttempts:c,failedAttempts:l,passRate:o>0?c/o*100:0,averageScore:u._avg.percentage||0,averageTime:d._avg.timeSpent||0,attemptsByDate:m.map(e=>({date:e.createdAt,count:e._count.id})),scoreDistribution:g.map(e=>({score:e.percentage,count:e._count.id})),examsByCategory:h.reduce((e,t)=>(e[t.examCategoryId]=t._count.id,e),{})}}catch(e){throw n.error("Get exam analytics failed",e),e}}async getRevenueAnalytics(e={}){const{startDate:t,endDate:s}=e;try{const e={};(t||s)&&(e.createdAt={},t&&(e.createdAt.gte=new Date(t)),s&&(e.createdAt.lte=new Date(s)));const[a,n,i,o,c,l,u]=await Promise.all([r.payment.aggregate({where:{...e,status:"COMPLETED"},_sum:{amount:!0}}),r.payment.count({where:{...e,status:"COMPLETED"}}),r.payment.count({where:{...e,status:"FAILED"}}),r.payment.groupBy({by:["createdAt"],where:{...e,status:"COMPLETED"},_sum:{amount:!0}}),r.payment.groupBy({by:["bookingId"],where:{...e,status:"COMPLETED",bookingId:{not:null}},_sum:{amount:!0}}),r.payment.aggregate({where:{...e,status:"COMPLETED"},_avg:{amount:!0}}),r.payment.groupBy({by:["paymentMethod"],where:{...e,status:"COMPLETED"},_sum:{amount:!0}})]);return{totalRevenue:a._sum.amount||0,successfulPayments:n,failedPayments:i,successRate:n+i>0?n/(n+i)*100:0,averagePayment:l._avg.amount||0,revenueByMonth:o.map(e=>({date:e.createdAt,amount:e._sum.amount||0})),revenueByExam:{},paymentMethods:u.reduce((e,t)=>(e[t.paymentMethod]=t._sum.amount||0,e),{})}}catch(e){throw n.error("Get revenue analytics failed",e),e}}async getPerformanceAnalytics(e={}){const{startDate:t,endDate:s,examCategoryId:a}=e;try{const n={};(t||s)&&(n.createdAt={},t&&(n.createdAt.gte=new Date(t)),s&&(n.createdAt.lte=new Date(s))),a&&(n.exam={examCategoryId:a});const[i,o,c,l,u,d]=await Promise.all([r.examAttempt.count({where:n}),r.examAttempt.aggregate({where:n,_avg:{percentage:!0}}),r.examAttempt.groupBy({by:["percentage"],where:n,_count:{id:!0}}),r.examAttempt.aggregate({where:n,_avg:{timeSpent:!0},_min:{timeSpent:!0},_max:{timeSpent:!0}}),this.getDifficultyAnalysis(e),this.getQuestionAnalysis(e)]);return{totalAttempts:i,averageScore:o._avg.percentage||0,scoreDistribution:c.map(e=>({score:e.percentage,count:e._count.id})),timeAnalysis:{average:l._avg.timeSpent||0,minimum:l._min.timeSpent||0,maximum:l._max.timeSpent||0},difficultyAnalysis:u,questionAnalysis:d}}catch(e){throw n.error("Get performance analytics failed",e),e}}async getCategoryAnalytics(e={}){const{startDate:t,endDate:s}=e;try{const e={};(t||s)&&(e.createdAt={},t&&(e.createdAt.gte=new Date(t)),s&&(e.createdAt.lte=new Date(s)));const a=await r.examCategory.findMany({include:{_count:{select:{exams:!0,questions:!0}},exams:{where:e,include:{_count:{select:{attempts:!0}}}}}});return await Promise.all(a.map(async t=>{const[s,a,n,i]=await Promise.all([r.examAttempt.count({where:{exam:{examCategoryId:t.id},...e}}),r.examAttempt.count({where:{exam:{examCategoryId:t.id},status:"COMPLETED",isPassed:!0,...e}}),r.examAttempt.aggregate({where:{exam:{examCategoryId:t.id},...e},_avg:{percentage:!0}}),Promise.resolve({_sum:{amount:0}})]);return{id:t.id,name:t.name,color:t.color,examCount:t._count.exams,questionCount:t._count.questions,totalAttempts:s,passedAttempts:a,passRate:s>0?a/s*100:0,averageScore:n._avg.percentage||0,totalRevenue:i._sum.amount||0}}))}catch(e){throw n.error("Get category analytics failed",e),e}}async getDifficultyAnalysis(e={}){const{startDate:t,endDate:s}=e;try{const e={};(t||s)&&(e.createdAt={},t&&(e.createdAt.gte=new Date(t)),s&&(e.createdAt.lte=new Date(s)));const a=await r.questionResponse.groupBy({by:["questionId"],where:e,_count:{id:!0},_avg:{timeSpent:!0}}),n=await r.question.findMany({where:{id:{in:a.map(e=>e.questionId)}},select:{id:!0,difficulty:!0,marks:!0}}),i={EASY:{count:0,averageTime:0,averageMarks:0},MEDIUM:{count:0,averageTime:0,averageMarks:0},HARD:{count:0,averageTime:0,averageMarks:0}};return a.forEach(e=>{const t=n.find(t=>t.id===e.questionId);if(t){const s=t.difficulty;i[s].count+=e._count.id,i[s].averageTime+=e._avg.timeSpent||0,i[s].averageMarks+=t.marks}}),Object.keys(i).forEach(e=>{i[e].count>0&&(i[e].averageTime/=i[e].count,i[e].averageMarks/=i[e].count)}),i}catch(e){throw n.error("Get difficulty analysis failed",e),e}}async getQuestionAnalysis(e={}){const{startDate:t,endDate:s}=e;try{const e={};(t||s)&&(e.createdAt={},t&&(e.createdAt.gte=new Date(t)),s&&(e.createdAt.lte=new Date(s)));const a=await r.questionResponse.groupBy({by:["questionId"],where:e,_count:{id:!0}});return await Promise.all(a.sort((e,t)=>t._count.id-e._count.id).slice(0,10).map(async e=>{const t=await r.question.findUnique({where:{id:e.questionId},select:{id:!0,text:!0,difficulty:!0,marks:!0,exam_categories:{select:{name:!0}}}}),s=await r.questionResponse.count({where:{questionId:e.questionId,isCorrect:!0}});return{id:t.id,text:t.text.substring(0,100)+"...",difficulty:t.difficulty,marks:t.marks,category:t.exam_categories.name,totalResponses:e._count.id,correctResponses:s,accuracy:e._count.id>0?s/e._count.id*100:0}}))}catch(e){throw n.error("Get question analysis failed",e),e}}async getRealTimeAnalytics(){try{const e=new Date,t=new Date(e.getTime()-36e5),[s,a,n,i]=(new Date(e.getTime()-864e5),await Promise.all([r.user.count({where:{lastLoginAt:{gte:t}}}),r.examAttempt.count({where:{createdAt:{gte:t}}}),r.payment.count({where:{createdAt:{gte:t},status:"COMPLETED"}}),this.getSystemLoad()]));return{activeUsers:s,recentAttempts:a,recentPayments:n,systemLoad:i,timestamp:e}}catch(e){throw n.error("Get real-time analytics failed",e),e}}async getSystemLoad(){try{return{cpu:100*Math.random(),memory:100*Math.random(),disk:100*Math.random(),network:100*Math.random()}}catch(e){return n.error("Get system load failed",e),{cpu:0,memory:0,disk:0,network:0}}}}},6194:(e,t,s)=>{const a=s(7252).Router(),n=s(2834),{auth:r,authorize:i}=s(4997);a.post("/",r,n.createPayment),a.post("/:paymentId/process",r,n.processPayment),a.get("/:paymentId",r,n.getPayment),a.get("/user/history",r,n.getUserPayments),a.post("/:paymentId/refund",r,n.refundPayment),a.get("/stats/analytics",r,i(["SUPER_ADMIN","ADMIN"]),n.getPaymentStats),a.post("/admin/process-on-print/:bookingId",r,n.processPaymentOnPrint),e.exports=a},6330:e=>{"use strict";e.exports=require("@prisma/client")},6650:(e,t,s)=>{const a=s(2446);e.exports={validatePayment:e=>a.object({bookingId:a.string().required().messages({"string.empty":"Booking ID is required","any.required":"Booking ID is required"}),paymentMethod:a.string().valid("CREDIT_CARD","DEBIT_CARD","PAYPAL","BANK_TRANSFER","CASH").required().messages({"string.empty":"Payment method is required","any.required":"Payment method is required","any.only":"Payment method must be one of: CREDIT_CARD, DEBIT_CARD, PAYPAL, BANK_TRANSFER, CASH"}),description:a.string().max(500).optional().messages({"string.max":"Description cannot exceed 500 characters"})}).validate(e),validatePaymentProcessing:e=>a.object({status:a.string().valid("PENDING","PROCESSING","COMPLETED","FAILED","CANCELLED","REFUNDED").required().messages({"string.empty":"Payment status is required","any.required":"Payment status is required","any.only":"Payment status must be one of: PENDING, PROCESSING, COMPLETED, FAILED, CANCELLED, REFUNDED"}),metadata:a.object().optional().messages({"object.base":"Metadata must be an object"})}).validate(e),validateRefund:e=>a.object({amount:a.number().positive().required().messages({"number.base":"Amount must be a number","number.positive":"Amount must be positive","any.required":"Amount is required"}),reason:a.string().max(500).required().messages({"string.empty":"Refund reason is required","string.max":"Refund reason cannot exceed 500 characters","any.required":"Refund reason is required"})}).validate(e)}},6848:(e,t,s)=>{const a=s(1572),n=s(9665);e.exports=class{constructor(){this.transporter=a.createTransport({host:process.env.SMTP_HOST,port:process.env.SMTP_PORT,secure:"true"===process.env.SMTP_SECURE,auth:{user:process.env.SMTP_USER,pass:process.env.SMTP_PASS}})}async sendVerificationEmail(e,t){try{const s=`${process.env.FRONTEND_URL}/verify-email?token=${t}`,a={from:process.env.FROM_EMAIL,to:e,subject:"Verify Your Email Address",html:this.getVerificationEmailTemplate(s)};await this.transporter.sendMail(a),n.info("Verification email sent",{email:e})}catch(e){throw n.error("Send verification email failed",e),e}}async sendPasswordResetEmail(e,t){try{const s=`${process.env.FRONTEND_URL}/reset-password?token=${t}`,a={from:process.env.FROM_EMAIL,to:e,subject:"Reset Your Password",html:this.getPasswordResetEmailTemplate(s)};await this.transporter.sendMail(a),n.info("Password reset email sent",{email:e})}catch(e){throw n.error("Send password reset email failed",e),e}}async sendWelcomeEmail(e,t){try{const s={from:process.env.FROM_EMAIL,to:e,subject:"Welcome to Our Mock Test Platform",html:this.getWelcomeEmailTemplate(t)};await this.transporter.sendMail(s),n.info("Welcome email sent",{email:e})}catch(e){throw n.error("Send welcome email failed",e),e}}async sendExamBookingConfirmation(e,t){try{const s={from:process.env.FROM_EMAIL,to:e,subject:"Exam Booking Confirmation",html:this.getExamBookingEmailTemplate(t)};await this.transporter.sendMail(s),n.info("Exam booking confirmation email sent",{email:e})}catch(e){throw n.error("Send exam booking confirmation failed",e),e}}async sendExamResultsEmail(e,t){try{const s={from:process.env.FROM_EMAIL,to:e,subject:"Your Exam Results",html:this.getExamResultsEmailTemplate(t)};await this.transporter.sendMail(s),n.info("Exam results email sent",{email:e})}catch(e){throw n.error("Send exam results email failed",e),e}}async sendCertificateEmail(e,t){try{const s={from:process.env.FROM_EMAIL,to:e,subject:"Your Certificate is Ready",html:this.getCertificateEmailTemplate(t)};await this.transporter.sendMail(s),n.info("Certificate email sent",{email:e})}catch(e){throw n.error("Send certificate email failed",e),e}}async sendAccountStatusEmail(e,t){try{const s={from:process.env.FROM_EMAIL,to:e,subject:"Account "+(t.isActive?"Activated":"Deactivated"),html:this.getAccountStatusEmailTemplate(t)};await this.transporter.sendMail(s),n.info("Account status email sent",{email:e})}catch(e){throw n.error("Send account status email failed",e),e}}async sendNotificationEmail(e,t){try{const s={from:process.env.FROM_EMAIL,to:e,subject:t.subject,html:this.getNotificationEmailTemplate(t)};await this.transporter.sendMail(s),n.info("Notification email sent",{email:e})}catch(e){throw n.error("Send notification email failed",e),e}}getVerificationEmailTemplate(e){return`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset="utf-8">\n        <title>Verify Your Email</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: #007bff; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background: #f9f9f9; }\n          .button { display: inline-block; padding: 12px 24px; background: #007bff; color: white; text-decoration: none; border-radius: 5px; }\n          .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }\n        </style>\n      </head>\n      <body>\n        <div class="container">\n          <div class="header">\n            <h1>Verify Your Email Address</h1>\n          </div>\n          <div class="content">\n            <p>Thank you for registering with our Mock Test Platform!</p>\n            <p>Please click the button below to verify your email address:</p>\n            <p style="text-align: center;">\n              <a href="${e}" class="button">Verify Email</a>\n            </p>\n            <p>If the button doesn't work, you can copy and paste this link into your browser:</p>\n            <p>${e}</p>\n            <p>This link will expire in 24 hours.</p>\n          </div>\n          <div class="footer">\n            <p>If you didn't create an account, you can safely ignore this email.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `}getPasswordResetEmailTemplate(e){return`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset="utf-8">\n        <title>Reset Your Password</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: #dc3545; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background: #f9f9f9; }\n          .button { display: inline-block; padding: 12px 24px; background: #dc3545; color: white; text-decoration: none; border-radius: 5px; }\n          .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }\n        </style>\n      </head>\n      <body>\n        <div class="container">\n          <div class="header">\n            <h1>Reset Your Password</h1>\n          </div>\n          <div class="content">\n            <p>You requested to reset your password.</p>\n            <p>Click the button below to create a new password:</p>\n            <p style="text-align: center;">\n              <a href="${e}" class="button">Reset Password</a>\n            </p>\n            <p>If the button doesn't work, you can copy and paste this link into your browser:</p>\n            <p>${e}</p>\n            <p>This link will expire in 1 hour.</p>\n            <p>If you didn't request a password reset, you can safely ignore this email.</p>\n          </div>\n          <div class="footer">\n            <p>For security reasons, this link will expire soon.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `}getWelcomeEmailTemplate(e){return`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset="utf-8">\n        <title>Welcome to Our Platform</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: #28a745; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background: #f9f9f9; }\n          .button { display: inline-block; padding: 12px 24px; background: #28a745; color: white; text-decoration: none; border-radius: 5px; }\n          .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }\n        </style>\n      </head>\n      <body>\n        <div class="container">\n          <div class="header">\n            <h1>Welcome to Our Mock Test Platform!</h1>\n          </div>\n          <div class="content">\n            <p>Hello ${e.firstName},</p>\n            <p>Welcome to our professional mock test platform! We're excited to have you on board.</p>\n            <p>Here's what you can do:</p>\n            <ul>\n              <li>Browse available exams</li>\n              <li>Book and take mock tests</li>\n              <li>View your results and certificates</li>\n              <li>Track your progress</li>\n            </ul>\n            <p style="text-align: center;">\n              <a href="${process.env.FRONTEND_URL}/dashboard" class="button">Get Started</a>\n            </p>\n            <p>If you have any questions, feel free to contact our support team.</p>\n          </div>\n          <div class="footer">\n            <p>Thank you for choosing our platform!</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `}getExamBookingEmailTemplate(e){return`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset="utf-8">\n        <title>Exam Booking Confirmation</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: #17a2b8; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background: #f9f9f9; }\n          .details { background: white; padding: 15px; margin: 15px 0; border-radius: 5px; }\n          .button { display: inline-block; padding: 12px 24px; background: #17a2b8; color: white; text-decoration: none; border-radius: 5px; }\n          .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }\n        </style>\n      </head>\n      <body>\n        <div class="container">\n          <div class="header">\n            <h1>Exam Booking Confirmation</h1>\n          </div>\n          <div class="content">\n            <p>Hello ${e.userName},</p>\n            <p>Your exam booking has been confirmed!</p>\n            <div class="details">\n              <h3>Exam Details:</h3>\n              <p><strong>Exam:</strong> ${e.examTitle}</p>\n              <p><strong>Category:</strong> ${e.categoryName}</p>\n              <p><strong>Date:</strong> ${e.scheduledDate}</p>\n              <p><strong>Duration:</strong> ${e.duration} minutes</p>\n              <p><strong>Price:</strong> $${e.price}</p>\n            </div>\n            <p style="text-align: center;">\n              <a href="${process.env.FRONTEND_URL}/exams/${e.examId}" class="button">View Exam Details</a>\n            </p>\n            <p>Good luck with your exam!</p>\n          </div>\n          <div class="footer">\n            <p>If you have any questions, please contact our support team.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `}getExamResultsEmailTemplate(e){const t=e.isPassed,s=t?"#28a745":"#dc3545";return`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset="utf-8">\n        <title>Your Exam Results</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: ${s}; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background: #f9f9f9; }\n          .results { background: white; padding: 15px; margin: 15px 0; border-radius: 5px; text-align: center; }\n          .score { font-size: 48px; font-weight: bold; color: ${s}; }\n          .button { display: inline-block; padding: 12px 24px; background: ${s}; color: white; text-decoration: none; border-radius: 5px; }\n          .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }\n        </style>\n      </head>\n      <body>\n        <div class="container">\n          <div class="header">\n            <h1>${t?"Congratulations!":"Exam Results"}</h1>\n          </div>\n          <div class="content">\n            <p>Hello ${e.userName},</p>\n            <p>Your exam results are ready!</p>\n            <div class="results">\n              <div class="score">${e.percentage}%</div>\n              <p><strong>Status:</strong> ${e.status}</p>\n              <p><strong>Total Marks:</strong> ${e.totalMarks}/${e.maxMarks}</p>\n              <p><strong>Time Taken:</strong> ${e.timeSpent} minutes</p>\n            </div>\n            <p style="text-align: center;">\n              <a href="${process.env.FRONTEND_URL}/results/${e.attemptId}" class="button">View Detailed Results</a>\n            </p>\n            ${t?"<p>Congratulations on passing the exam!</p>":"<p>Don't worry, you can retake the exam to improve your score.</p>"}\n          </div>\n          <div class="footer">\n            <p>Keep practicing to improve your skills!</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `}getCertificateEmailTemplate(e){return`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset="utf-8">\n        <title>Your Certificate is Ready</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: #ffc107; color: #333; padding: 20px; text-align: center; }\n          .content { padding: 20px; background: #f9f9f9; }\n          .details { background: white; padding: 15px; margin: 15px 0; border-radius: 5px; }\n          .button { display: inline-block; padding: 12px 24px; background: #ffc107; color: #333; text-decoration: none; border-radius: 5px; }\n          .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }\n        </style>\n      </head>\n      <body>\n        <div class="container">\n          <div class="header">\n            <h1>🎉 Your Certificate is Ready!</h1>\n          </div>\n          <div class="content">\n            <p>Hello ${e.userName},</p>\n            <p>Congratulations! Your certificate for the exam is now ready for download.</p>\n            <div class="details">\n              <h3>Certificate Details:</h3>\n              <p><strong>Certificate Number:</strong> ${e.certificateNumber}</p>\n              <p><strong>Exam:</strong> ${e.examTitle}</p>\n              <p><strong>Score:</strong> ${e.score}%</p>\n              <p><strong>Issued Date:</strong> ${e.issuedDate}</p>\n              <p><strong>Valid Until:</strong> ${e.validUntil}</p>\n            </div>\n            <p style="text-align: center;">\n              <a href="${process.env.FRONTEND_URL}/certificates/${e.certificateId}/download" class="button">Download Certificate</a>\n            </p>\n            <p>You can also view and manage all your certificates from your dashboard.</p>\n          </div>\n          <div class="footer">\n            <p>Keep up the great work!</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `}getAccountStatusEmailTemplate(e){const t=e.isActive,s=t?"#28a745":"#dc3545",a=t?"Account Activated":"Account Deactivated";return`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset="utf-8">\n        <title>${a}</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: ${s}; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background: #f9f9f9; }\n          .button { display: inline-block; padding: 12px 24px; background: ${s}; color: white; text-decoration: none; border-radius: 5px; }\n          .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }\n        </style>\n      </head>\n      <body>\n        <div class="container">\n          <div class="header">\n            <h1>${a}</h1>\n          </div>\n          <div class="content">\n            <p>Hello ${e.firstName},</p>\n            ${t?"<p>Your account has been activated successfully. You can now access all features of our platform.</p>":"<p>Your account has been deactivated. You will no longer be able to access the platform.</p>"}\n            ${e.reason?`<p><strong>Reason:</strong> ${e.reason}</p>`:""}\n            ${t?`<p style="text-align: center;">\n                  <a href="${process.env.FRONTEND_URL}/login" class="button">Login to Your Account</a>\n                </p>`:"<p>If you believe this was done in error, please contact our support team.</p>"}\n          </div>\n          <div class="footer">\n            <p>Thank you for using our platform.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `}getNotificationEmailTemplate(e){return`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset="utf-8">\n        <title>${e.subject}</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: #6c757d; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background: #f9f9f9; }\n          .button { display: inline-block; padding: 12px 24px; background: #6c757d; color: white; text-decoration: none; border-radius: 5px; }\n          .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }\n        </style>\n      </head>\n      <body>\n        <div class="container">\n          <div class="header">\n            <h1>${e.subject}</h1>\n          </div>\n          <div class="content">\n            <p>Hello ${e.userName},</p>\n            <p>${e.message}</p>\n            ${e.actionUrl?`\n              <p style="text-align: center;">\n                <a href="${e.actionUrl}" class="button">${e.actionText||"Take Action"}</a>\n              </p>\n            `:""}\n          </div>\n          <div class="footer">\n            <p>Thank you for using our platform.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `}}},6928:e=>{"use strict";e.exports=require("path")},7174:e=>{"use strict";e.exports=require("compression")},7252:e=>{"use strict";e.exports=require("express")},7402:(e,t,s)=>{const a=s(2446),n=s(9665);e.exports={validateExamBooking:e=>{try{return a.object({examId:a.string().required().messages({"string.empty":"Exam ID is required","any.required":"Exam ID is required"}),userId:a.string().optional().messages({"string.empty":"User ID cannot be empty"}),scheduledAt:a.date().min("now").required().messages({"date.base":"Scheduled date must be a valid date","date.min":"Scheduled date must be in the future","any.required":"Scheduled date is required"}),attemptsAllowed:a.number().integer().min(1).max(10).default(1).messages({"number.base":"Attempts allowed must be a number","number.integer":"Attempts allowed must be a whole number","number.min":"Attempts allowed must be at least 1","number.max":"Attempts allowed cannot exceed 10"}),notes:a.string().max(1e3).allow("").optional().messages({"string.max":"Notes must not exceed 1000 characters"})}).validate(e)}catch(e){return n.error("Exam booking validation error",e),{error:{details:[{message:"Validation error occurred"}]}}}},validateBookingUpdate:(e,t,s)=>{try{const n=a.object({scheduledDate:a.date().min("now").optional().messages({"date.base":"Scheduled date must be a valid date","date.min":"Scheduled date must be in the future"}),status:a.string().valid("CONFIRMED","CANCELLED","RESCHEDULED").optional().messages({"string.empty":"Status cannot be empty","any.only":"Status must be one of: CONFIRMED, CANCELLED, RESCHEDULED"}),specialRequirements:a.string().max(500).optional().messages({"string.max":"Special requirements must not exceed 500 characters"}),notes:a.string().max(1e3).allow("").optional().messages({"string.max":"Notes must not exceed 1000 characters"})}),{error:r,value:i}=n.validate(e.body);if(r)return t.status(400).json({success:!1,message:"Validation failed",errors:r.details.map(e=>({field:e.path.join("."),message:e.message}))});e.validatedData=i,s()}catch(e){n.error("Exam booking update validation error",e),t.status(500).json({success:!1,message:"Validation error occurred"})}},validateBookingId:(e,t,s)=>{try{const n=a.object({bookingId:a.string().required().messages({"string.empty":"Booking ID is required","any.required":"Booking ID is required"})}),{error:r}=n.validate(e.params);if(r)return t.status(400).json({success:!1,message:"Invalid booking ID",errors:r.details.map(e=>({field:e.path.join("."),message:e.message}))});s()}catch(e){n.error("Booking ID validation error",e),t.status(500).json({success:!1,message:"Validation error occurred"})}},validateBookingQuery:(e,t,s)=>{try{const n=a.object({page:a.number().integer().min(1).default(1).messages({"number.base":"Page must be a number","number.integer":"Page must be an integer","number.min":"Page must be at least 1"}),limit:a.number().integer().min(1).max(100).default(10).messages({"number.base":"Limit must be a number","number.integer":"Limit must be an integer","number.min":"Limit must be at least 1","number.max":"Limit cannot exceed 100"}),status:a.string().valid("PENDING","CONFIRMED","CANCELLED","COMPLETED","RESCHEDULED").optional().messages({"string.empty":"Status cannot be empty","any.only":"Status must be one of: PENDING, CONFIRMED, CANCELLED, COMPLETED, RESCHEDULED"}),examId:a.string().optional().messages({"string.empty":"Exam ID cannot be empty"}),startDate:a.date().optional().messages({"date.base":"Start date must be a valid date"}),endDate:a.date().min(a.ref("startDate")).optional().messages({"date.base":"End date must be a valid date","date.min":"End date must be after start date"})}),{error:r,value:i}=n.validate(e.query);if(r)return t.status(400).json({success:!1,message:"Invalid query parameters",errors:r.details.map(e=>({field:e.path.join("."),message:e.message}))});e.validatedQuery=i,s()}catch(e){n.error("Booking query validation error",e),t.status(500).json({success:!1,message:"Validation error occurred"})}}}},7409:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(4729),{v4:r}=s(3903),i=s(9665),o=s(6848),c=new a,l=new o;e.exports=class{async createUser(e,t){try{const{email:s,password:a,firstName:i,lastName:o,role:u="STUDENT",phone:d,dateOfBirth:m,gender:g,address:h,departmentId:p,profilePicture:y,status:f="active",isPhoneVerified:w=!1,isActive:x=!0,isEmailVerified:b}=e;if(await c.user.findUnique({where:{email:s.toLowerCase()}}))return{success:!1,message:"User with this email already exists"};const v=parseInt(process.env.BCRYPT_ROUNDS)||12,A=await n.hash(a,v),E=await c.user.create({data:{email:s.toLowerCase(),password:A,firstName:i,lastName:o,role:u,phone:d,dateOfBirth:m?new Date(m):null,gender:g,address:h,departmentId:p,profilePicture:y,status:f,isPhoneVerified:w,isActive:x,emailVerificationToken:r(),isEmailVerified:void 0!==b?b:"STUDENT"!==u},select:{id:!0,email:!0,firstName:!0,lastName:!0,role:!0,phone:!0,dateOfBirth:!0,gender:!0,address:!0,departmentId:!0,profilePicture:!0,status:!0,isPhoneVerified:!0,isEmailVerified:!0,isActive:!0,createdAt:!0}});return"STUDENT"!==u||E.isEmailVerified||await l.sendVerificationEmail(E.email,E.emailVerificationToken),await c.auditLog.create({data:{userId:t,action:"USER_CREATED",resource:"USER",resourceId:E.id,details:{createdUser:E.email,role:E.role},ipAddress:"system",userAgent:"user-service"}}),{success:!0,user:E}}catch(e){return i.error("Create user failed",e),{success:!1,message:"Failed to create user"}}}async getAllUsers(e={}){const{page:t=1,limit:s=20,role:a,isActive:n,search:r,sortBy:o,sortOrder:l}=e,u=(t-1)*s;try{const e={};a&&(e.role=a),void 0!==n&&(e.isActive=n),r&&(e.OR=[{email:{contains:r,mode:"insensitive"}},{firstName:{contains:r,mode:"insensitive"}},{lastName:{contains:r,mode:"insensitive"}}]);const i={};o&&l?i[o]=l:i.createdAt="desc";const[d,m]=await Promise.all([c.user.findMany({where:e,select:{id:!0,email:!0,firstName:!0,lastName:!0,phone:!0,dateOfBirth:!0,gender:!0,profileImage:!0,profilePicture:!0,address:!0,departmentId:!0,role:!0,status:!0,isActive:!0,isEmailVerified:!0,isPhoneVerified:!0,lastLoginAt:!0,loginAttempts:!0,lockedUntil:!0,createdAt:!0,updatedAt:!0,_count:{select:{examAttempts:!0,examBookings:!0}}},orderBy:i,skip:u,take:s}),c.user.count({where:e})]);return{users:d,pagination:{page:t,limit:s,total:m,pages:Math.ceil(m/s),hasNext:t*s<m,hasPrev:t>1}}}catch(e){throw i.error("Get all users failed",e),e}}async getUserDetails(e){try{return await c.user.findUnique({where:{id:e},include:{_count:{select:{examAttempts:!0,examBookings:!0,certificates:!0}},examAttempts:{take:5,orderBy:{createdAt:"desc"},include:{exam:{select:{title:!0,examCategory:{select:{name:!0}}}}}},examBookings:{take:5,orderBy:{createdAt:"desc"},include:{exam:{select:{title:!0,examCategory:{select:{name:!0}}}}}}}})}catch(e){throw i.error("Get user details failed",e),e}}async updateUser(e,t,s){try{if(!await c.user.findUnique({where:{id:e}}))return{success:!1,message:"User not found"};if(t.password){const e=parseInt(process.env.BCRYPT_ROUNDS)||12;t.password=await n.hash(t.password,e)}const a=await c.user.update({where:{id:e},data:t,select:{id:!0,email:!0,firstName:!0,lastName:!0,phone:!0,dateOfBirth:!0,gender:!0,profileImage:!0,profilePicture:!0,address:!0,departmentId:!0,role:!0,status:!0,isActive:!0,isEmailVerified:!0,isPhoneVerified:!0,lastLoginAt:!0,loginAttempts:!0,lockedUntil:!0,createdAt:!0,updatedAt:!0}});return await c.auditLog.create({data:{userId:s,action:"USER_UPDATED",resource:"USER",resourceId:e,details:{updatedFields:Object.keys(t)},ipAddress:"system",userAgent:"user-service"}}),{success:!0,user:a}}catch(e){return i.error("Update user failed",e),{success:!1,message:"Failed to update user"}}}async toggleUserStatus(e,t,s,a){try{const n=await c.user.findUnique({where:{id:e}});if(!n)return{success:!1,message:"User not found"};const r=await c.user.update({where:{id:e},data:{isActive:t},select:{id:!0,email:!0,firstName:!0,lastName:!0,role:!0,isActive:!0,updatedAt:!0}});return await c.auditLog.create({data:{userId:a,action:"USER_STATUS_TOGGLED",resource:"USER",resourceId:e,details:{newStatus:t,reason:s,previousStatus:n.isActive},ipAddress:"system",userAgent:"user-service"}}),await l.sendAccountStatusEmail(n.email,{firstName:n.firstName,isActive:t,reason:s}),global.notificationService&&await global.notificationService.notifyAccountStatusChanged(e,{isActive:t,reason:s,firstName:n.firstName}),{success:!0,user:r}}catch(e){return i.error("Toggle user status failed",e),{success:!1,message:"Failed to update user status"}}}async bulkImportUsers(e,t){try{const s={successful:[],failed:[],total:e.length};for(const a of e)try{const e=await this.createUser(a,t);e.success?s.successful.push(e.user):s.failed.push({email:a.email,error:e.message})}catch(e){s.failed.push({email:a.email,error:e.message})}return await c.auditLog.create({data:{userId:t,action:"BULK_USER_IMPORT",resource:"USER",resourceId:null,details:{totalUsers:s.total,successful:s.successful.length,failed:s.failed.length},ipAddress:"system",userAgent:"user-service"}}),s}catch(e){throw i.error("Bulk import users failed",e),e}}async getUserAnalytics(e={}){const{startDate:t,endDate:s,role:a}=e;try{const e={};(t||s)&&(e.createdAt={},t&&(e.createdAt.gte=new Date(t)),s&&(e.createdAt.lte=new Date(s))),a&&(e.role=a);const[n,r,i,o,l,u]=await Promise.all([c.user.count({where:e}),c.user.count({where:{...e,isActive:!0}}),c.user.count({where:{...e,isEmailVerified:!0}}),c.user.groupBy({by:["role"],where:e,_count:{id:!0}}),c.user.groupBy({by:["createdAt"],where:e,_count:{id:!0}}),c.user.aggregate({where:{...e,lastLoginAt:{not:null}},_avg:{loginAttempts:!0}})]);return{totalUsers:n,activeUsers:r,verifiedUsers:i,usersByRole:o.reduce((e,t)=>(e[t.role]=t._count.id,e),{}),usersByMonth:l.map(e=>({month:e.createdAt,count:e._count.id})),averageLoginAttempts:u._avg.loginAttempts||0,verificationRate:n>0?i/n*100:0,activationRate:n>0?r/n*100:0}}catch(e){throw i.error("Get user analytics failed",e),e}}}},7455:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),r=s(6848),{v4:i}=s(3903),o=new a,c=new r;e.exports=class{constructor(){this.isEnabled="false"!==process.env.NOTIFICATIONS_ENABLED,this.channels={websocket:!0,email:!0,push:"true"===process.env.PUSH_NOTIFICATIONS_ENABLED,sms:"true"===process.env.SMS_NOTIFICATIONS_ENABLED,database:!0},this.io=null}setSocketIO(e){this.io=e,n.info("🔔 NotificationService: WebSocket instance set")}async sendNotification(e){try{if(!this.isEnabled)return n.info("Notifications disabled, skipping notification",{type:e.type}),{success:!0,message:"Notification skipped (disabled)"};const{userId:t,type:s,title:a,message:r,data:o={},priority:c="normal",channels:l=["websocket","database"],templateData:u={},scheduleAt:d=null,expiresAt:m=null}=e,g=i();n.info("🔔 Sending notification",{notificationId:g,userId:t,type:s,title:a,priority:c,channels:l});const h=[];if(l.includes("database")&&this.channels.database){const e=await this.storeNotification({id:g,userId:t,type:s,title:a,message:r,data:o,priority:c,scheduleAt:d,expiresAt:m});h.push({channel:"database",success:e.success})}if(l.includes("websocket")&&this.channels.websocket&&this.io){const e=await this.sendWebSocketNotification(t,{id:g,type:s,title:a,message:r,data:o,priority:c,timestamp:(new Date).toISOString()});h.push({channel:"websocket",success:e.success})}if(l.includes("email")&&this.channels.email){const e=await this.sendEmailNotification(t,{type:s,title:a,message:r,templateData:u});h.push({channel:"email",success:e.success})}if(l.includes("push")&&this.channels.push){const e=await this.sendPushNotification(t,{title:a,message:r,data:o});h.push({channel:"push",success:e.success})}if(l.includes("sms")&&this.channels.sms){const e=await this.sendSMSNotification(t,{message:`${a}: ${r}`});h.push({channel:"sms",success:e.success})}const p=h.filter(e=>e.success).length,y=h.length;return n.info("📨 Notification sent",{notificationId:g,successfulChannels:p,totalChannels:y,results:h}),{success:p>0,notificationId:g,results:h,message:`Notification sent via ${p}/${y} channels`}}catch(e){return n.error("❌ Failed to send notification",e),{success:!1,message:"Failed to send notification",error:e.message}}}async storeNotification(e){try{return{success:!0,notification:await o.notification.create({data:{id:e.id,userId:e.userId,type:e.type,title:e.title,message:e.message,data:e.data,priority:e.priority,status:"UNREAD",scheduleAt:e.scheduleAt,expiresAt:e.expiresAt}})}}catch(e){return n.error("Failed to store notification",e),{success:!1,error:e.message}}}async sendWebSocketNotification(e,t){try{return this.io?(this.io.to(`user-${e}`).emit("notification",t),["high","urgent"].includes(t.priority)&&this.io.to("admin-room").emit("admin-notification",{...t,targetUserId:e}),{success:!0}):{success:!1,error:"WebSocket not initialized"}}catch(e){return n.error("Failed to send WebSocket notification",e),{success:!1,error:e.message}}}async sendEmailNotification(e,t){try{const s=await o.user.findUnique({where:{id:e},select:{email:!0,firstName:!0,lastName:!0}});return s?await this.sendTypedEmail(s.email,t,s):{success:!1,error:"User not found"}}catch(e){return n.error("Failed to send email notification",e),{success:!1,error:e.message}}}async sendTypedEmail(e,t,s){try{const{type:a,templateData:n}=t;switch(a){case"BOOKING_CONFIRMED":await c.sendExamBookingConfirmation(e,n);break;case"EXAM_COMPLETED":await c.sendExamResultsEmail(e,n);break;case"CERTIFICATE_READY":await c.sendCertificateEmail(e,n);break;case"ACCOUNT_STATUS_CHANGED":await c.sendAccountStatusEmail(e,n);break;default:await c.sendNotificationEmail(e,{...t,userName:`${s.firstName} ${s.lastName}`})}return{success:!0}}catch(e){return n.error("Failed to send typed email",e),{success:!1,error:e.message}}}async sendPushNotification(e,t){try{return n.info("Push notification would be sent",{userId:e,notification:t}),{success:!0}}catch(e){return n.error("Failed to send push notification",e),{success:!1,error:e.message}}}async sendSMSNotification(e,t){try{return n.info("SMS notification would be sent",{userId:e,notification:t}),{success:!0}}catch(e){return n.error("Failed to send SMS notification",e),{success:!1,error:e.message}}}async notifyUserRegistered(e){return await this.sendNotification({userId:e.id,type:"USER_REGISTERED",title:"🎉 Welcome to Our Platform!",message:`Welcome ${e.firstName}! Your account has been created successfully.`,priority:"normal",channels:["websocket","database","email"],templateData:e})}async notifyEmailVerified(e){return await this.sendNotification({userId:e.id,type:"EMAIL_VERIFIED",title:"✅ Email Verified Successfully",message:"Your email has been verified. You can now access all platform features.",priority:"normal",channels:["websocket","database"]})}async notifyAccountStatusChanged(e,t){const s=t.isActive?"✅ Account Activated":"⚠️ Account Deactivated",a=t.isActive?"Your account has been activated and you can now access the platform.":`Your account has been deactivated. Reason: ${t.reason||"Administrative decision"}`;return await this.sendNotification({userId:e,type:"ACCOUNT_STATUS_CHANGED",title:s,message:a,priority:"high",channels:["websocket","database","email"],templateData:t})}async notifyBookingConfirmed(e){return await this.sendNotification({userId:e.userId,type:"BOOKING_CONFIRMED",title:"📅 Exam Booking Confirmed",message:`Your booking for "${e.exam.title}" has been confirmed.`,priority:"normal",channels:["websocket","database","email"],data:{bookingId:e.id,examId:e.examId},templateData:e})}async notifyBookingCancelled(e,t){return await this.sendNotification({userId:e.userId,type:"BOOKING_CANCELLED",title:"❌ Exam Booking Cancelled",message:`Your booking for "${e.exam.title}" has been cancelled. ${t?`Reason: ${t}`:""}`,priority:"normal",channels:["websocket","database","email"],data:{bookingId:e.id,examId:e.examId,reason:t}})}async notifyPaymentSuccess(e){return await this.sendNotification({userId:e.userId,type:"PAYMENT_SUCCESS",title:"💳 Payment Successful",message:`Payment of ${e.currency} ${e.amount} has been processed successfully.`,priority:"normal",channels:["websocket","database","email"],data:{paymentId:e.id,amount:e.amount}})}async notifyPaymentFailed(e){return await this.sendNotification({userId:e.userId,type:"PAYMENT_FAILED",title:"⚠️ Payment Failed",message:`Payment of ${e.currency} ${e.amount} could not be processed. Please try again.`,priority:"high",channels:["websocket","database","email"],data:{paymentId:e.id,amount:e.amount}})}async notifyExamStarted(e){return await this.sendNotification({userId:e.userId,type:"EXAM_STARTED",title:"📝 Exam Started",message:`You have started the exam "${e.exam.title}". Good luck!`,priority:"normal",channels:["websocket","database"],data:{attemptId:e.id,examId:e.examId}})}async notifyExamCompleted(e,t){const s=t.percentage>=t.passingPercentage,a=s?"🎉 Exam Completed - Passed!":"📝 Exam Completed",n=`You scored ${t.percentage.toFixed(1)}% on "${e.exam.title}". ${s?"Congratulations!":"Keep practicing!"}`;return await this.sendNotification({userId:e.userId,type:"EXAM_COMPLETED",title:a,message:n,priority:"high",channels:["websocket","database","email"],data:{attemptId:e.id,examId:e.examId,score:t.score,percentage:t.percentage,passed:s},templateData:{...e,...t,passed:s}})}async notifyCertificateReady(e){return await this.sendNotification({userId:e.userId,type:"CERTIFICATE_READY",title:"🏆 Certificate Ready",message:`Your certificate for "${e.examTitle}" is now ready for download.`,priority:"high",channels:["websocket","database","email"],data:{certificateId:e.id},templateData:e})}async notifyExamReminder(e,t="24h"){return await this.sendNotification({userId:e.userId,type:"EXAM_REMINDER",title:"⏰ Exam Reminder",message:`Your exam "${e.exam.title}" is scheduled in ${{"24h":"24 hours","1h":"1 hour","15m":"15 minutes"}[t]}.`,priority:"normal",channels:["websocket","database","email"],data:{bookingId:e.id,reminderType:t}})}async notifySystemAlert(e){const t=(await o.user.findMany({where:{role:{in:["ADMIN","SUPER_ADMIN"]},isActive:!0},select:{id:!0}})).map(t=>this.sendNotification({userId:t.id,type:"SYSTEM_ALERT",title:"⚠️ System Alert",message:e.message,priority:"urgent",channels:["websocket","database","email"],data:e}));return await Promise.all(t)}async notifyAdminsNewUser(e){const t=(await o.user.findMany({where:{role:{in:["ADMIN","SUPER_ADMIN"]},isActive:!0},select:{id:!0}})).map(t=>this.sendNotification({userId:t.id,type:"NEW_USER_REGISTERED",title:"👤 New User Registration",message:`${e.firstName} ${e.lastName} (${e.email}) has registered as a ${e.role}.`,priority:"normal",channels:["websocket","database"],data:{newUserId:e.id}}));return await Promise.all(t)}async getUserNotifications(e,t={}){try{const{page:s=1,limit:a=20,status:n=null,type:r=null,priority:i=null}=t,c=(s-1)*a,l={userId:e};n&&(l.status=n),r&&(l.type=r),i&&(l.priority=i);const[u,d]=await Promise.all([o.notification.findMany({where:l,orderBy:{createdAt:"desc"},skip:c,take:a}),o.notification.count({where:l})]);return{success:!0,notifications:u,pagination:{page:s,limit:a,total:d,pages:Math.ceil(d/a)}}}catch(e){return n.error("Failed to get user notifications",e),{success:!1,error:e.message}}}async markAsRead(e,t){try{return await o.notification.update({where:{id:e,userId:t},data:{status:"READ",readAt:new Date}}),{success:!0}}catch(e){return n.error("Failed to mark notification as read",e),{success:!1,error:e.message}}}async markAllAsRead(e){try{return await o.notification.updateMany({where:{userId:e,status:"UNREAD"},data:{status:"READ",readAt:new Date}}),{success:!0}}catch(e){return n.error("Failed to mark all notifications as read",e),{success:!1,error:e.message}}}async deleteNotification(e,t){try{return await o.notification.delete({where:{id:e,userId:t}}),{success:!0}}catch(e){return n.error("Failed to delete notification",e),{success:!1,error:e.message}}}async getNotificationStats(e){try{const[t,s,a,n]=await Promise.all([o.notification.count({where:{userId:e}}),o.notification.count({where:{userId:e,status:"UNREAD"}}),o.notification.groupBy({by:["type"],where:{userId:e},_count:{id:!0}}),o.notification.groupBy({by:["priority"],where:{userId:e},_count:{id:!0}})]);return{success:!0,stats:{total:t,unread:s,byType:a.reduce((e,t)=>(e[t.type]=t._count.id,e),{}),byPriority:n.reduce((e,t)=>(e[t.priority]=t._count.id,e),{})}}}catch(e){return n.error("Failed to get notification stats",e),{success:!1,error:e.message}}}}},7534:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=new a,r=s(9665);e.exports=new class{async createPayment(e){try{const{userId:t,bookingId:s,amount:a,currency:i,paymentMethod:o,description:c}=e;if(s&&!await n.examBooking.findUnique({where:{id:s,userId:t}}))throw new Error("Booking not found or access denied");const l=await n.payment.create({data:{userId:t,bookingId:s,amount:a,currency:i,paymentMethod:o,description:c,status:"PENDING"},include:{user:{select:{id:!0,email:!0,firstName:!0,lastName:!0}},booking:{include:{exam:{select:{id:!0,title:!0}}}}}});return r.info(`Payment created: ${l.id} for user: ${t}`),l}catch(e){throw r.error("Error creating payment:",e),e}}async getPayment(e,t){try{const s=await n.payment.findFirst({where:{id:e,userId:t},include:{booking:{include:{exam:{select:{id:!0,title:!0}}}}}});if(!s)throw new Error("Payment not found");return s}catch(e){throw r.error("Error getting payment:",e),e}}async getUserPayments(e,t={}){try{const{page:s=1,limit:a=10,status:r}=t,i=(s-1)*a,o={userId:e};r&&(o.status=r);const[c,l]=await Promise.all([n.payment.findMany({where:o,skip:i,take:a,orderBy:{createdAt:"desc"},include:{booking:{include:{exam:{select:{id:!0,title:!0}}}}}}),n.payment.count({where:o})]);return{payments:c,pagination:{page:s,limit:a,total:l,pages:Math.ceil(l/a)}}}catch(e){throw r.error("Error getting user payments:",e),e}}async processPayment(e,t,s={}){try{const a=await n.payment.findUnique({where:{id:e}});if(!a)throw new Error("Payment not found");const i=await n.payment.update({where:{id:e},data:{status:t,metadata:{...a.metadata,...s,processedAt:new Date}},include:{user:{select:{id:!0,email:!0,firstName:!0,lastName:!0}},booking:{include:{exam:{select:{id:!0,title:!0}}}}}});return r.info(`Payment processed: ${e} with status: ${t}`),global.notificationService&&i.userId&&("COMPLETED"===t?await global.notificationService.notifyPaymentSuccess(i):"FAILED"===t&&await global.notificationService.notifyPaymentFailed(i)),i}catch(e){throw r.error("Error processing payment:",e),e}}async refundPayment(e,t,s){try{const a=await n.payment.findUnique({where:{id:e}});if(!a)throw new Error("Payment not found");if("COMPLETED"!==a.status)throw new Error("Payment must be completed to be refunded");const i=t||a.amount,o=await n.payment.update({where:{id:e},data:{status:"REFUNDED",refundedAt:new Date,metadata:{...a.metadata,refundAmount:i,refundReason:s,refundedAt:new Date}}});return r.info(`Payment refunded: ${e} for amount: ${i}`),o}catch(e){throw r.error("Error refunding payment:",e),e}}async getPaymentStatistics(e={}){try{const{startDate:t,endDate:s,groupBy:a="day"}=e,r={};t&&s&&(r.createdAt={gte:new Date(t),lte:new Date(s)});const[i,o,c,l,u]=await Promise.all([n.payment.count({where:r}),n.payment.aggregate({where:{...r,status:"COMPLETED"},_sum:{amount:!0}}),n.payment.count({where:{...r,status:"COMPLETED"}}),n.payment.count({where:{...r,status:"PENDING"}}),n.payment.count({where:{...r,status:"FAILED"}})]),d=await n.payment.groupBy({by:["createdAt"],where:{...r,status:"COMPLETED"},_sum:{amount:!0},_count:!0,orderBy:{createdAt:"asc"}}),m=await n.payment.groupBy({by:["paymentMethod"],where:r,_sum:{amount:!0},_count:!0});return{overview:{totalPayments:i,totalRevenue:o._sum.amount||0,completedPayments:c,pendingPayments:l,failedPayments:u,successRate:i>0?c/i*100:0},revenueByDate:d,paymentsByMethod:m}}catch(e){throw r.error("Error getting payment statistics:",e),e}}async getAllPayments(e={}){try{const{page:t=1,limit:s=10,status:a,paymentMethod:r,startDate:i,endDate:o}=e,c=(t-1)*s,l={};a&&(l.status=a),r&&(l.paymentMethod=r),i&&o&&(l.createdAt={gte:new Date(i),lte:new Date(o)});const[u,d]=await Promise.all([n.payment.findMany({where:l,skip:c,take:s,orderBy:{createdAt:"desc"},include:{user:{select:{id:!0,email:!0,firstName:!0,lastName:!0}},booking:{include:{exam:{select:{id:!0,title:!0}}}}}}),n.payment.count({where:l})]);return{payments:u,pagination:{page:t,limit:s,total:d,pages:Math.ceil(d/s)}}}catch(e){throw r.error("Error getting all payments:",e),e}}}},7749:e=>{"use strict";e.exports=require("express-slow-down")},7859:(e,t,s)=>{const a=s(2446);e.exports={validateExamCreation:e=>a.object({title:a.string().min(3).max(200).required().messages({"string.min":"Exam title must be at least 3 characters long","string.max":"Exam title cannot exceed 200 characters","any.required":"Exam title is required"}),description:a.string().max(1e3).optional().messages({"string.max":"Description cannot exceed 1000 characters"}),examCategoryId:a.string().required().messages({"any.required":"Exam category is required"}),duration:a.number().integer().min(1).max(480).required().messages({"number.base":"Duration must be a number","number.integer":"Duration must be a whole number","number.min":"Duration must be at least 1 minute","number.max":"Duration cannot exceed 480 minutes (8 hours)","any.required":"Duration is required"}),totalMarks:a.number().integer().min(1).max(1e3).required().messages({"number.base":"Total marks must be a number","number.integer":"Total marks must be a whole number","number.min":"Total marks must be at least 1","number.max":"Total marks cannot exceed 1000","any.required":"Total marks is required"}),passingMarks:a.number().integer().min(1).max(a.ref("totalMarks")).required().messages({"number.base":"Passing marks must be a number","number.integer":"Passing marks must be a whole number","number.min":"Passing marks must be at least 1","number.max":"Passing marks cannot exceed total marks","any.required":"Passing marks is required"}),price:a.number().precision(2).min(0).max(1e4).required().messages({"number.base":"Price must be a number","number.precision":"Price can have maximum 2 decimal places","number.min":"Price cannot be negative","number.max":"Price cannot exceed 10000","any.required":"Price is required"}),currency:a.string().length(3).default("USD").messages({"string.length":"Currency must be 3 characters (e.g., USD, EUR)"}),isActive:a.boolean().default(!0),isPublic:a.boolean().default(!1),allowRetakes:a.boolean().default(!1),maxRetakes:a.when("allowRetakes",{is:!0,then:a.number().integer().min(1).max(10).required(),otherwise:a.number().integer().min(0).max(0).default(0)}).messages({"number.base":"Max retakes must be a number","number.integer":"Max retakes must be a whole number","number.min":"Max retakes must be at least 1 when retakes are allowed","number.max":"Max retakes cannot exceed 10","any.required":"Max retakes is required when retakes are allowed"}),showResults:a.boolean().default(!0),showAnswers:a.boolean().default(!1),randomizeQuestions:a.boolean().default(!0),randomizeOptions:a.boolean().default(!0),questionOverlapPercentage:a.number().precision(1).min(0).max(100).default(10).messages({"number.base":"Question overlap percentage must be a number","number.precision":"Question overlap percentage can have maximum 1 decimal place","number.min":"Question overlap percentage cannot be negative","number.max":"Question overlap percentage cannot exceed 100"}),instructions:a.string().max(2e3).optional(),rules:a.string().max(2e3).optional(),maxAttempts:a.number().integer().min(1).max(10).default(1),retakeDelay:a.number().integer().min(0).default(0),difficultyDistribution:a.object().optional(),startDate:a.date().min("now").optional().messages({"date.min":"Start date cannot be in the past"}),endDate:a.date().min(a.ref("startDate")).optional().messages({"date.min":"End date must be after start date"}),scheduledStart:a.date().min("now").optional().messages({"date.min":"Scheduled start date cannot be in the past"}),scheduledEnd:a.date().min(a.ref("scheduledStart")).optional().messages({"date.min":"Scheduled end date must be after start date"}),essayQuestionsCount:a.number().integer().min(0).default(0),multipleChoiceQuestionsCount:a.number().integer().min(0).default(0),shortAnswerQuestionsCount:a.number().integer().min(0).default(0),fillInTheBlankQuestionsCount:a.number().integer().min(0).default(0),trueFalseQuestionsCount:a.number().integer().min(0).default(0),matchingQuestionsCount:a.number().integer().min(0).default(0),orderingQuestionsCount:a.number().integer().min(0).default(0)}).validate(e),validateExamUpdate:e=>a.object({title:a.string().min(3).max(200).optional().messages({"string.min":"Exam title must be at least 3 characters long","string.max":"Exam title cannot exceed 200 characters"}),description:a.string().max(1e3).optional().messages({"string.max":"Description cannot exceed 1000 characters"}),examCategoryId:a.string().optional(),duration:a.number().integer().min(1).max(480).optional().messages({"number.base":"Duration must be a number","number.integer":"Duration must be a whole number","number.min":"Duration must be at least 1 minute","number.max":"Duration cannot exceed 480 minutes (8 hours)"}),totalMarks:a.number().integer().min(1).max(1e3).optional().messages({"number.base":"Total marks must be a number","number.integer":"Total marks must be a whole number","number.min":"Total marks must be at least 1","number.max":"Total marks cannot exceed 1000"}),passingMarks:a.number().integer().min(1).optional().messages({"number.base":"Passing marks must be a number","number.integer":"Passing marks must be a whole number","number.min":"Passing marks must be at least 1"}),price:a.number().precision(2).min(0).max(1e4).optional().messages({"number.base":"Price must be a number","number.precision":"Price can have maximum 2 decimal places","number.min":"Price cannot be negative","number.max":"Price cannot exceed 10000"}),currency:a.string().length(3).optional().messages({"string.length":"Currency must be 3 characters (e.g., USD, EUR)"}),isActive:a.boolean().optional(),isPublic:a.boolean().optional(),allowRetakes:a.boolean().optional(),maxRetakes:a.number().integer().min(0).max(10).optional().messages({"number.base":"Max retakes must be a number","number.integer":"Max retakes must be a whole number","number.min":"Max retakes cannot be negative","number.max":"Max retakes cannot exceed 10"}),showResults:a.boolean().optional(),showAnswers:a.boolean().optional(),randomizeQuestions:a.boolean().optional(),randomizeOptions:a.boolean().optional(),questionOverlapPercentage:a.number().precision(1).min(0).max(100).optional().messages({"number.base":"Question overlap percentage must be a number","number.precision":"Question overlap percentage can have maximum 1 decimal place","number.min":"Question overlap percentage cannot be negative","number.max":"Question overlap percentage cannot exceed 100"}),instructions:a.string().max(2e3).optional(),rules:a.string().max(2e3).optional(),maxAttempts:a.number().integer().min(1).max(10).optional(),retakeDelay:a.number().integer().min(0).optional(),difficultyDistribution:a.object().optional(),startDate:a.date().optional(),endDate:a.date().optional(),scheduledStart:a.date().optional(),scheduledEnd:a.date().optional(),essayQuestionsCount:a.number().integer().min(0).optional(),multipleChoiceQuestionsCount:a.number().integer().min(0).optional(),shortAnswerQuestionsCount:a.number().integer().min(0).optional(),fillInTheBlankQuestionsCount:a.number().integer().min(0).optional(),trueFalseQuestionsCount:a.number().integer().min(0).optional(),matchingQuestionsCount:a.number().integer().min(0).optional(),orderingQuestionsCount:a.number().integer().min(0).optional()}).validate(e),validateQuestionCreation:e=>a.object({text:a.string().min(10).max(2e3).required().messages({"string.min":"Question text must be at least 10 characters long","string.max":"Question text cannot exceed 2000 characters","any.required":"Question text is required"}),type:a.string().valid("MULTIPLE_CHOICE","SINGLE_CHOICE","TRUE_FALSE","FILL_IN_THE_BLANK","SHORT_ANSWER","ESSAY","MATCHING","ORDERING").required().messages({"any.only":"Invalid question type","any.required":"Question type is required"}),difficulty:a.string().valid("EASY","MEDIUM","HARD","EXPERT").required().messages({"any.only":"Invalid difficulty level","any.required":"Difficulty level is required"}),examCategoryId:a.string().required().messages({"any.required":"Exam category is required"}),marks:a.number().integer().min(1).max(100).default(1).messages({"number.base":"Marks must be a number","number.integer":"Marks must be a whole number","number.min":"Marks must be at least 1","number.max":"Marks cannot exceed 100"}),timeLimit:a.number().integer().min(10).max(3600).optional().messages({"number.base":"Time limit must be a number","number.integer":"Time limit must be a whole number","number.min":"Time limit must be at least 10 seconds","number.max":"Time limit cannot exceed 3600 seconds (1 hour)"}),isActive:a.boolean().default(!0),isPublic:a.boolean().default(!1),options:a.when("type",{is:a.string().valid("MULTIPLE_CHOICE","SINGLE_CHOICE","TRUE_FALSE"),then:a.array().items(a.object({text:a.string().min(1).max(500).required(),isCorrect:a.boolean().required(),explanation:a.string().max(1e3).optional()})).min(2).max(10).required().messages({"array.min":"At least 2 options are required","array.max":"Maximum 10 options allowed","any.required":"Options are required for this question type"}),otherwise:a.forbidden()}),explanation:a.string().max(2e3).optional().messages({"string.max":"Explanation cannot exceed 2000 characters"}),tags:a.array().items(a.string().min(1).max(50)).max(20).optional().messages({"array.max":"Maximum 20 tags allowed"}),images:a.array().items(a.object({imageUrl:a.string().uri().required(),altText:a.string().max(200).optional()})).max(10).optional().messages({"array.max":"Maximum 10 images allowed"})}).validate(e),validateQuestionUpdate:e=>a.object({text:a.string().min(10).max(2e3).optional().messages({"string.min":"Question text must be at least 10 characters long","string.max":"Question text cannot exceed 2000 characters"}),type:a.string().valid("MULTIPLE_CHOICE","SINGLE_CHOICE","TRUE_FALSE","FILL_IN_THE_BLANK","SHORT_ANSWER","ESSAY","MATCHING","ORDERING").optional().messages({"any.only":"Invalid question type"}),difficulty:a.string().valid("EASY","MEDIUM","HARD","EXPERT").optional().messages({"any.only":"Invalid difficulty level"}),examCategoryId:a.string().optional(),marks:a.number().integer().min(1).max(100).optional().messages({"number.base":"Marks must be a number","number.integer":"Marks must be a whole number","number.min":"Marks must be at least 1","number.max":"Marks cannot exceed 100"}),timeLimit:a.number().integer().min(10).max(3600).optional().messages({"number.base":"Time limit must be a number","number.integer":"Time limit must be a whole number","number.min":"Time limit must be at least 10 seconds","number.max":"Time limit cannot exceed 3600 seconds (1 hour)"}),isActive:a.boolean().optional(),isPublic:a.boolean().optional(),options:a.array().items(a.object({text:a.string().min(1).max(500).required(),isCorrect:a.boolean().required(),explanation:a.string().max(1e3).optional()})).min(2).max(10).optional().messages({"array.min":"At least 2 options are required","array.max":"Maximum 10 options allowed"}),explanation:a.string().max(2e3).optional().messages({"string.max":"Explanation cannot exceed 2000 characters"}),tags:a.array().items(a.string().min(1).max(50)).max(20).optional().messages({"array.max":"Maximum 20 tags allowed"}),images:a.array().items(a.object({imageUrl:a.string().uri().required(),altText:a.string().max(200).optional()})).max(10).optional().messages({"array.max":"Maximum 10 images allowed"})}).validate(e),validateExamAttempt:e=>a.object({timeSpent:a.number().integer().min(0).optional().messages({"number.base":"Time spent must be a number","number.integer":"Time spent must be a whole number","number.min":"Time spent cannot be negative"}),responses:a.array().items(a.object({questionId:a.string().required(),selectedOptions:a.array().items(a.string()).optional(),timeSpent:a.number().integer().min(0).optional(),essayAnswer:a.string().max(1e4).allow(null,"").optional()})).optional()}).validate(e),validateQuestionResponse:e=>a.object({questionId:a.string().required().messages({"any.required":"Question ID is required"}),selectedOptions:a.array().items(a.string()).optional().messages({"array.base":"Selected options must be an array"}),timeSpent:a.number().integer().min(0).max(3600).optional().messages({"number.base":"Time spent must be a number","number.integer":"Time spent must be a whole number","number.min":"Time spent cannot be negative","number.max":"Time spent cannot exceed 3600 seconds (1 hour)"}),essayAnswer:a.string().max(1e4).allow(null,"").optional().messages({"string.max":"Essay answer cannot exceed 10,000 characters"})}).or("selectedOptions","essayAnswer").messages({"object.missing":"Either selectedOptions or essayAnswer must be provided"}).validate(e),validateExamBooking:e=>a.object({examId:a.string().required().messages({"any.required":"Exam ID is required"}),scheduledAt:a.date().min("now").optional().messages({"date.min":"Scheduled date cannot be in the past"}),notes:a.string().max(500).optional().messages({"string.max":"Notes cannot exceed 500 characters"})}).validate(e),validateExamCategory:e=>a.object({name:a.string().min(2).max(100).required().messages({"string.min":"Category name must be at least 2 characters long","string.max":"Category name cannot exceed 100 characters","any.required":"Category name is required"}),description:a.string().max(500).optional().messages({"string.max":"Description cannot exceed 500 characters"}),icon:a.string().max(50).optional().messages({"string.max":"Icon name cannot exceed 50 characters"}),color:a.string().pattern(/^#[0-9A-F]{6}$/i).optional().messages({"string.pattern.base":"Color must be a valid hex color (e.g., #FF0000)"}),isActive:a.boolean().default(!0),sortOrder:a.number().integer().min(0).max(1e3).default(0).messages({"number.base":"Sort order must be a number","number.integer":"Sort order must be a whole number","number.min":"Sort order cannot be negative","number.max":"Sort order cannot exceed 1000"})}).validate(e),validateBulkQuestionImport:e=>{const t=a.object({text:a.string().min(10).max(2e3).required(),type:a.string().valid("MULTIPLE_CHOICE","SINGLE_CHOICE","TRUE_FALSE","FILL_IN_THE_BLANK","SHORT_ANSWER","ESSAY","MATCHING","ORDERING").required(),difficulty:a.string().valid("EASY","MEDIUM","HARD","EXPERT").required(),examCategoryId:a.string().required(),marks:a.number().integer().min(1).max(100).default(1),timeLimit:a.number().integer().min(10).max(3600).optional(),options:a.array().items(a.object({text:a.string().min(1).max(500).required(),isCorrect:a.boolean().required(),explanation:a.string().max(1e3).optional()})).min(2).max(10).optional(),explanation:a.string().max(2e3).optional(),tags:a.array().items(a.string().min(1).max(50)).max(20).optional()});return a.object({questions:a.array().items(t).min(1).max(1e3).required().messages({"array.min":"At least one question must be provided","array.max":"Maximum 1000 questions can be imported at once","any.required":"Questions array is required"})}).validate(e)}}},8354:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),r=s(2938),i=s(4479),o=(s(7534),s(3709)),{validateExamBooking:c,validateBookingUpdate:l}=s(7402),u=new a,d=new r;e.exports=new class{async createBooking(e,t){try{const{error:a,value:r}=c(e.body);if(a)return t.status(400).json({success:!1,error:{message:"Validation failed",details:a.details}});const{examId:l,scheduledAt:m,notes:g}=r,h=e.user.id,p=await d.canUserBookExam(h,l);if(!p.success)return t.status(400).json(p);const y=await u.exam.findUnique({where:{id:l},include:{examCategory:!0,questions:{include:{question:!0}}}});if(!y)return t.status(404).json({success:!1,error:{message:"Exam not found"}});if(!y.isActive||!y.isPublic)return t.status(400).json({success:!1,error:{message:"Exam is not available for booking"}});if(m){const e=await d.validateScheduling(l,m);if(!e.success)return t.status(400).json(e)}const f=y.price,w=await u.$transaction(async t=>{const s=await t.examBooking.create({data:{userId:h,examId:l,scheduledAt:m?new Date(m):null,status:"PENDING",totalAmount:f,currency:y.currency,notes:g},include:{exam:{include:{examCategory:!0}},user:{select:{id:!0,email:!0,firstName:!0,lastName:!0}}}}),a=y.questions.length,n=await i.generateRandomQuestions({examId:l,userId:h,questionCount:a,examCategoryId:y.examCategoryId,overlapPercentage:y.questionOverlapPercentage}),r=n.map((e,t)=>({examId:l,questionId:e.id,order:t+1,marks:e.marks}));return await t.examQuestion.createMany({data:r}),await t.auditLog.create({data:{userId:h,action:"EXAM_BOOKING_CREATED",resource:"EXAM_BOOKING",resourceId:s.id,details:{examId:l,examTitle:y.title,totalAmount:f,questionCount:n.length,scheduledAt:m?new Date(m):null,randomizationAlgorithm:process.env.QUESTION_RANDOMIZATION_ALGORITHM||"weighted_random"},ipAddress:e.ip,userAgent:e.get("User-Agent")}}),{booking:s,questionCount:n.length}}),x=s(3097),b=await x.generateBill(w.booking.id);global.notificationService?await global.notificationService.notifyBookingConfirmed(w.booking):await o.sendBookingConfirmation(w.booking.user.email,{bookingId:w.booking.id,examTitle:w.booking.exam.title,scheduledAt:w.booking.scheduledAt,totalAmount:w.booking.totalAmount,currency:w.booking.currency,firstName:w.booking.user.firstName}),n.logExam("BOOKING_CREATED",l,h,{bookingId:w.booking.id,questionCount:w.questionCount,totalAmount:w.booking.totalAmount}),global.io&&global.io.to("admin-room").emit("booking-created",{userId:h,userName:`${e.user.firstName} ${e.user.lastName}`,examId:l,examTitle:w.booking.exam.title,bookingId:w.booking.id,totalAmount:w.booking.totalAmount,currency:w.booking.currency,timestamp:(new Date).toISOString()}),t.status(201).json({success:!0,message:"Exam booking created successfully",data:{booking:w.booking,questionCount:w.questionCount,requiresPayment:"PENDING"===w.booking.status,bill:b}})}catch(e){n.error("Exam booking creation failed",e),t.status(500).json({success:!1,error:{message:"Failed to create exam booking"}})}}async getUserBookings(e,t){try{const s=e.user.id,{page:a=1,limit:n=10,status:r,examCategoryId:i}=e.query,o=await d.getUserBookings(s,{page:parseInt(a),limit:parseInt(n),status:r,examCategoryId:i});t.status(200).json({success:!0,data:o})}catch(e){n.error("Get user bookings failed",e),t.status(500).json({success:!1,error:{message:"Failed to get bookings"}})}}async getBooking(e,t){try{const{bookingId:s}=e.params,a=e.user.id,n=await d.getBookingDetails(s,a);if(!n)return t.status(404).json({success:!1,error:{message:"Booking not found"}});t.status(200).json({success:!0,data:{booking:n}})}catch(e){n.error("Get booking details failed",e),t.status(500).json({success:!1,error:{message:"Failed to get booking details"}})}}async updateBooking(e,t){try{const{bookingId:s}=e.params,a=e.user.id,{error:n,value:r}=l(e.body);if(n)return t.status(400).json({success:!1,error:{message:"Validation failed",details:n.details}});const{scheduledAt:i,notes:o}=r,c=await d.updateBooking(s,a,{scheduledAt:i,notes:o});if(!c.success)return t.status(400).json(c);t.status(200).json({success:!0,message:"Booking updated successfully",data:{booking:c.booking}})}catch(e){n.error("Update booking failed",e),t.status(500).json({success:!1,error:{message:"Failed to update booking"}})}}async cancelBooking(e,t){try{const{bookingId:s}=e.params,a=e.user.id,{reason:n}=e.body,r=await d.cancelBooking(s,a,n);if(!r.success)return t.status(400).json(r);global.notificationService?await global.notificationService.notifyBookingCancelled(r.booking,n):await o.sendBookingCancellation(r.booking.user.email,{bookingId:r.booking.id,examTitle:r.booking.exam.title,cancellationReason:n,firstName:r.booking.user.firstName}),t.status(200).json({success:!0,message:"Booking cancelled successfully",data:{booking:r.booking}})}catch(e){n.error("Cancel booking failed",e),t.status(500).json({success:!1,error:{message:"Failed to cancel booking"}})}}async startExam(e,t){try{const{bookingId:s}=e.params,a=e.user.id,n=await d.startExamAttempt(s,a);if(!n.success)return t.status(400).json(n);const r=await i.getQuestionsForAttempt(n.attempt.id,n.booking.examId,a);t.status(200).json({success:!0,message:"Exam started successfully",data:{attempt:n.attempt,exam:n.exam,questions:r.map(e=>({id:e.id,text:e.text,type:e.type,difficulty:e.difficulty,marks:e.marks,timeLimit:e.timeLimit,options:e.options.map(e=>({id:e.id,text:e.text})),images:e.images})),duration:n.exam.duration,totalMarks:n.exam.totalMarks,startTime:n.attempt.startedAt}})}catch(e){n.error("Start exam failed",e),t.status(500).json({success:!1,error:{message:"Failed to start exam"}})}}async getAvailableExams(e,t){try{const s=e.user.id,{examCategoryId:a,page:n=1,limit:r=10}=e.query,i=await d.getAvailableExams(s,{examCategoryId:a,page:parseInt(n),limit:parseInt(r)});t.status(200).json({success:!0,data:i})}catch(e){n.error("Get available exams failed",e),t.status(500).json({success:!1,error:{message:"Failed to get available exams"}})}}async getBookingStats(e,t){try{const s=e.user.id,a=await d.getUserBookingStats(s);t.status(200).json({success:!0,data:a})}catch(e){n.error("Get booking stats failed",e),t.status(500).json({success:!1,error:{message:"Failed to get booking statistics"}})}}async getAllBookings(e,t){try{const{page:s=1,limit:a=20,status:n,examCategoryId:r,userId:i,startDate:o,endDate:c}=e.query,l=await d.getAllBookings({page:parseInt(s),limit:parseInt(a),status:n,examCategoryId:r,userId:i,startDate:o,endDate:c});t.status(200).json({success:!0,data:l})}catch(e){n.error("Get all bookings failed",e),t.status(500).json({success:!1,error:{message:"Failed to get bookings"}})}}async updateBookingStatus(e,t){try{const{bookingId:s}=e.params,{status:a,notes:n}=e.body,r=e.user.id,i=await d.updateBookingStatus(s,a,n,r);if(!i.success)return t.status(400).json(i);t.status(200).json({success:!0,message:"Booking status updated successfully",data:{booking:i.booking}})}catch(e){n.error("Update booking status failed",e),t.status(500).json({success:!1,error:{message:"Failed to update booking status"}})}}async createBookingForUser(e,t){try{const{error:a,value:r}=c(e.body);if(a)return t.status(400).json({success:!1,error:{message:"Validation failed",details:a.details}});const{userId:l,examId:m,scheduledAt:g,attemptsAllowed:h,notes:p}=r,y=e.user.id,f=await u.user.findUnique({where:{id:l}});if(!f)return t.status(404).json({success:!1,error:{message:"User not found"}});const w=await d.canUserBookExam(l,m);if(!w.success)return t.status(400).json(w);const x=await u.exam.findUnique({where:{id:m},include:{examCategory:!0,questions:{include:{question:!0}}}});if(!x)return t.status(404).json({success:!1,error:{message:"Exam not found"}});if(!x.isActive||!x.isPublic)return t.status(400).json({success:!1,error:{message:"Exam is not available for booking"}});if(g){const e=await d.validateScheduling(m,g);if(!e.success)return t.status(400).json(e)}const b=x.price,v=await u.$transaction(async t=>{const s=await t.examBooking.create({data:{userId:l,examId:m,scheduledAt:g?new Date(g):null,status:"CONFIRMED",totalAmount:b,currency:x.currency,attemptsAllowed:h||1,attemptsUsed:0,notes:p},include:{exam:{include:{examCategory:!0}},user:{select:{id:!0,email:!0,firstName:!0,lastName:!0}}}}),a=x.questions.length,n=(await i.generateRandomQuestions({examId:m,userId:l,questionCount:a,examCategoryId:x.examCategoryId,overlapPercentage:x.questionOverlapPercentage})).map((e,t)=>({examId:m,questionId:e.id,order:t+1,marks:e.marks}));return await t.examQuestion.createMany({data:n}),await t.auditLog.create({data:{userId:y,action:"ADMIN_BOOKING_CREATED",resource:"EXAM_BOOKING",resourceId:s.id,details:{targetUserId:l,examTitle:x.title,scheduledAt:s.scheduledAt,totalAmount:s.totalAmount},ipAddress:e.ip,userAgent:e.get("User-Agent")}}),s}),A=s(3097),E=await A.generateBill(v.id);await o.sendBookingConfirmation(v.user.email,{bookingId:v.id,examTitle:v.exam.title,scheduledAt:v.scheduledAt,totalAmount:v.totalAmount,currency:v.currency,firstName:v.user.firstName}),n.logExam("ADMIN_BOOKING_CREATED",m,l,{bookingId:v.id,questionCount:x.questions.length,totalAmount:v.totalAmount,adminId:y}),global.io&&global.io.to("admin-room").emit("admin-booking-created",{userId:l,userName:`${f.firstName} ${f.lastName}`,examId:m,examTitle:v.exam.title,bookingId:v.id,totalAmount:v.totalAmount,currency:v.currency,adminId:y,adminName:`${e.user.firstName} ${e.user.lastName}`,timestamp:(new Date).toISOString()}),t.status(201).json({success:!0,message:"Booking created successfully",data:{booking:v,bill:E}})}catch(e){n.error("Admin create booking failed",e),t.status(500).json({success:!1,error:{message:"Failed to create booking"}})}}async getBookingAnalytics(e,t){try{const{startDate:s,endDate:a,examCategoryId:n}=e.query,r=await d.getBookingAnalytics({startDate:s,endDate:a,examCategoryId:n});t.status(200).json({success:!0,data:r})}catch(e){n.error("Get booking analytics failed",e),t.status(500).json({success:!1,error:{message:"Failed to get booking analytics"}})}}}},8404:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),r=s(3249),i=new a,o=new r;e.exports=class{async createQuestion(e,t){try{const{text:s,type:a,difficulty:n,marks:r,timeLimit:o,examCategoryId:c,options:l,images:u=[]}=e,d=await i.examCategory.findUnique({where:{id:c}});if(!d)return{success:!1,message:"Exam category not found"};const m={text:s,type:a,difficulty:n,marks:r,timeLimit:o,examCategoryId:c,createdBy:t,updatedAt:new Date};if(l&&Array.isArray(l)&&l.length>0)if("ESSAY"===a){const e=l[0]?.text||"";e&&(m.options={create:[{text:e,isCorrect:!0}]})}else["MULTIPLE_CHOICE","SINGLE_CHOICE","TRUE_FALSE","FILL_IN_THE_BLANK"].includes(a)&&(m.options={create:l.map(e=>({text:e.text,isCorrect:e.isCorrect}))});u&&Array.isArray(u)&&u.length>0&&(m.images={create:(u||[]).map(e=>({imageUrl:e.imageUrl,altText:e.altText,sortOrder:e.sortOrder||0}))});const g=await i.question.create({data:m,include:{options:!0,images:!0,exam_categories:{select:{name:!0}}}});return await i.auditLog.create({data:{userId:t,action:"QUESTION_CREATED",resource:"QUESTION",resourceId:g.id,details:{questionText:s.substring(0,100)+"...",category:d.name,difficulty:n,type:a,imageCount:(u||[]).length},ipAddress:"system",userAgent:"question-service"}}),{success:!0,question:g}}catch(e){return n.error("Create question failed",e),console.error("Detailed error:",e.message,e.stack),{success:!1,message:"Failed to create question",error:e.message}}}async getAllQuestions(e={}){const{page:t=1,limit:s=20,examCategoryId:a,difficulty:r,type:o,isActive:c,search:l}=e,u=(t-1)*s;try{const e={};a&&(e.examCategoryId=a),r&&(e.difficulty=r),o&&(e.type=o),e.isActive=void 0===c||c,l&&(e.OR=[{text:{contains:l,mode:"insensitive"}}]);const[n,d]=await Promise.all([i.question.findMany({where:e,include:{options:{select:{id:!0,text:!0,isCorrect:!0}},exam_categories:{select:{name:!0,color:!0}},images:!0},orderBy:{createdAt:"desc"},skip:u,take:s}),i.question.count({where:e})]);return{questions:n,pagination:{page:t,limit:s,total:d,pages:Math.ceil(d/s),hasNext:t*s<d,hasPrev:t>1}}}catch(e){throw n.error("Get all questions failed",e),e}}async getQuestionById(e){try{return await i.question.findUnique({where:{id:e},include:{options:!0,images:!0,exam_categories:{select:{name:!0}}}})}catch(e){throw n.error("Get question by ID failed",e),e}}async updateQuestion(e,t,s){try{const a=await i.question.findUnique({where:{id:e},include:{options:!0,images:!0}});if(!a)return{success:!1,message:"Question not found"};if(t.options)if(await i.questionOption.deleteMany({where:{questionId:e}}),"ESSAY"===a.type){const e=t.options[0]?.text||"";e&&(t.options={create:[{text:e,isCorrect:!0}]})}else t.options={create:t.options.map(e=>({text:e.text,isCorrect:e.isCorrect,explanation:e.explanation}))};if(void 0!==t.images){for(const e of a.images)await o.deleteImageFile(e.imageUrl);await i.questionImage.deleteMany({where:{questionId:e}}),t.images&&t.images.length>0&&(t.images={create:t.images.map(e=>({imageUrl:e.imageUrl,altText:e.altText,sortOrder:e.sortOrder||0}))})}const n=await i.question.update({where:{id:e},data:t,include:{options:!0,images:!0,exam_categories:{select:{name:!0}}}});return await i.auditLog.create({data:{userId:s,action:"QUESTION_UPDATED",resource:"QUESTION",resourceId:e,details:{questionText:a.text.substring(0,100)+"...",updatedFields:Object.keys(t)},ipAddress:"system",userAgent:"question-service"}}),{success:!0,question:n}}catch(e){return n.error("Update question failed",e),{success:!1,message:"Failed to update question"}}}async deleteQuestion(e,t){try{const s=await i.question.findUnique({where:{id:e},include:{_count:{select:{questionResponses:!0}}}});return s?s._count.questionResponses>0?{success:!1,message:"Cannot delete question with existing responses"}:(await i.question.delete({where:{id:e}}),await i.auditLog.create({data:{userId:t,action:"QUESTION_DELETED",resource:"QUESTION",resourceId:e,details:{questionText:s.text.substring(0,100)+"..."},ipAddress:"system",userAgent:"question-service"}}),{success:!0}):{success:!1,message:"Question not found"}}catch(e){return n.error("Delete question failed",e),{success:!1,message:"Failed to delete question"}}}async bulkImportQuestions(e,t){try{const s={successful:[],failed:[],total:e.length};for(const a of e)try{const e=await this.createQuestion(a,t);e.success?s.successful.push(e.question):s.failed.push({text:a.text?.substring(0,50)+"...",error:e.message})}catch(e){s.failed.push({text:a.text?.substring(0,50)+"...",error:e.message})}return await i.auditLog.create({data:{userId:t,action:"BULK_QUESTION_IMPORT",resource:"QUESTION",resourceId:null,details:{totalQuestions:s.total,successful:s.successful.length,failed:s.failed.length},ipAddress:"system",userAgent:"question-service"}}),s}catch(e){throw n.error("Bulk import questions failed",e),e}}async getQuestionAnalytics(e={}){const{examCategoryId:t,startDate:s,endDate:a}=e;try{const e={};t&&(e.examCategoryId=t),(s||a)&&(e.createdAt={},s&&(e.createdAt.gte=new Date(s)),a&&(e.createdAt.lte=new Date(a)));const[n,r,o,c,l,u]=await Promise.all([i.question.count({where:e}),i.question.groupBy({by:["difficulty"],where:e,_count:{id:!0}}),i.question.groupBy({by:["type"],where:e,_count:{id:!0}}),i.question.groupBy({by:["examCategoryId"],where:e,_count:{id:!0}}),i.question.aggregate({where:e,_avg:{marks:!0}}),i.questionResponse.groupBy({by:["questionId"],where:{question:e},_count:{id:!0},_avg:{timeSpent:!0}})]);return{totalQuestions:n,questionsByDifficulty:r.reduce((e,t)=>(e[t.difficulty]=t._count.id,e),{}),questionsByType:o.reduce((e,t)=>(e[t.type]=t._count.id,e),{}),questionsByCategory:c.reduce((e,t)=>(e[t.examCategoryId]=t._count.id,e),{}),averageMarks:l._avg.marks||0,averageResponseTime:u.length>0?u.reduce((e,t)=>e+(t._avg.timeSpent||0),0)/u.length:0}}catch(e){throw n.error("Get question analytics failed",e),e}}async getQuestionsForExam(e,t){try{const s=await i.exam.findUnique({where:{id:e},include:{examCategory:!0}});if(!s)throw new Error("Exam not found");const a={examCategoryId:s.examCategoryId,isActive:!0};if(s.difficultyDistribution){const e=s.difficultyDistribution,t=[];e.easy&&t.push(...Array(e.easy).fill("EASY")),e.medium&&t.push(...Array(e.medium).fill("MEDIUM")),e.hard&&t.push(...Array(e.hard).fill("HARD")),a.difficulty={in:t}}return await i.question.findMany({where:a,include:{options:{select:{id:!0,text:!0}}},take:t||s.questionCount})}catch(e){throw n.error("Get questions for exam failed",e),e}}async getQuestionStats(e){try{const[t,s,a,n]=await Promise.all([i.questionResponse.count({where:{questionId:e}}),i.questionResponse.count({where:{questionId:e,question:{options:{some:{id:{in:{selectedOptions:!0}},isCorrect:!0}}}}}),i.questionResponse.aggregate({where:{questionId:e},_avg:{timeSpent:!0}}),i.questionResponse.groupBy({by:["selectedOptions"],where:{questionId:e},_count:{id:!0}})]);return{totalResponses:t,correctResponses:s,accuracy:t>0?s/t*100:0,averageTime:a._avg.timeSpent||0,optionStats:n.map(e=>({selectedOptions:e.selectedOptions,count:e._count.id}))}}catch(e){throw n.error("Get question stats failed",e),e}}async searchQuestions(e,t={}){const{page:s=1,limit:a=20,examCategoryId:r,difficulty:o,type:c}=t,l=(s-1)*a;try{const t={OR:[{text:{contains:e,mode:"insensitive"}}],isActive:!0};r&&(t.examCategoryId=r),o&&(t.difficulty=o),c&&(t.type=c);const[n,u]=await Promise.all([i.question.findMany({where:t,include:{options:{select:{id:!0,text:!0,isCorrect:!0}},exam_categories:{select:{name:!0,color:!0}}},orderBy:{createdAt:"desc"},skip:l,take:a}),i.question.count({where:t})]);return{questions:n,pagination:{page:s,limit:a,total:u,pages:Math.ceil(u/a),hasNext:s*a<u,hasPrev:s>1}}}catch(e){throw n.error("Search questions failed",e),e}}}},8461:e=>{"use strict";e.exports=require("multer")},8577:e=>{"use strict";e.exports=require("cors")},8611:e=>{"use strict";e.exports=require("http")},8897:(e,t,s)=>{const a=s(2446);e.exports={validateUserCreation:e=>a.object({email:a.string().email().required().messages({"string.email":"Please provide a valid email address","any.required":"Email is required"}),password:a.string().min(8).max(128).pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/).required().messages({"string.min":"Password must be at least 8 characters long","string.max":"Password cannot exceed 128 characters","string.pattern.base":"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character","any.required":"Password is required"}),firstName:a.string().min(2).max(50).required().messages({"string.min":"First name must be at least 2 characters long","string.max":"First name cannot exceed 50 characters","any.required":"First name is required"}),lastName:a.string().min(2).max(50).required().messages({"string.min":"Last name must be at least 2 characters long","string.max":"Last name cannot exceed 50 characters","any.required":"Last name is required"}),role:a.string().valid("STUDENT","MODERATOR","ADMIN","SUPER_ADMIN").default("STUDENT").messages({"any.only":"Invalid role specified"}),phone:a.string().pattern(/^\+?[\d\s\-\(\)]+$/).optional().messages({"string.pattern.base":"Please provide a valid phone number"}),dateOfBirth:a.date().max("now").optional().messages({"date.max":"Date of birth cannot be in the future"}),gender:a.string().valid("MALE","FEMALE","OTHER","PREFER_NOT_TO_SAY").optional().messages({"any.only":"Invalid gender specified"}),address:a.string().max(500).optional().messages({"string.max":"Address cannot exceed 500 characters"}),departmentId:a.string().optional().messages({"string.base":"Department ID must be a valid string"}),profilePicture:a.string().uri().optional().messages({"string.uri":"Profile picture must be a valid URL"}),status:a.string().valid("active","inactive","suspended","pending").optional().default("active").messages({"any.only":"Invalid status specified"}),isPhoneVerified:a.boolean().optional().default(!1).messages({"boolean.base":"Phone verification status must be true or false"}),isActive:a.boolean().default(!0),isEmailVerified:a.boolean().default(!1)}).validate(e),validateUserUpdate:e=>a.object({email:a.string().email().optional().messages({"string.email":"Please provide a valid email address"}),password:a.string().min(8).max(128).pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/).optional().messages({"string.min":"Password must be at least 8 characters long","string.max":"Password cannot exceed 128 characters","string.pattern.base":"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character"}),firstName:a.string().min(2).max(50).optional().messages({"string.min":"First name must be at least 2 characters long","string.max":"First name cannot exceed 50 characters"}),lastName:a.string().min(2).max(50).optional().messages({"string.min":"Last name must be at least 2 characters long","string.max":"Last name cannot exceed 50 characters"}),role:a.string().valid("STUDENT","MODERATOR","ADMIN","SUPER_ADMIN").optional().messages({"any.only":"Invalid role specified"}),phone:a.string().pattern(/^\+?[\d\s\-\(\)]+$/).optional().messages({"string.pattern.base":"Please provide a valid phone number"}),dateOfBirth:a.date().max("now").optional().messages({"date.max":"Date of birth cannot be in the future"}),gender:a.string().valid("MALE","FEMALE","OTHER","PREFER_NOT_TO_SAY").optional().messages({"any.only":"Invalid gender specified"}),address:a.string().max(500).optional().messages({"string.max":"Address cannot exceed 500 characters"}),departmentId:a.string().optional().messages({"string.base":"Department ID must be a valid string"}),profilePicture:a.string().uri().optional().messages({"string.uri":"Profile picture must be a valid URL"}),status:a.string().valid("active","inactive","suspended","pending").optional().messages({"any.only":"Invalid status specified"}),isPhoneVerified:a.boolean().optional().messages({"boolean.base":"Phone verification status must be true or false"}),isActive:a.boolean().optional(),isEmailVerified:a.boolean().optional()}).validate(e),validateBulkUserImport:e=>{const t=a.object({email:a.string().email().required(),password:a.string().min(8).required(),firstName:a.string().min(2).max(50).required(),lastName:a.string().min(2).max(50).required(),role:a.string().valid("STUDENT","MODERATOR","ADMIN").default("STUDENT"),phone:a.string().pattern(/^\+?[\d\s\-\(\)]+$/).optional(),dateOfBirth:a.date().max("now").optional(),gender:a.string().valid("MALE","FEMALE","OTHER","PREFER_NOT_TO_SAY").optional(),isActive:a.boolean().default(!0),isEmailVerified:a.boolean().default(!1)});return a.object({users:a.array().items(t).min(1).max(100).required().messages({"array.min":"At least one user must be provided","array.max":"Maximum 100 users can be imported at once","any.required":"Users array is required"}),sendWelcomeEmail:a.boolean().default(!0),requireEmailVerification:a.boolean().default(!0)}).validate(e)},validateUserStatusToggle:e=>a.object({isActive:a.boolean().required().messages({"any.required":"Status is required"}),reason:a.string().max(500).optional().messages({"string.max":"Reason cannot exceed 500 characters"}),notifyUser:a.boolean().default(!0)}).validate(e),validateUserAnalyticsFilter:e=>a.object({startDate:a.date().optional(),endDate:a.date().min(a.ref("startDate")).optional().messages({"date.min":"End date must be after start date"}),role:a.string().valid("STUDENT","MODERATOR","ADMIN","SUPER_ADMIN").optional(),isActive:a.boolean().optional(),examCategoryId:a.string().optional(),limit:a.number().integer().min(1).max(1e3).default(100).messages({"number.base":"Limit must be a number","number.integer":"Limit must be a whole number","number.min":"Limit must be at least 1","number.max":"Limit cannot exceed 1000"}),offset:a.number().integer().min(0).default(0).messages({"number.base":"Offset must be a number","number.integer":"Offset must be a whole number","number.min":"Offset cannot be negative"})}).validate(e),validateSystemBackup:e=>a.object({includeData:a.boolean().default(!0),includeLogs:a.boolean().default(!0),includeUploads:a.boolean().default(!0),compression:a.boolean().default(!0),encryption:a.boolean().default(!1),encryptionPassword:a.when("encryption",{is:!0,then:a.string().min(8).required(),otherwise:a.forbidden()}).messages({"any.required":"Encryption password is required when encryption is enabled"}),backupType:a.string().valid("FULL","INCREMENTAL","DIFFERENTIAL").default("FULL").messages({"any.only":"Invalid backup type"}),retentionDays:a.number().integer().min(1).max(365).default(30).messages({"number.base":"Retention days must be a number","number.integer":"Retention days must be a whole number","number.min":"Retention days must be at least 1","number.max":"Retention days cannot exceed 365"})}).validate(e),validateSystemExport:e=>a.object({dataType:a.string().valid("USERS","EXAMS","QUESTIONS","ATTEMPTS","PAYMENTS","ALL").required().messages({"any.only":"Invalid data type","any.required":"Data type is required"}),format:a.string().valid("JSON","CSV","XLSX").default("JSON").messages({"any.only":"Invalid export format"}),startDate:a.date().optional(),endDate:a.date().min(a.ref("startDate")).optional().messages({"date.min":"End date must be after start date"}),filters:a.object().optional(),includeSensitiveData:a.boolean().default(!1),compression:a.boolean().default(!0)}).validate(e),validateAuditLogFilter:e=>a.object({userId:a.string().optional(),action:a.string().optional(),resource:a.string().optional(),resourceId:a.string().optional(),startDate:a.date().optional(),endDate:a.date().min(a.ref("startDate")).optional().messages({"date.min":"End date must be after start date"}),ipAddress:a.string().ip().optional().messages({"string.ip":"Invalid IP address format"}),limit:a.number().integer().min(1).max(1e3).default(100).messages({"number.base":"Limit must be a number","number.integer":"Limit must be a whole number","number.min":"Limit must be at least 1","number.max":"Limit cannot exceed 1000"}),offset:a.number().integer().min(0).default(0).messages({"number.base":"Offset must be a number","number.integer":"Offset must be a whole number","number.min":"Offset cannot be negative"})}).validate(e),validateSystemHealthCheck:e=>a.object({includeDetails:a.boolean().default(!1),checkDatabase:a.boolean().default(!0),checkRedis:a.boolean().default(!0),checkStorage:a.boolean().default(!0),checkExternalServices:a.boolean().default(!1),timeout:a.number().integer().min(1e3).max(3e4).default(5e3).messages({"number.base":"Timeout must be a number","number.integer":"Timeout must be a whole number","number.min":"Timeout must be at least 1000ms","number.max":"Timeout cannot exceed 30000ms"})}).validate(e),validateSystemConfiguration:e=>a.object({maintenanceMode:a.boolean().optional(),maintenanceMessage:a.string().max(500).optional().messages({"string.max":"Maintenance message cannot exceed 500 characters"}),maxFileUploadSize:a.number().integer().min(1024).max(104857600).optional().messages({"number.base":"Max file upload size must be a number","number.integer":"Max file upload size must be a whole number","number.min":"Max file upload size must be at least 1KB","number.max":"Max file upload size cannot exceed 100MB"}),allowedFileTypes:a.array().items(a.string().pattern(/^[a-zA-Z0-9\/\-\.]+$/)).optional().messages({"array.base":"Allowed file types must be an array"}),sessionTimeout:a.number().integer().min(300).max(86400).optional().messages({"number.base":"Session timeout must be a number","number.integer":"Session timeout must be a whole number","number.min":"Session timeout must be at least 5 minutes","number.max":"Session timeout cannot exceed 24 hours"}),maxLoginAttempts:a.number().integer().min(1).max(10).optional().messages({"number.base":"Max login attempts must be a number","number.integer":"Max login attempts must be a whole number","number.min":"Max login attempts must be at least 1","number.max":"Max login attempts cannot exceed 10"}),accountLockoutDuration:a.number().integer().min(300).max(86400).optional().messages({"number.base":"Account lockout duration must be a number","number.integer":"Account lockout duration must be a whole number","number.min":"Account lockout duration must be at least 5 minutes","number.max":"Account lockout duration cannot exceed 24 hours"}),emailVerificationRequired:a.boolean().optional(),passwordResetEnabled:a.boolean().optional(),twoFactorAuthEnabled:a.boolean().optional(),rateLimitingEnabled:a.boolean().optional(),rateLimitRequests:a.number().integer().min(1).max(1e3).optional().messages({"number.base":"Rate limit requests must be a number","number.integer":"Rate limit requests must be a whole number","number.min":"Rate limit requests must be at least 1","number.max":"Rate limit requests cannot exceed 1000"}),rateLimitWindow:a.number().integer().min(60).max(3600).optional().messages({"number.base":"Rate limit window must be a number","number.integer":"Rate limit window must be a whole number","number.min":"Rate limit window must be at least 1 minute","number.max":"Rate limit window cannot exceed 1 hour"})}).validate(e),validateNotificationCreation:e=>a.object({userId:a.string().optional(),type:a.string().valid("EXAM_BOOKING","EXAM_REMINDER","EXAM_RESULT","PAYMENT_SUCCESS","PAYMENT_FAILED","CERTIFICATE_ISSUED","SYSTEM_ANNOUNCEMENT","GENERAL").required().messages({"any.only":"Invalid notification type","any.required":"Notification type is required"}),title:a.string().min(1).max(200).required().messages({"string.min":"Title must not be empty","string.max":"Title cannot exceed 200 characters","any.required":"Title is required"}),message:a.string().min(1).max(2e3).required().messages({"string.min":"Message must not be empty","string.max":"Message cannot exceed 2000 characters","any.required":"Message is required"}),metadata:a.object().optional(),scheduledAt:a.date().min("now").optional().messages({"date.min":"Scheduled date cannot be in the past"}),sendEmail:a.boolean().default(!0),sendPush:a.boolean().default(!1)}).validate(e),validateBulkNotification:e=>a.object({userIds:a.array().items(a.string()).min(1).max(1e3).optional().messages({"array.min":"At least one user ID must be provided","array.max":"Maximum 1000 users can be notified at once"}),userRoles:a.array().items(a.string().valid("STUDENT","MODERATOR","ADMIN","SUPER_ADMIN")).optional().messages({"array.base":"User roles must be an array"}),type:a.string().valid("EXAM_BOOKING","EXAM_REMINDER","EXAM_RESULT","PAYMENT_SUCCESS","PAYMENT_FAILED","CERTIFICATE_ISSUED","SYSTEM_ANNOUNCEMENT","GENERAL").required().messages({"any.only":"Invalid notification type","any.required":"Notification type is required"}),title:a.string().min(1).max(200).required().messages({"string.min":"Title must not be empty","string.max":"Title cannot exceed 200 characters","any.required":"Title is required"}),message:a.string().min(1).max(2e3).required().messages({"string.min":"Message must not be empty","string.max":"Message cannot exceed 2000 characters","any.required":"Message is required"}),metadata:a.object().optional(),scheduledAt:a.date().min("now").optional().messages({"date.min":"Scheduled date cannot be in the past"}),sendEmail:a.boolean().default(!0),sendPush:a.boolean().default(!1)}).validate(e)}},8949:(e,t,s)=>{const a=s(7252),{PrismaClient:n}=s(6330),{auth:r,authorize:i}=s(4997),o=(s(9665),a.Router()),c=new n;o.get("/",r,i("ADMIN","SUPER_ADMIN"),async(e,t)=>{try{const{page:s=1,limit:a=10,search:n="",role:r="",status:i=""}=e.query,o=(parseInt(s)-1)*parseInt(a);let l={};n&&(l.OR=[{firstName:{contains:n,mode:"insensitive"}},{lastName:{contains:n,mode:"insensitive"}},{email:{contains:n,mode:"insensitive"}}]),r&&(l.role=r),i&&(l.status=i);const[u,d]=await Promise.all([c.user.findMany({where:l,select:{id:!0,email:!0,firstName:!0,lastName:!0,role:!0,status:!0,departmentId:!0,createdAt:!0,updatedAt:!0,lastLoginAt:!0,profilePicture:!0,phone:!0,address:!0,dateOfBirth:!0,gender:!0,isEmailVerified:!0,isPhoneVerified:!0,_count:{select:{examAttempts:!0,examBookings:!0}}},skip:o,take:parseInt(a),orderBy:{createdAt:"desc"}}),c.user.count({where:l})]);t.json({success:!0,data:u,pagination:{page:parseInt(s),limit:parseInt(a),total:d,pages:Math.ceil(d/parseInt(a))},message:"Users retrieved successfully"})}catch(e){console.error("Error fetching users:",e),t.status(500).json({success:!1,message:"Failed to fetch users",error:e.message})}}),o.get("/:id",r,async(e,t)=>{try{const{id:s}=e.params,a=await c.user.findUnique({where:{id:s},select:{id:!0,email:!0,firstName:!0,lastName:!0,role:!0,status:!0,departmentId:!0,createdAt:!0,updatedAt:!0,lastLoginAt:!0,profilePicture:!0,phone:!0,address:!0,dateOfBirth:!0,gender:!0,isEmailVerified:!0,isPhoneVerified:!0,examAttempts:{include:{exam:{select:{id:!0,title:!0,category:!0}}},orderBy:{createdAt:"desc"},take:5},examBookings:{include:{exam:{select:{id:!0,title:!0,category:!0}}},orderBy:{createdAt:"desc"},take:5}}});if(!a)return t.status(404).json({success:!1,message:"User not found"});t.json({success:!0,data:a,message:"User retrieved successfully"})}catch(e){console.error("Error fetching user:",e),t.status(500).json({success:!1,message:"Failed to fetch user",error:e.message})}}),o.put("/:id",r,async(e,t)=>{try{const{id:s}=e.params,a=e.body;delete a.password,delete a.emailVerificationToken,delete a.passwordResetToken,delete a.passwordResetExpires;const n=await c.user.update({where:{id:s},data:a,select:{id:!0,email:!0,firstName:!0,lastName:!0,role:!0,status:!0,departmentId:!0,createdAt:!0,updatedAt:!0,lastLoginAt:!0,profilePicture:!0,phone:!0,address:!0,dateOfBirth:!0,gender:!0,isEmailVerified:!0,isPhoneVerified:!0}});t.json({success:!0,data:n,message:"User updated successfully"})}catch(e){console.error("Error updating user:",e),t.status(500).json({success:!1,message:"Failed to update user",error:e.message})}}),o.delete("/:id",r,i("ADMIN","SUPER_ADMIN"),async(e,t)=>{try{const{id:s}=e.params;await c.user.delete({where:{id:s}}),t.json({success:!0,message:"User deleted successfully"})}catch(e){console.error("Error deleting user:",e),t.status(500).json({success:!1,message:"Failed to delete user",error:e.message})}}),o.get("/profile/me",r,async(e,t)=>{try{const s=e.user.id,a=await c.user.findUnique({where:{id:s},select:{id:!0,email:!0,firstName:!0,lastName:!0,role:!0,status:!0,departmentId:!0,createdAt:!0,updatedAt:!0,lastLoginAt:!0,profilePicture:!0,phone:!0,address:!0,dateOfBirth:!0,gender:!0,isEmailVerified:!0,isPhoneVerified:!0,examAttempts:{include:{exam:{select:{id:!0,title:!0,category:!0}}},orderBy:{createdAt:"desc"},take:10},examBookings:{include:{exam:{select:{id:!0,title:!0,category:!0}}},orderBy:{createdAt:"desc"},take:10}}});t.json({success:!0,data:a,message:"Profile retrieved successfully"})}catch(e){console.error("Error fetching profile:",e),t.status(500).json({success:!1,message:"Failed to fetch profile",error:e.message})}}),o.put("/profile/me",r,async(e,t)=>{try{const s=e.user.id,a=e.body;delete a.password,delete a.emailVerificationToken,delete a.passwordResetToken,delete a.passwordResetExpires,delete a.role,delete a.isEmailVerified,delete a.isPhoneVerified;const n=await c.user.update({where:{id:s},data:a,select:{id:!0,email:!0,firstName:!0,lastName:!0,role:!0,status:!0,departmentId:!0,createdAt:!0,updatedAt:!0,lastLoginAt:!0,profilePicture:!0,phone:!0,address:!0,dateOfBirth:!0,gender:!0,isEmailVerified:!0,isPhoneVerified:!0}});t.json({success:!0,data:n,message:"Profile updated successfully"})}catch(e){console.error("Error updating profile:",e),t.status(500).json({success:!1,message:"Failed to update profile",error:e.message})}}),e.exports=o},9025:(e,t,s)=>{const{PrismaClient:a}=s(6330),{v4:n}=s(3903),r=s(9665),i=(s(4479),new a);e.exports=new class{async createExam(e,t){try{const{title:s,description:a,examCategoryId:n,duration:r,totalMarks:o,passingMarks:c,price:l,isPublic:u=!1,isActive:d=!0,instructions:m,rules:g,startDate:h,endDate:p,maxAttempts:y=1,retakeDelay:f=0,questionCount:w,difficultyDistribution:x}=e,b=await i.examCategory.findUnique({where:{id:n}});if(!b)return{success:!1,message:"Exam category not found"};const v=await i.exam.create({data:{title:s,description:a,examCategoryId:n,duration:r,totalMarks:o,passingMarks:c,price:l,isPublic:u,isActive:d,instructions:m,rules:g,startDate:h?new Date(h):null,endDate:p?new Date(p):null,maxAttempts:y,retakeDelay:f,questionCount:w,difficultyDistribution:x,createdBy:t},include:{examCategory:{select:{name:!0,color:!0}}}});return await i.auditLog.create({data:{userId:t,action:"EXAM_CREATED",resource:"EXAM",resourceId:v.id,details:{examTitle:v.title,category:b.name,price:v.price},ipAddress:"system",userAgent:"exam-service"}}),{success:!0,exam:v}}catch(e){return r.error("Create exam failed",e),{success:!1,message:"Failed to create exam"}}}async getAllExams(e={}){try{const{page:t=1,limit:s=10,categoryId:a,isActive:n,isPublic:r,search:o,sortBy:c="createdAt",sortOrder:l="desc"}=e,u=(t-1)*s,d={};a&&(d.examCategoryId=a),void 0!==n&&(d.isActive=n),void 0!==r&&(d.isPublic=r),o&&(d.OR=[{title:{contains:o,mode:"insensitive"}},{description:{contains:o,mode:"insensitive"}}]);const[m,g]=await Promise.all([i.exam.findMany({where:d,include:{examCategory:{select:{name:!0,color:!0}},_count:{select:{attempts:!0,bookings:!0}}},orderBy:{[c]:l},skip:u,take:s}),i.exam.count({where:d})]);return{success:!0,exams:m,pagination:{page:t,limit:s,total:g,pages:Math.ceil(g/s)}}}catch(e){return r.error("Get all exams failed",e),{success:!1,message:"Failed to get exams"}}}async getExamById(e){try{const t=await i.exam.findUnique({where:{id:e},include:{examCategory:{select:{name:!0,color:!0,description:!0}},_count:{select:{attempts:!0,bookings:!0}}}});if(!t)return{success:!1,message:"Exam not found"};const s=await i.question.findMany({where:{examCategoryId:t.examCategoryId,isActive:!0,isPublic:!0},include:{options:{select:{id:!0,text:!0,isCorrect:!0}},images:!0},orderBy:{createdAt:"desc"}});return{success:!0,exam:{...t,questions:s}}}catch(e){return r.error("Get exam by ID failed",e),{success:!1,message:"Failed to get exam"}}}async updateExam(e,t,s){try{if(!await i.exam.findUnique({where:{id:e}}))return{success:!1,message:"Exam not found"};const a=await i.exam.update({where:{id:e},data:{...t,updatedAt:new Date},include:{examCategory:{select:{name:!0,color:!0}}}});return await i.auditLog.create({data:{userId:s,action:"EXAM_UPDATED",resource:"EXAM",resourceId:e,details:{examTitle:a.title,changes:t},ipAddress:"system",userAgent:"exam-service"}}),{success:!0,exam:a}}catch(e){return r.error("Update exam failed",e),{success:!1,message:"Failed to update exam"}}}async deleteExam(e,t){try{const s=await i.exam.findUnique({where:{id:e}});return s?await i.examAttempt.count({where:{examId:e}})>0?{success:!1,message:"Cannot delete exam with existing attempts"}:(await i.exam.delete({where:{id:e}}),await i.auditLog.create({data:{userId:t,action:"EXAM_DELETED",resource:"EXAM",resourceId:e,details:{examTitle:s.title},ipAddress:"system",userAgent:"exam-service"}}),{success:!0,message:"Exam deleted successfully"}):{success:!1,message:"Exam not found"}}catch(e){return r.error("Delete exam failed",e),{success:!1,message:"Failed to delete exam"}}}async startExamAttempt(e,t){try{const s=await i.exam.findUnique({where:{id:e},include:{examCategory:!0}});if(!s)return{success:!1,message:"Exam not found"};if(!s.isActive)return{success:!1,message:"Exam is not active"};if(await i.examAttempt.count({where:{examId:e,userId:t,status:{in:["IN_PROGRESS","COMPLETED"]}}})>=s.maxAttempts)return{success:!1,message:"Maximum attempts reached for this exam"};r.info("Getting questions for exam category",{examId:e,userId:t,examCategoryId:s.examCategoryId});const a=await i.question.findMany({where:{examCategoryId:s.examCategoryId,isActive:!0,isPublic:!0},include:{options:{select:{id:!0,text:!0,isCorrect:!0}},images:!0},orderBy:{createdAt:"desc"}});return r.info("Questions found",{examId:e,questionsCount:a.length}),{success:!0,attempt:{id:(await i.examAttempt.create({data:{examId:e,userId:t,status:"IN_PROGRESS"}})).id,duration:s.duration,totalQuestions:a.length},questions:a,exam:{id:s.id,title:s.title,duration:s.duration,totalQuestions:a.length,instructions:s.instructions,rules:s.rules}}}catch(e){return r.error("Start exam attempt failed",e),{success:!1,message:"Failed to start exam attempt"}}}async submitQuestionResponse(e,t,s,a,n){try{const r=await i.examAttempt.findUnique({where:{id:e},include:{exam:!0}});if(!r)return{success:!1,message:"Attempt not found"};if(r.userId!==n)return{success:!1,message:"Unauthorized"};if("IN_PROGRESS"!==r.status)return{success:!1,message:"Attempt is not in progress"};const o=await i.question.findUnique({where:{id:t},include:{options:!0}});if(!o)return{success:!1,message:"Question not found"};const c=this.checkAnswer(o,s);return{success:!0,response:await i.questionResponse.upsert({where:{attemptId_questionId:{attemptId:e,questionId:t}},update:{selectedOptions:s,timeSpent:a,isCorrect:c,answeredAt:new Date},create:{attemptId:e,questionId:t,userId:n,selectedOptions:s,timeSpent:a,isCorrect:c,answeredAt:new Date}})}}catch(e){return r.error("Submit question response failed",e),{success:!1,message:"Failed to submit response"}}}async completeExamAttempt(e,t){try{r.info("Starting completeExamAttempt",{attemptId:e,userId:t});const s=await i.examAttempt.findUnique({where:{id:e},include:{exam:!0,responses:{include:{question:!0}}}});if(!s)return r.error("Attempt not found",{attemptId:e}),{success:!1,message:"Attempt not found"};if(s.userId!==t)return r.error("Unauthorized attempt completion",{attemptId:e,userId:t,attemptUserId:s.userId}),{success:!1,message:"Unauthorized"};if("IN_PROGRESS"!==s.status)return r.error("Attempt is not in progress",{attemptId:e,status:s.status}),{success:!1,message:"Attempt is not in progress"};let a=0,n=0;const o=s.responses.length;r.info("Calculating score",{totalQuestions:o,responsesCount:s.responses.length});for(const e of s.responses)r.info("Processing response",{questionId:e.questionId,isCorrect:e.isCorrect,selectedOptions:e.selectedOptions}),e.isCorrect&&(a++,n+=1);const c=o>0?a/o*100:0,l=c>=(s.exam.passingMarks||50);r.info("Score calculation completed",{correctAnswers:a,totalScore:n,percentage:c,isPassed:l}),r.info("Updating attempt",{attemptId:e,totalMarks:o,obtainedMarks:n,percentage:c,isPassed:l});const u=await i.examAttempt.update({where:{id:e},data:{status:"COMPLETED",completedAt:new Date,totalMarks:o,obtainedMarks:n,percentage:c,isPassed:l}});r.info("Attempt updated successfully",{attemptId:e});let d=null;l&&(r.info("Creating certificate for passed attempt",{attemptId:e}),d=await i.certificate.create({data:{userId:t,examId:s.examId,attemptId:e,certificateNumber:`CERT-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,issuedAt:new Date,expiresAt:new Date(Date.now()+31536e6)}}),r.info("Certificate created",{certificateId:d.id}));const m={success:!0,attempt:u,certificate:d,results:{totalQuestions:o,correctAnswers:a,score:n,percentage:c,isPassed:l}};if(global.notificationService&&m.success)try{await global.notificationService.notifyExamCompleted(m.attempt,m.results),r.info("Exam completion notification sent",{attemptId:e,userId:t,score:m.results.percentage})}catch(s){r.error("Failed to send exam completion notification",{attemptId:e,userId:t,error:s.message})}return r.info("completeExamAttempt completed successfully",{attemptId:e}),m}catch(s){return r.error("Complete exam attempt failed",{attemptId:e,userId:t,error:s.message,stack:s.stack}),{success:!1,message:"Failed to complete attempt"}}}checkAnswer(e,t){try{if(!e||!e.options||!Array.isArray(e.options))return r.error("Invalid question object in checkAnswer",{question:e}),!1;if(!t||!Array.isArray(t))return r.error("Invalid selectedOptions in checkAnswer",{selectedOptions:t}),!1;const s=e.options.filter(e=>e&&e.isCorrect).map(e=>e.id).sort(),a=t.sort();return JSON.stringify(a)===JSON.stringify(s)}catch(e){return r.error("Error checking answer:",e),!1}}async getExamResults(e,t){try{const s=await i.examAttempt.findUnique({where:{id:e},include:{exam:{include:{examCategory:!0}},responses:{include:{question:!0}},certificate:!0}});return s?s.userId!==t?{success:!1,message:"Unauthorized"}:{success:!0,attempt:s}:{success:!1,message:"Attempt not found"}}catch(e){return r.error("Get exam results failed",e),{success:!1,message:"Failed to get results"}}}async getUserExamHistory(e,t={}){try{const{page:s=1,limit:a=10,examId:n,status:r,sortBy:o="createdAt",sortOrder:c="desc"}=t,l=(s-1)*a,u={userId:e};n&&(u.examId=n),r&&(u.status=r);const[d,m]=await Promise.all([i.examAttempt.findMany({where:u,include:{exam:{include:{examCategory:!0}},certificate:!0},orderBy:{[o]:c},skip:l,take:a}),i.examAttempt.count({where:u})]);return{success:!0,attempts:d,pagination:{page:s,limit:a,total:m,pages:Math.ceil(m/a)}}}catch(e){return r.error("Get user exam history failed",e),{success:!1,message:"Failed to get exam history"}}}async getAvailableExamsForUser(e,t={}){try{const{examCategoryId:e,page:s=1,limit:a=10,search:n}=t,r=(s-1)*a,o={isActive:!0,isPublic:!0};e&&(o.examCategoryId=e),n&&(o.OR=[{title:{contains:n,mode:"insensitive"}},{description:{contains:n,mode:"insensitive"}}]);const[c,l]=await Promise.all([i.exam.findMany({where:o,include:{examCategory:{select:{id:!0,name:!0,color:!0}}},orderBy:{createdAt:"desc"},skip:r,take:a}),i.exam.count({where:o})]);return{success:!0,exams:c,pagination:{page:s,limit:a,total:l,pages:Math.ceil(l/a)}}}catch(e){return r.error("Get available exams for user failed",e),{success:!1,message:"Failed to get available exams"}}}async getUserExamStats(e){try{const t=await i.examAttempt.groupBy({by:["status"],where:{userId:e},_count:{id:!0},_avg:{percentage:!0,score:!0}}),s=await i.examAttempt.count({where:{userId:e}}),a=await i.examAttempt.count({where:{userId:e,isPassed:!0}});return{success:!0,stats:{totalAttempts:s,passedAttempts:a,certificates:await i.certificate.count({where:{userId:e,isActive:!0}}),passRate:s>0?a/s*100:0,averageScore:t.find(e=>"COMPLETED"===e.status)?._avg.score||0,averagePercentage:t.find(e=>"COMPLETED"===e.status)?._avg.percentage||0}}}catch(e){return r.error("Get user exam stats failed",e),{success:!1,message:"Failed to get exam stats"}}}async getExamAnalytics(e={}){try{const{examId:t,startDate:s,endDate:a}=e;let n={};t&&(n.examId=t),(s||a)&&(n.createdAt={},s&&(n.createdAt.gte=new Date(s)),a&&(n.createdAt.lte=new Date(a)));const[r,o,c,l,u]=await Promise.all([i.examAttempt.count({where:n}),i.examAttempt.count({where:{...n,status:"COMPLETED"}}),i.examAttempt.count({where:{...n,isPassed:!0}}),i.examAttempt.aggregate({where:{...n,status:"COMPLETED"},_avg:{percentage:!0,obtainedMarks:!0,totalMarks:!0}}),t?i.exam.findUnique({where:{id:t},include:{_count:{select:{attempts:!0,questions:!0}},attempts:{where:{status:"COMPLETED"},select:{percentage:!0,obtainedMarks:!0,totalMarks:!0,isPassed:!0,createdAt:!0}}}}):null]),d=r>0?o/r*100:0,m=o>0?c/o*100:0,g={totalAttempts:r,completedAttempts:o,passedAttempts:c,completionRate:Math.round(100*d)/100,passRate:Math.round(100*m)/100,averageObtainedMarks:Math.round(100*(l._avg.obtainedMarks||0))/100,averageTotalMarks:Math.round(100*(l._avg.totalMarks||0))/100,averagePercentage:Math.round(100*(l._avg.percentage||0))/100};return u&&t&&(g.examDetails={id:u.id,title:u.title,totalQuestions:u._count.questions,totalAttempts:u._count.attempts,recentAttempts:u.attempts.slice(-10)}),{success:!0,data:g}}catch(e){return r.error("Get exam analytics failed",e),{success:!1,message:"Failed to get exam analytics"}}}}},9623:(e,t,s)=>{const{PrismaClient:a}=s(6330),n=s(9665),r=s(2733),i=s(7409),o=s(9025),c=s(8404),l=s(6e3),u=s(3249),{validateUserCreation:d,validateUserUpdate:m,validateBulkUserImport:g}=s(8897),h=new a,p=new r,y=new i,f=new c,w=new l,x=new u;e.exports=new class{async getDashboardStats(e,t){try{const e=await p.getDashboardStatistics();t.status(200).json({success:!0,data:e})}catch(e){n.error("Get dashboard stats failed",e),t.status(500).json({success:!1,error:{message:"Failed to get dashboard statistics"}})}}async createUser(e,t){try{const{error:s,value:a}=d(e.body);if(s)return t.status(400).json({success:!1,error:{message:"Validation failed",details:s.details}});const n=await y.createUser(a,e.user.id);if(!n.success)return t.status(400).json(n);t.status(201).json({success:!0,message:"User created successfully",data:{user:n.user}})}catch(e){n.error("Create user failed",e),t.status(500).json({success:!1,error:{message:"Failed to create user"}})}}async getAllUsers(e,t){try{const{page:s=1,limit:a=20,role:n,isActive:r,search:i,sortBy:o,sortOrder:c}=e.query,l={page:parseInt(s),limit:parseInt(a),role:n,search:i,sortBy:o,sortOrder:c};void 0!==r&&(l.isActive="true"===r);const u=await y.getAllUsers(l);t.status(200).json({success:!0,data:u})}catch(e){n.error("Get all users failed",e),t.status(500).json({success:!1,error:{message:"Failed to get users"}})}}async getUserDetails(e,t){try{const{userId:s}=e.params,a=await y.getUserDetails(s);if(!a)return t.status(404).json({success:!1,error:{message:"User not found"}});t.status(200).json({success:!0,data:{user:a}})}catch(e){n.error("Get user details failed",e),t.status(500).json({success:!1,error:{message:"Failed to get user details"}})}}async updateUser(e,t){try{const{userId:s}=e.params,{error:a,value:n}=m(e.body);if(a)return t.status(400).json({success:!1,error:{message:"Validation failed",details:a.details}});const r=await y.updateUser(s,n,e.user.id);if(!r.success)return t.status(400).json(r);t.status(200).json({success:!0,message:"User updated successfully",data:{user:r.user}})}catch(e){n.error("Update user failed",e),t.status(500).json({success:!1,error:{message:"Failed to update user"}})}}async toggleUserStatus(e,t){try{const{userId:s}=e.params,{isActive:a,reason:n}=e.body,r=await y.toggleUserStatus(s,a,n,e.user.id);if(!r.success)return t.status(400).json(r);t.status(200).json({success:!0,message:`User ${a?"activated":"deactivated"} successfully`,data:{user:r.user}})}catch(e){n.error("Toggle user status failed",e),t.status(500).json({success:!1,error:{message:"Failed to update user status"}})}}async bulkImportUsers(e,t){try{const{error:s,value:a}=g(e.body);if(s)return t.status(400).json({success:!1,error:{message:"Validation failed",details:s.details}});const n=await y.bulkImportUsers(a.users,e.user.id);t.status(200).json({success:!0,message:"Bulk import completed",data:n})}catch(e){n.error("Bulk import users failed",e),t.status(500).json({success:!1,error:{message:"Failed to import users"}})}}async getUserAnalytics(e,t){try{const{startDate:s,endDate:a,role:n}=e.query,r=await w.getUserAnalytics({startDate:s,endDate:a,role:n});t.status(200).json({success:!0,data:r})}catch(e){n.error("Get user analytics failed",e),t.status(500).json({success:!1,error:{message:"Failed to get user analytics"}})}}async createExamCategory(e,t){try{const{name:s,description:a,icon:n,color:r,sortOrder:i}=e.body,o=await h.examCategory.create({data:{name:s,description:a,icon:n,color:r,sortOrder:i||0}});await h.auditLog.create({data:{userId:e.user.id,action:"EXAM_CATEGORY_CREATED",resource:"EXAM_CATEGORY",resourceId:o.id,details:{categoryName:s},ipAddress:e.ip,userAgent:e.get("User-Agent")}}),t.status(201).json({success:!0,message:"Exam category created successfully",data:{category:o}})}catch(e){n.error("Create exam category failed",e),t.status(500).json({success:!1,error:{message:"Failed to create exam category"}})}}async getAllExamCategories(e,t){try{const{isActive:s}=e.query,a={};void 0!==s&&(a.isActive="true"===s);const n=await h.examCategory.findMany({where:a,include:{_count:{select:{exams:!0,questions:!0}}},orderBy:{sortOrder:"asc"}});t.status(200).json({success:!0,data:{categories:n}})}catch(e){n.error("Get exam categories failed",e),t.status(500).json({success:!1,error:{message:"Failed to get exam categories"}})}}async updateExamCategory(e,t){try{const{categoryId:s}=e.params,{name:a,description:n,icon:r,color:i,sortOrder:o,isActive:c}=e.body,l=await h.examCategory.update({where:{id:s},data:{name:a,description:n,icon:r,color:i,sortOrder:o,isActive:c}});await h.auditLog.create({data:{userId:e.user.id,action:"EXAM_CATEGORY_UPDATED",resource:"EXAM_CATEGORY",resourceId:s,details:{categoryName:a},ipAddress:e.ip,userAgent:e.get("User-Agent")}}),t.status(200).json({success:!0,message:"Exam category updated successfully",data:{category:l}})}catch(e){n.error("Update exam category failed",e),t.status(500).json({success:!1,error:{message:"Failed to update exam category"}})}}async deleteExamCategory(e,t){try{const{categoryId:s}=e.params,a=await h.examCategory.findUnique({where:{id:s},include:{_count:{select:{exams:!0,questions:!0}}}});if(a._count.exams>0||a._count.questions>0)return t.status(400).json({success:!1,error:{message:"Cannot delete category with existing exams or questions"}});await h.examCategory.delete({where:{id:s}}),await h.auditLog.create({data:{userId:e.user.id,action:"EXAM_CATEGORY_DELETED",resource:"EXAM_CATEGORY",resourceId:s,details:{categoryName:a.name},ipAddress:e.ip,userAgent:e.get("User-Agent")}}),t.status(200).json({success:!0,message:"Exam category deleted successfully"})}catch(e){n.error("Delete exam category failed",e),t.status(500).json({success:!1,error:{message:"Failed to delete exam category"}})}}async createQuestion(e,t){try{let s,a=[];if(e.body.questionData)try{s=JSON.parse(e.body.questionData)}catch(e){return t.status(400).json({success:!1,error:{message:"Invalid question data format"}})}else s=e.body;if(e.files&&e.files.length>0)try{a=await x.uploadQuestionImages(e.files,null)}catch(e){return n.error("Image upload failed",e),t.status(400).json({success:!1,error:{message:"Failed to upload images",details:e.message}})}s.images=a;const r=await f.createQuestion(s,e.user.id);if(!r.success)return t.status(400).json({success:!1,message:r.message||"Failed to create question",error:r.error});t.status(201).json({success:!0,message:"Question created successfully",data:{question:r.question}})}catch(e){n.error("Create question failed",e),t.status(500).json({success:!1,error:{message:"Failed to create question"}})}}async bulkCreateQuestions(e,t){try{const{questions:s}=e.body;if(!Array.isArray(s)||0===s.length)return t.status(400).json({success:!1,error:{message:"Questions must be a non-empty array"}});const a=[];let n=0,r=0;for(const t of s)try{const s=await f.createQuestion(t,e.user.id);s.success?(n++,a.push({success:!0,question:s.question})):(r++,a.push({success:!1,error:s.message}))}catch(e){r++,a.push({success:!1,error:e.message})}t.status(200).json({success:!0,message:`Bulk operation completed. ${n} questions created successfully, ${r} failed.`,data:{createdCount:n,errorCount:r,results:a}})}catch(e){n.error("Bulk create questions failed",e),t.status(500).json({success:!1,error:{message:"Failed to create questions"}})}}async getAllQuestions(e,t){try{const{page:s=1,limit:a=20,examCategoryId:n,difficulty:r,type:i,isActive:o,search:c}=e.query,l=await f.getAllQuestions({page:parseInt(s),limit:parseInt(a),examCategoryId:n,difficulty:r,type:i,isActive:"true"===o||"false"!==o,search:c});t.status(200).json({success:!0,data:l})}catch(e){n.error("Get all questions failed",e),t.status(500).json({success:!1,error:{message:"Failed to get questions"}})}}async updateQuestion(e,t){try{const{questionId:s}=e.params,a=await f.updateQuestion(s,e.body,e.user.id);if(!a.success)return t.status(400).json(a);t.status(200).json({success:!0,message:"Question updated successfully",data:{question:a.question}})}catch(e){n.error("Update question failed",e),t.status(500).json({success:!1,error:{message:"Failed to update question"}})}}async deleteQuestion(e,t){try{const{questionId:s}=e.params,a=await f.deleteQuestion(s,e.user.id);if(!a.success)return t.status(400).json(a);t.status(200).json({success:!0,message:"Question deleted successfully"})}catch(e){n.error("Delete question failed",e),t.status(500).json({success:!1,error:{message:"Failed to delete question"}})}}async bulkImportQuestions(e,t){try{const s=await f.bulkImportQuestions(e.body.questions,e.user.id);t.status(200).json({success:!0,message:"Questions imported successfully",data:s})}catch(e){n.error("Bulk import questions failed",e),t.status(500).json({success:!1,error:{message:"Failed to import questions"}})}}async getQuestionAnalytics(e,t){try{const{examCategoryId:s,startDate:a,endDate:n}=e.query,r=await f.getQuestionAnalytics({examCategoryId:s,startDate:a,endDate:n});t.status(200).json({success:!0,data:r})}catch(e){n.error("Get question analytics failed",e),t.status(500).json({success:!1,error:{message:"Failed to get question analytics"}})}}async createExam(e,t){try{const{validateExamCreation:a}=s(7859),{error:n,value:r}=a(e.body);if(n)return t.status(400).json({success:!1,error:{message:"Validation failed",details:n.details}});const i=await o.createExam(r,e.user.id);if(!i.success)return t.status(400).json(i);t.status(201).json({success:!0,message:"Exam created successfully",data:{exam:i.exam}})}catch(e){n.error("Create exam failed",e),t.status(500).json({success:!1,error:{message:"Failed to create exam"}})}}async getAllExams(e,t){try{const{page:s=1,limit:a=20,examCategoryId:n,isActive:r,isPublic:i,search:c}=e.query,l=await o.getAllExams({page:parseInt(s),limit:parseInt(a),categoryId:n,isActive:void 0!==r?"true"===r:void 0,isPublic:void 0!==i?"true"===i:void 0,search:c});t.status(200).json({success:!0,data:l})}catch(e){n.error("Get all exams failed",e),t.status(500).json({success:!1,error:{message:"Failed to get exams"}})}}async updateExam(e,t){try{const{examId:a}=e.params,{validateExamUpdate:n}=s(7859),{error:r,value:i}=n(e.body);if(r)return t.status(400).json({success:!1,error:{message:"Validation failed",details:r.details}});const c=await o.updateExam(a,i,e.user.id);if(!c.success)return t.status(400).json(c);t.status(200).json({success:!0,message:"Exam updated successfully",data:{exam:c.exam}})}catch(e){n.error("Update exam failed",e),t.status(500).json({success:!1,error:{message:"Failed to update exam"}})}}async deleteExam(e,t){try{const{examId:s}=e.params,a=await o.deleteExam(s,e.user.id);if(!a.success)return t.status(400).json(a);t.status(200).json({success:!0,message:"Exam deleted successfully"})}catch(e){n.error("Delete exam failed",e),t.status(500).json({success:!1,error:{message:"Failed to delete exam"}})}}async approveExam(e,t){try{const{examId:s}=e.params,{approvedBy:a}=e.user,n=await o.approveExam(s,a);if(!n.success)return t.status(400).json(n);t.status(200).json({success:!0,message:"Exam approved successfully",data:{exam:n.exam}})}catch(e){n.error("Approve exam failed",e),t.status(500).json({success:!1,error:{message:"Failed to approve exam"}})}}async getExamAnalytics(e,t){try{const{examId:s,startDate:a,endDate:n}=e.query,r=await o.getExamAnalytics({examId:s,startDate:a,endDate:n});t.status(200).json({success:!0,data:r})}catch(e){n.error("Get exam analytics failed",e),t.status(500).json({success:!1,error:{message:"Failed to get exam analytics"}})}}async addQuestionToExam(e,t){try{const{examId:s}=e.params,{questionId:a}=e.body;if(!a)return t.status(400).json({success:!1,error:{message:"Question ID is required"}});const n=await o.addQuestionToExam(s,a,e.user.id);if(!n.success)return t.status(400).json(n);t.status(200).json({success:!0,message:"Question added to exam successfully",data:n.data})}catch(e){n.error("Add question to exam failed",e),t.status(500).json({success:!1,error:{message:"Failed to add question to exam"}})}}async getSystemHealth(e,t){try{const e=await p.getSystemHealth();t.status(200).json({success:!0,data:e})}catch(e){n.error("Get system health failed",e),t.status(500).json({success:!1,error:{message:"Failed to get system health"}})}}async getAuditLogs(e,t){try{const{page:s=1,limit:a=50,userId:n,action:r,resource:i,startDate:o,endDate:c}=e.query,l=await p.getAuditLogs({page:parseInt(s),limit:parseInt(a),userId:n,action:r,resource:i,startDate:o,endDate:c});t.status(200).json({success:!0,data:l})}catch(e){n.error("Get audit logs failed",e),t.status(500).json({success:!1,error:{message:"Failed to get audit logs"}})}}async getSystemAnalytics(e,t){try{const{startDate:s,endDate:a}=e.query,n=await w.getSystemAnalytics({startDate:s,endDate:a});t.status(200).json({success:!0,data:n})}catch(e){n.error("Get system analytics failed",e),t.status(500).json({success:!1,error:{message:"Failed to get system analytics"}})}}async exportData(e,t){try{const{type:s,format:a,filters:n}=e.body,r=await p.exportData(s,a,n);t.status(200).json({success:!0,message:"Data exported successfully",data:r})}catch(e){n.error("Export data failed",e),t.status(500).json({success:!1,error:{message:"Failed to export data"}})}}async backupSystem(e,t){try{const e=await p.createSystemBackup();t.status(200).json({success:!0,message:"System backup created successfully",data:e})}catch(e){n.error("System backup failed",e),t.status(500).json({success:!1,error:{message:"Failed to create system backup"}})}}async testEssayScoring(e,t){try{const{studentAnswer:a,correctAnswer:n,maxMarks:r,questionData:i}=e.body;if(!a||!n||!r)return t.status(400).json({success:!1,error:{message:"Student answer, correct answer, and max marks are required"}});const o=new(s(9956)),c=await o.scoreEssay(a,n,r,i||{});t.status(200).json({success:!0,message:"Essay scored successfully",data:c})}catch(e){n.error("Essay scoring test failed",e),t.status(500).json({success:!1,error:{message:"Failed to score essay"}})}}}},9665:(e,t,s)=>{const a=s(5124),n=s(6928),r=s(9896),i=n.join(process.cwd(),"logs");r.existsSync(i)||r.mkdirSync(i,{recursive:!0}),a.format.combine(a.format.colorize(),a.format.timestamp({format:"YYYY-MM-DD HH:mm:ss"}),a.format.errors({stack:!0}),a.format.printf(({timestamp:e,level:t,message:s,stack:a,...n})=>{let r=`${e} [${t}]: ${s}`;return a&&(r+=`\n${a}`),Object.keys(n).length>0&&(r+=`\n${JSON.stringify(n,null,2)}`),r}));const o=a.format.combine(a.format.timestamp({format:"YYYY-MM-DD HH:mm:ss"}),a.format.errors({stack:!0}),a.format.json()),c=a.createLogger({level:process.env.LOG_LEVEL||"info",format:o,defaultMeta:{service:"mock-test-api"},transports:[new a.transports.File({filename:n.join(i,"error.log"),level:"error",maxsize:5242880,maxFiles:5}),new a.transports.File({filename:n.join(i,"combined.log"),maxsize:5242880,maxFiles:5}),new a.transports.File({filename:n.join(i,"access.log"),level:"info",maxsize:5242880,maxFiles:5})],exceptionHandlers:[new a.transports.File({filename:n.join(i,"exceptions.log")})],rejectionHandlers:[new a.transports.File({filename:n.join(i,"rejections.log")})]});c.stream={write:e=>{c.info(e.trim())}},c.logRequest=(e,t,s)=>{c.info("HTTP Request",{method:e.method,url:e.url,ip:e.ip,userAgent:e.get("User-Agent"),userId:e.user?.id||"anonymous",responseTime:`${s}ms`,statusCode:t.statusCode})},c.logError=(e,t=null)=>{c.error("Application Error",{message:e.message,stack:e.stack,url:t?.url,method:t?.method,userId:t?.user?.id||"anonymous",ip:t?.ip})},c.logSecurity=(e,t)=>{c.warn("Security Event",{event:e,...t,timestamp:(new Date).toISOString()})},c.logDatabase=(e,t,s,a=null)=>{c.debug("Database Operation",{operation:e,table:t,duration:`${s}ms`,rows:a})},c.logExam=(e,t,s,a={})=>{c.info("Exam Action",{action:e,examId:t,userId:s,...a})},c.logPayment=(e,t,s,a={})=>{c.info("Payment Action",{action:e,amount:t,userId:s,...a})},e.exports=c},9896:e=>{"use strict";e.exports=require("fs")},9956:(e,t,s)=>{const a=s(5029),{PrismaClient:n}=s(6330),r=s(9665);new n,e.exports=class{constructor(){this.tokenizer=new a.WordTokenizer,this.stemmer=a.PorterStemmer,this.TfIdf=a.TfIdf}async scoreEssay(e,t,s,a={}){try{r.info("Starting ULTRA-ADVANCED essay scoring with deep analysis",{answerLength:e.length,maxMarks:s,questionId:a.id}),this.preprocessText(e),this.preprocessText(t);const n=this.detectGibberish(e),i=this.detectCompletelyOffTopic(e,t),o=await this.analyzeUltraDeepContentAccuracy(e,t,.2*s),c=await this.analyzeIntelligentSemanticUnderstanding(e,t,.2*s),l=await this.analyzeAdvancedQualityDifferentiation(e,t,.2*s),u=await this.analyzeContextAwareWritingQuality(e,t,.15*s),d=await this.analyzeAdvancedCriticalThinking(e,t,.1*s),m=await this.analyzeDomainSpecificTechnicalPrecision(e,t,.08*s),g=await this.analyzeCognitiveComplexity(e,t,.05*s),h=await this.analyzeConceptualDepth(e,t,.02*s);let p=Math.round(o.score+c.score+l.score+u.score+d.score+m.score+g.score+h.score);const y=this.calculateIntelligenceMultiplier(e,t);p=Math.round(p*y),p+=this.calculateAdvancedIntelligenceBonus(e,t,s);const f=this.calculateEnhancedBonus(e,t,s);p+=f;const w=this.calculateEnhancedPenalties(e,t,s);if(p-=w,n>.5){const t=Math.min(1,e.length/500);p-=p*(n*(1-.5*t)*(1-.5*Math.min(1,(o.score+c.score)/3)))*.3}i>0&&(p-=p*i*.5);const x=Math.max(0,Math.min(p,s)),b={totalScore:x,maxMarks:s,percentage:Math.round(x/s*100),isPassed:x>=.6*s,grade:this.calculateIELTSGrade(x,s),band:this.calculateIELTSBand(x,s),assessment:this.generateAssessment(x,s),detailedBreakdown:{contentAccuracy:o,semanticUnderstanding:c,writingQuality:u,criticalThinking:d,technicalPrecision:m,bonusPoints:f,penalties:w,gibberishPenalty:n,offTopicPenalty:i},feedback:this.generateEnhancedFeedback({contentAccuracy:o,semanticUnderstanding:c,writingQuality:u,criticalThinking:d,technicalPrecision:m,totalScore:x,maxMarks:s}),ieltsMetrics:this.generateIELTSMetrics(x,s),toeflMetrics:this.generateTOEFLMetrics(x,s)};return r.info("Essay scoring completed",{totalScore:x,percentage:b.percentage,grade:b.grade,band:b.band}),b}catch(e){throw r.error("Essay scoring failed",e),new Error("Failed to score essay: "+e.message)}}detectOffTopicAnswer(e,t,s){const a=e.toLowerCase(),n=(t.toLowerCase(),this.extractQuestionKeywords(t)),r=this.extractQuestionKeywords(e);let i=0;["recipe","cooking","chef","kitchen","food","ingredients","cook","bake","restaurant","menu","dish","meal","breakfast","lunch","dinner","shopping","store","buy","purchase","price","money","cost","movie","film","actor","actress","director","cinema","theater","game","play","video game","gaming","player","score","level","sports","football","basketball","soccer","tennis","player","team","music","song","singer","band","concert","album","lyrics","fashion","clothes","dress","shirt","pants","shoes","style"].forEach(e=>{const t=new RegExp(`\\b${e}\\b`,"gi"),s=a.match(t);s&&(i+=s.length)});const o=this.calculateJaccardSimilarity(new Set(n),new Set(r)),c=this.calculateJaccardSimilarity(new Set(n),new Set(r));let l=0;return i>3&&o<.2&&c<.1?l=.9:i>2&&o<.3?l=.7:i>1&&o<.4?l=.5:i>0&&o<.5&&(l=.2),l}async analyzeContentAccuracy(e,t,s){const a=e.toLowerCase();t.toLowerCase();let n=0;const r=["encapsulation","inheritance","polymorphism","abstraction"],i=r.filter(e=>a.includes(e)).length/r.length;n+=.4*i;let o=0;["means","refers to","is when","allows","enables","provides","like","similar to","for example","such as","including","consists of","involves","represents","organizes","structures","helps","solves","improves","supports","enables"].forEach(e=>{a.includes(e)&&o++});const c=Math.min(o/3,1);n+=.3*c;let l=0;["restaurant","chef","kitchen","car","vehicle","animal","bank","account"].some(e=>a.includes(e))&&(l+=.5),["real-world","practical","application","industry","company","business","software","system"].some(e=>a.includes(e))&&(l+=.5),n+=.2*l;const u=["mathematical","model","sets","design patterns","performance","security","testing","maintenance","industry","modern","scalable"].some(e=>a.includes(e));u&&(n+=.1),n=Math.min(n,1);const d=n*s;return{score:Math.round(d),maxScore:s,contentMetrics:{conceptCoverage:i,explanationQuality:c,exampleUsage:l,perspectiveDepth:u?1:0},overallAccuracy:Math.round(d/s*100)}}assessEnhancedFactualAccuracy(e,t){const s=e.toLowerCase();t.toLowerCase();let a=0,n=0;["object-oriented programming","oop","object oriented","objects","object","classes","class","encapsulation","encapsulate","encapsulated","inheritance","inherit","inherited","extends","polymorphism","polymorphic","polymorphic behavior","abstraction","abstract","abstracted","data","data structures","methods","method","functions","function","properties","property","attributes","attribute","code reuse","reuse","reusable","modularity","modular","modules","principles","four principles","main principles","paradigm","programming paradigm","software","software development","design","design patterns","patterns"].forEach(e=>{s.includes(e)&&a++}),["loops","for loop","while loop","conditions","if statements","if else","arrays","array","html","css","javascript","js","website","web","button","color","text","database","sql","mysql"].forEach(e=>{s.includes(e)&&n++});const r=["restaurant","chef","kitchen","car","vehicle","animal","bank","account"].some(e=>s.includes(e)),i=["mathematical","model","sets","design patterns","performance","security","testing","maintenance","industry","modern","scalable"].some(e=>s.includes(e)),o=a+n;if(0===o)return.5;let c=(a-.5*n)/o;return r&&a>=3&&(c+=.2),i&&a>=2&&(c+=.15),Math.max(0,Math.min(1,c))}assessEnhancedCompleteness(e,t){const s=e.toLowerCase(),a=["object-oriented programming","four principles","encapsulation","inheritance","polymorphism","abstraction","example"];let n=0;return a.forEach(e=>{s.includes(e)&&n++}),a.length>0?n/a.length:.7}assessEnhancedRelevance(e,t){const s=e.toLowerCase();let a=0,n=0;["oop","object","oriented","programming","class","encapsulation","inheritance","polymorphism","abstraction","principles","four principles","main principles","paradigm","software","development","design","objects","classes","methods","properties","code reuse","modularity","patterns"].forEach(e=>{s.includes(e)&&a++}),["html","css","javascript","js","website","web","button","color","text","loops","for loop","while loop","conditions","if statements","if else","functions","arrays","array","database","sql","mysql"].forEach(e=>{s.includes(e)&&n++});const r=["restaurant","chef","kitchen","car","vehicle","animal","bank","account"].some(e=>s.includes(e)),i=["mathematical","model","sets","design patterns","performance","security","testing","maintenance","industry","modern","scalable"].some(e=>s.includes(e)),o=a+n;if(0===o)return.5;let c=(a-.3*n)/o;return r&&a>=3&&(c+=.15),i&&a>=2&&(c+=.1),Math.max(0,Math.min(1,c))}assessEnhancedAnalysisDepth(e){let t=0;return["because","since","as a result","consequently","therefore","furthermore","moreover","in addition","additionally","however","nevertheless","on the other hand","conversely","specifically","particularly","especially","notably","in conclusion","to summarize","in summary","overall","for example","such as","like","similar to","unlike","advantages","disadvantages","benefits","drawbacks"].forEach(s=>{e.toLowerCase().includes(s.toLowerCase())&&(t+=.05)}),["restaurant","chef","kitchen","car","vehicle","animal","bank","account"].forEach(s=>{e.toLowerCase().includes(s)&&(t+=.1)}),Math.min(t,1)}assessEnhancedCoverageBreadth(e,t){const s=e.toLowerCase(),a=["definition","concept","principles","encapsulation","inheritance","polymorphism","abstraction","objects","classes","methods","properties","code reuse","modularity","maintainability","scalability","examples","applications","benefits","advantages"];let n=0;return a.forEach(e=>{s.includes(e)&&n++}),a.length>0?n/a.length:.7}assessEnhancedPrecision(e){const t=e.toLowerCase(),s=t.split(/\s+/).length;let a=0;return["encapsulation","inheritance","polymorphism","abstraction","object-oriented","class-based"].forEach(e=>{t.includes(e)&&a++}),s>0?Math.min(a/10,1):.6}assessEnhancedCurrency(e){const t=e.toLowerCase();let s=0;return["modern","contemporary","current","today","recent","latest","2020","2021","2022","2023","2024"].forEach(e=>{t.includes(e)&&s++}),Math.min(s/5,1)}calculateEnhancedBonus(e,t,s){let a=0;const n=e.toLowerCase();return["restaurant","chef","kitchen","cooking","car","vehicle","engine","animal","bank","account"].forEach(e=>{n.includes(e)&&(a+=.2)}),["real-world","practical","application","industry","company","business","software","system"].forEach(e=>{n.includes(e)&&(a+=.15)}),e.length>300&&(a+=.3),["furthermore","moreover","additionally","consequently","therefore","specifically"].forEach(e=>{n.includes(e)&&(a+=.1)}),Math.min(a,.2*s)}calculateEnhancedPenalties(e,t,s){let a=0;const n=e.toLowerCase();a+=.05*(n.match(/[.!?]/g)||[]).length,e.length<100&&(a+=.5);const r=n.split(/\s+/);return a+=.3*(1-new Set(r).size/r.length),Math.min(a,.3*s)}generateAssessment(e,t){const s=e/t*100;return s>=90?"Expert Level Answer":s>=80?"Excellent Answer":s>=70?"Very Good Answer":s>=60?"Good Answer":s>=50?"Satisfactory Answer":s>=40?"Basic Answer":s>=30?"Poor Answer":s>=20?"Very Poor Answer":"Inadequate Answer"}generateIELTSMetrics(e,t){const s=e/t*100;return{taskResponse:Math.min(9,Math.max(1,s/10)),coherenceCohesion:Math.min(9,Math.max(1,s/10)),lexicalResource:Math.min(9,Math.max(1,s/10)),grammaticalRange:Math.min(9,Math.max(1,s/10)),academicStyle:Math.min(9,Math.max(1,s/10)),argumentStrength:Math.min(9,Math.max(1,s/10)),evidenceUsage:Math.min(9,Math.max(1,s/10)),conclusionQuality:Math.min(9,Math.max(1,s/10))}}generateTOEFLMetrics(e,t){const s=e/t*100;return{integratedSkills:Math.min(30,Math.max(0,.3*s)),independentWriting:Math.min(30,Math.max(0,.3*s)),languageUse:Math.min(30,Math.max(0,.3*s)),topicDevelopment:Math.min(10,Math.max(0,.1*s))}}generateEnhancedFeedback(e){const{contentAccuracy:t,semanticUnderstanding:s,writingQuality:a,criticalThinking:n,technicalPrecision:r,totalScore:i,maxMarks:o}=e,c=i/o*100;let l="";return l=c>=90?"Excellent work! Your answer demonstrates comprehensive understanding with clear explanations and relevant examples. ":c>=80?"Very good answer with solid grasp of concepts and good structure. ":c>=70?"Good understanding shown with room for improvement in depth and examples. ":c>=60?"Satisfactory answer that covers the basics but needs more detail and analysis. ":c>=50?"Basic understanding demonstrated. Focus on providing more comprehensive explanations and examples. ":c>=40?"Limited understanding shown. Review the core concepts and provide more detailed explanations. ":"The answer does not adequately address the question. Please review the topic and provide a more relevant response. ",t.overallAccuracy<60&&(l+="Ensure your answer comprehensively addresses all aspects of the question with accurate information. "),s.overallAccuracy<60&&(l+="Demonstrate deeper understanding of the concepts and their relationships. "),a.overallAccuracy<60&&(l+="Improve the clarity and structure of your writing. "),n.overallAccuracy<60&&(l+="Enhance your critical thinking with deeper analysis and evaluation. "),r.overallAccuracy<60&&(l+="Use more precise technical terminology and concepts. "),l}preprocessText(e){return e?e.toLowerCase().replace(/[^\w\s]/g," ").replace(/\s+/g," ").trim():""}async analyzeKeywords(e,t,s){const a=this.tokenizer.tokenize(e),n=this.tokenizer.tokenize(t),r=this.extractAdvancedKeywords(a,e),i=this.extractAdvancedKeywords(n,t);let o=0,c=0,l=[],u=[];for(const[e,t]of i)if(c+=t,r.has(e))o+=t,l.push({keyword:e,type:"exact",weight:t});else{const s=this.stemmer.stem(e),a=Array.from(r.keys()).find(e=>this.stemmer.stem(e)===s);if(a)o+=.9*t,l.push({keyword:e,type:"stemmed",weight:.9*t,matched:a});else{const s=this.getSynonyms(e),a=Array.from(r.keys()).find(e=>s.includes(e.toLowerCase()));if(a)o+=.85*t,l.push({keyword:e,type:"synonym",weight:.85*t,matched:a});else{const s=this.findSemanticMatch(e,Array.from(r.keys()));s&&(o+=.7*t,u.push({keyword:e,type:"semantic",weight:.7*t,matched:s}))}}}const d=this.analyzeConceptClustering(r,i);o+=.6*d;const m=this.analyzeTechnicalTerms(e,t);o+=.8*m;const g=c>0?o/c*s:0;return{score:Math.round(g),maxScore:s,keywordCoverage:c>0?o/c*100:0,matchedKeywords:[...l,...u],conceptScore:d,technicalScore:m,analysis:{exactMatches:l.filter(e=>"exact"===e.type).length,stemmedMatches:l.filter(e=>"stemmed"===e.type).length,synonymMatches:l.filter(e=>"synonym"===e.type).length,semanticMatches:u.length,totalConcepts:i.size}}}extractAdvancedKeywords(e,t){const s=new this.TfIdf;s.addDocument(e);const a=new Map;return s.listTerms(0).forEach(e=>{if(e.score>.05&&e.term.length>2){let s=e.score;s*=this.calculatePositionWeight(e.term,t),this.isTechnicalTerm(e.term)&&(s*=1.5),s*=this.calculateConceptImportance(e.term,t),this.isDomainTerm(e.term)&&(s*=1.3),a.set(e.term,s)}}),a}calculatePositionWeight(e,t){const s=this.splitIntoSentences(t);let a=0,n=0;return s.forEach((t,r)=>{if(t.toLowerCase().includes(e.toLowerCase())){const e=1-r/s.length*.5;a+=e,n++}}),n>0?a/n:1}isTechnicalTerm(e){return["algorithm","data structure","stack","queue","linked list","tree","graph","complexity","time complexity","space complexity","big o notation","recursion","iteration","sorting","searching","hashing","indexing","database","sql","nosql","api","rest","http","tcp","udp","dns","encryption","authentication","authorization","cryptography","blockchain","machine learning","artificial intelligence","neural network","deep learning","object oriented","inheritance","polymorphism","encapsulation","abstraction","design pattern","microservices","containerization","virtualization","cloud computing","distributed systems","load balancing","caching"].some(t=>e.toLowerCase().includes(t.toLowerCase())||t.toLowerCase().includes(e.toLowerCase()))}calculateConceptImportance(e,t){let s=1;return[new RegExp(`\\b${e}\\b.*\\b(important|key|essential|critical|fundamental)\\b`,"gi"),new RegExp(`\\b(define|explain|describe)\\b.*\\b${e}\\b`,"gi"),new RegExp(`\\b${e}\\b.*\\b(example|instance|case)\\b`,"gi")].forEach(e=>{e.test(t)&&(s*=1.2)}),s}isDomainTerm(e){return["programming","software","hardware","network","security","database","web","mobile","desktop","server","client","protocol","interface","framework","library","toolkit","platform","architecture","system"].some(t=>e.toLowerCase().includes(t.toLowerCase()))}getSynonyms(e){return{stack:["pile","heap","collection","data structure","lifo"],queue:["line","sequence","order","data structure","fifo"],algorithm:["procedure","method","technique","approach","solution"],data:["information","content","details","facts","records"],structure:["organization","arrangement","framework","system","pattern"],programming:["coding","development","software engineering","implementation"],computer:["machine","system","device","processor","hardware"],function:["method","procedure","routine","operation","task"],variable:["data","value","parameter","attribute","property"],class:["type","category","group","template","blueprint"],object:["instance","entity","item","element","component"],method:["function","procedure","operation","action","behavior"],inheritance:["extension","derivation","specialization","subclassing"],polymorphism:["flexibility","adaptability","variation","diversity"],encapsulation:["bundling","packaging","containment","isolation"],abstraction:["generalization","simplification","concept","model"]}[e.toLowerCase()]||[]}findSemanticMatch(e,t){for(const s of t){if(this.calculateWordSimilarity(e,s)>.7)return s;if(this.calculateContextSimilarity(e,s)>.6)return s}return null}calculateWordSimilarity(e,t){const s=e.length>t.length?e:t,a=e.length>t.length?t:e;if(0===s.length)return 1;const n=this.levenshteinDistance(s,a);return(s.length-n)/s.length}levenshteinDistance(e,t){const s=[];for(let e=0;e<=t.length;e++)s[e]=[e];for(let t=0;t<=e.length;t++)s[0][t]=t;for(let a=1;a<=t.length;a++)for(let n=1;n<=e.length;n++)t.charAt(a-1)===e.charAt(n-1)?s[a][n]=s[a-1][n-1]:s[a][n]=Math.min(s[a-1][n-1]+1,s[a][n-1]+1,s[a-1][n]+1);return s[t.length][e.length]}calculateContextSimilarity(e,t){const s={data_structures:["stack","queue","array","list","tree","graph","hash","heap"],algorithms:["sort","search","traverse","iterate","recursion","dynamic"],programming:["function","method","class","object","variable","constant"],computer_science:["algorithm","complexity","efficiency","optimization","scalability"]};for(const[a,n]of Object.entries(s))if(n.includes(e.toLowerCase())&&n.includes(t.toLowerCase()))return.8;return.2}analyzeConceptClustering(e,t){let s=0;const a=Array.from(e.keys()),n=Array.from(t.keys()),r=[["stack","queue","data structure","lifo","fifo"],["algorithm","complexity","efficiency","optimization"],["programming","coding","development","implementation"],["computer","system","hardware","software"]];return r.forEach(e=>{const t=a.filter(t=>e.some(e=>t.toLowerCase().includes(e))),r=n.filter(t=>e.some(e=>t.toLowerCase().includes(e)));if(r.length>0){const e=t.length/r.length;s+=e}}),s/r.length}analyzeTechnicalTerms(e,t){let s=0,a=0;return["stack","queue","data structure","algorithm","complexity","lifo","fifo","implementation","efficiency","optimization"].forEach(n=>{const r=(e.toLowerCase().match(new RegExp(n,"g"))||[]).length,i=(t.toLowerCase().match(new RegExp(n,"g"))||[]).length;s+=r,a+=i}),a>0?s/a:0}async analyzeSemanticSimilarity(e,t,s){const a={cosineSimilarity:0,jaccardSimilarity:0,semanticOverlap:0,conceptAlignment:0,topicCoherence:0,meaningPreservation:0},n=this.createAdvancedDocumentVector(e),r=this.createAdvancedDocumentVector(t);a.cosineSimilarity=this.calculateCosineSimilarity(n,r);const i=this.extractConcepts(e),o=this.extractConcepts(t);a.jaccardSimilarity=this.calculateJaccardSimilarity(i,o),a.semanticOverlap=this.analyzeSemanticOverlap(e,t),a.conceptAlignment=this.analyzeConceptAlignment(e,t),a.topicCoherence=this.analyzeTopicCoherence(e,t),a.meaningPreservation=this.analyzeMeaningPreservation(e,t);const c=.25*a.cosineSimilarity+.2*a.jaccardSimilarity+.2*a.semanticOverlap+.15*a.conceptAlignment+.1*a.topicCoherence+.1*a.meaningPreservation,l=c*s;return{score:Math.round(l),maxScore:s,similarity:Math.round(100*c),detailedAnalysis:a,vectorAnalysis:{studentVectorSize:Object.keys(n).length,correctVectorSize:Object.keys(r).length,studentConcepts:i.length,correctConcepts:o.length}}}createDocumentVector(e){const t=this.tokenizer.tokenize(e),s={};return t.forEach(e=>{const t=this.stemmer.stem(e);s[t]=(s[t]||0)+1}),s}createAdvancedDocumentVector(e){const t=this.tokenizer.tokenize(e),s={};return t.forEach((e,a)=>{let n=1;n*=1-a/t.length*.3,this.isTechnicalTerm(e)&&(n*=2),this.isDomainTerm(e)&&(n*=1.5),n*=Math.min(e.length/5,2);const r=this.stemmer.stem(e);s[r]=(s[r]||0)+n}),s}extractConcepts(e){const t=this.splitIntoSentences(e),s=new Set;return t.forEach(e=>{e.toLowerCase().split(/\s+/).forEach(e=>{e.length>3&&this.isTechnicalTerm(e)&&s.add(e)}),[/\b(data structure|algorithm|complexity|efficiency)\b/gi,/\b(stack|queue|list|tree|graph)\b/gi,/\b(programming|coding|development)\b/gi,/\b(computer|system|software|hardware)\b/gi].forEach(t=>{const a=e.match(t);a&&a.forEach(e=>s.add(e.toLowerCase()))})}),Array.from(s)}calculateJaccardSimilarity(e,t){const s=Array.isArray(e)?e:[],a=Array.isArray(t)?t:[],n=s.filter(e=>a.includes(e)),r=[...new Set([...s,...a])];return r.length>0?n.length/r.length:0}analyzeSemanticOverlap(e,t){const s=new Set(e.toLowerCase().split(/\s+/)),a=new Set(t.toLowerCase().split(/\s+/));let n=0,r=0;return Array.from(a).filter(e=>this.isTechnicalTerm(e)||this.isDomainTerm(e)||e.length>6).forEach(e=>{r++,s.has(e)?n+=1:this.getSynonyms(e).some(e=>s.has(e))&&(n+=.8)}),r>0?n/r:0}analyzeConceptAlignment(e,t){const s=this.extractConcepts(e),a=this.extractConcepts(t);let n=0,r=a.length;return a.forEach(e=>{s.includes(e)?n+=1:this.getConceptVariations(e).some(e=>s.includes(e))&&(n+=.7)}),r>0?n/r:0}getConceptVariations(e){return{stack:["lifo","pile","collection"],queue:["fifo","line","sequence"],"data structure":["structure","organization","framework"],algorithm:["procedure","method","technique"],complexity:["efficiency","performance","scalability"],programming:["coding","development","implementation"]}[e.toLowerCase()]||[]}analyzeTopicCoherence(e,t){const s=this.extractTopics(e),a=this.extractTopics(t);let n=0,r=a.length;return a.forEach(e=>{s.includes(e)&&(n+=1)}),r>0?n/r:0}extractTopics(e){const t=[];return this.splitIntoSentences(e).forEach(e=>{[/\b(topic|subject|theme|focus|discuss|explain|describe)\b/gi,/\b(about|regarding|concerning|related to)\b/gi].forEach(s=>{if(s.test(e)){const s=e.split(/\s+/).filter(e=>e.length>4&&!["about","regarding","concerning","related"].includes(e.toLowerCase()));t.push(...s.slice(0,3))}})}),[...new Set(t)]}analyzeMeaningPreservation(e,t){const s=this.splitIntoSentences(e),a=this.splitIntoSentences(t);let n=0,r=a.length;return a.forEach(e=>{const t=this.extractSentenceMeaning(e);let a=0;s.forEach(e=>{const s=this.extractSentenceMeaning(e),n=this.calculateMeaningSimilarity(t,s);a=Math.max(a,n)}),n+=a}),r>0?n/r:0}extractSentenceMeaning(e){return e.toLowerCase().split(/\s+/).filter(e=>this.isTechnicalTerm(e)||this.isDomainTerm(e)||e.length>5).join(" ")}calculateMeaningSimilarity(e,t){const s=e.split(/\s+/),a=t.split(/\s+/);let n=0;s.forEach(e=>{a.includes(e)&&n++});const r=s.length+a.length-n;return r>0?n/r:0}calculateCosineSimilarity(e,t){const s=new Set([...Object.keys(e),...Object.keys(t)]);let a=0,n=0,r=0;return s.forEach(s=>{const i=e[s]||0,o=t[s]||0;a+=i*o,n+=i*i,r+=o*o}),0===n||0===r?0:a/(Math.sqrt(n)*Math.sqrt(r))}async analyzeContentStructure(e,t,s){const a=this.splitIntoSentences(e),n=this.splitIntoSentences(t),r=this.splitIntoParagraphs(e),i=this.splitIntoParagraphs(t),o=this.analyzeSentenceStructure(a,n),c=this.analyzeParagraphStructure(r,i),l=this.analyzeLogicalFlow(e),u=(.4*o+.4*c+.2*l)*s;return{score:Math.round(u),maxScore:s,sentenceStructure:Math.round(100*o),paragraphStructure:Math.round(100*c),logicalFlow:Math.round(100*l)}}splitIntoSentences(e){return e.split(/[.!?]+/).filter(e=>e.trim().length>0)}splitIntoParagraphs(e){return e.split(/\n\s*\n/).filter(e=>e.trim().length>0)}analyzeSentenceStructure(e,t){if(0===e.length)return 0;const s={lengthSimilarity:0,varietySimilarity:0,complexitySimilarity:0,patternSimilarity:0,coherenceSimilarity:0},a=e.map(e=>e.length),n=t.map(e=>e.length),r=a.reduce((e,t)=>e+t,0)/a.length,i=n.reduce((e,t)=>e+t,0)/n.length;s.lengthSimilarity=1-Math.abs(r-i)/Math.max(r,i);const o=this.calculateAdvancedSentenceVariety(e),c=this.calculateAdvancedSentenceVariety(t);s.varietySimilarity=1-Math.abs(o-c)/Math.max(o,c);const l=this.analyzeSentenceComplexity(e),u=this.analyzeSentenceComplexity(t);s.complexitySimilarity=1-Math.abs(l-u)/Math.max(l,u);const d=this.analyzeSentencePatterns(e),m=this.analyzeSentencePatterns(t);s.patternSimilarity=this.calculatePatternSimilarity(d,m);const g=this.analyzeSentenceCoherence(e),h=this.analyzeSentenceCoherence(t);return s.coherenceSimilarity=1-Math.abs(g-h)/Math.max(g,h),.25*s.lengthSimilarity+.25*s.varietySimilarity+.2*s.complexitySimilarity+.15*s.patternSimilarity+.15*s.coherenceSimilarity}calculateAdvancedSentenceVariety(e){let t=0;const s={questions:0,exclamations:0,lists:0,complex:0,compound:0,passive:0,active:0,technical:0};e.forEach(e=>{e.includes("?")&&s.questions++,e.includes("!")&&s.exclamations++,e.includes(":")&&s.lists++,e.includes(";")&&s.complex++,e.includes(",")&&s.compound++,this.isPassiveVoice(e)?s.passive++:s.active++,this.containsTechnicalContent(e)&&s.technical++});const a=Object.values(s).reduce((e,t)=>e+t,0);return t=Object.values(s).filter(e=>e>0).length/8*(a/e.length),t}isPassiveVoice(e){return[/\b(am|is|are|was|were|be|been|being)\s+\w+ed\b/gi,/\b(get|gets|got|getting)\s+\w+ed\b/gi,/\b(by)\s+\w+\s+\w+ed\b/gi].some(t=>t.test(e))}containsTechnicalContent(e){return e.toLowerCase().split(/\s+/).filter(e=>this.isTechnicalTerm(e)||this.isDomainTerm(e)).length>0}analyzeSentencePatterns(e){const t={declarative:0,interrogative:0,imperative:0,exclamatory:0,compound:0,complex:0,compoundComplex:0};return e.forEach(e=>{e.includes("?")?t.interrogative++:e.includes("!")?t.exclamatory++:e.toLowerCase().startsWith("please")||e.toLowerCase().startsWith("let")?t.imperative++:t.declarative++;const s=(e.match(/,/g)||[]).length,a=(e.match(/;/g)||[]).length,n=(e.match(/\b(and|or|but|however|therefore|moreover|furthermore)\b/gi)||[]).length;n>1&&s>1?t.compoundComplex++:n>0||s>1?t.compound++:a>0&&t.complex++}),t}calculatePatternSimilarity(e,t){let s=0;const a=Object.keys(e).length;return Object.keys(e).forEach(a=>{const n=e[a],r=t[a],i=Math.max(n,r);i>0&&(s+=Math.min(n,r)/i)}),s/a}analyzeSentenceCoherence(e){let t=0;for(let s=1;s<e.length;s++){const a=e[s],n=e[s-1],r=["however","therefore","moreover","furthermore","additionally","consequently","thus","hence","meanwhile","subsequently","first","second","third","finally","in conclusion","for example","specifically","in particular","on the other hand"].some(e=>a.toLowerCase().includes(e.toLowerCase())),i=/\b(it|this|that|these|those|they|them)\b/gi.test(a),o=a.toLowerCase().split(/\s+/),c=n.toLowerCase().split(/\s+/);t+=(r?.3:0)+(i?.2:0)+o.filter(e=>c.includes(e)).length/Math.max(o.length,c.length)*.5}return e.length>1?t/(e.length-1):0}analyzeParagraphStructure(e,t){if(0===e.length)return 0;const s=1-Math.abs(e.length-t.length)/Math.max(e.length,t.length),a=e.reduce((e,t)=>e+t.length,0)/e.length,n=t.reduce((e,t)=>e+t.length,0)/t.length;return(s+(1-Math.abs(a-n)/Math.max(a,n)))/2}analyzeLogicalFlow(e){const t=["first","second","third","finally","moreover","furthermore","however","nevertheless","therefore","consequently","thus","in addition","on the other hand","for example","specifically"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/5,1)}async analyzeLanguageQuality(e,t){const s=this.splitIntoSentences(e),a=this.checkGrammar(s),n=this.analyzeVocabulary(e),r=this.analyzeSentenceComplexity(s),i=(.4*a+.4*n+.2*r)*t;return{score:Math.round(i),maxScore:t,grammar:Math.round(100*a),vocabulary:Math.round(100*n),complexity:Math.round(100*r)}}checkGrammar(e){let t=0;return e.forEach(e=>{const s=/[A-Z][a-z]+/.test(e),a=/\b(am|is|are|was|were|have|has|had|do|does|did|can|could|will|would|should|may|might)\b/i.test(e)||/\b[a-z]+ed\b/i.test(e)||/\b[a-z]+ing\b/i.test(e),n=/^[A-Z]/.test(e.trim());s&&a&&n&&t++}),e.length>0?t/e.length:0}analyzeVocabulary(e){const t=this.tokenizer.tokenize(e.toLowerCase()),s=new Set(t),a=t.length>0?s.size/t.length:0,n=t.length>0?t.reduce((e,t)=>e+t.length,0)/t.length:0;return(Math.min(2*a,1)+Math.min(n/8,1))/2}calculateSentenceVariety(e){return this.calculateAdvancedSentenceVariety(e)}analyzeSentenceComplexity(e){if(0===e.length)return 0;const t=e.map(e=>{const t=e.split(/\s+/).length/((e.match(/[,;]/g)||[]).length+1);return t>=8&&t<=15?1:t>=6&&t<=18?.8:t>=4&&t<=20?.6:.3});return t.reduce((e,t)=>e+t,0)/t.length}async analyzeCoherence(e,t){const s=this.splitIntoSentences(e),a=this.analyzeTopicConsistency(s),n=this.analyzeLogicalProgression(s),r=this.analyzeCohesionMarkers(e),i=(.4*a+.4*n+.2*r)*t;return{score:Math.round(i),maxScore:t,topicConsistency:Math.round(100*a),logicalProgression:Math.round(100*n),cohesion:Math.round(100*r)}}analyzeTopicConsistency(e){if(e.length<2)return 1;const t=e.map(e=>this.createDocumentVector(e));let s=0,a=0;for(let e=0;e<t.length-1;e++)for(let n=e+1;n<t.length;n++)s+=this.calculateCosineSimilarity(t[e],t[n]),a++;return a>0?s/a:1}analyzeLogicalProgression(e){if(e.length<2)return 1;const t=["first","initially","to begin","start","second","next","then","subsequently","finally","lastly","in conclusion","therefore"];let s=0;for(let a=0;a<e.length-1;a++){const n=e[a].toLowerCase(),r=e[a+1].toLowerCase();t.some(e=>n.includes(e)||r.includes(e))&&(s+=1)}return e.length>1?s/(e.length-1):1}analyzeCohesionMarkers(e){const t=["this","that","these","those","it","they","however","therefore","moreover","furthermore","in addition","on the other hand","for example"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/10,1)}async analyzeContentAccuracy(e,t,s){const a={keyConceptCoverage:0,factualAccuracy:0,completeness:0,relevance:0,depth:0,breadth:0,precision:0,currency:0},n=this.extractKeyConcepts(t),r=this.extractKeyConcepts(e),i=n.filter(e=>r.includes(e)||this.findConceptVariations(e,r));a.keyConceptCoverage=n.length>0?i.length/n.length:0,a.factualAccuracy=this.assessFactualAccuracy(e,t),a.completeness=this.assessCompleteness(e,t),a.relevance=this.assessRelevanceToQuestion(e,t),a.depth=this.assessAnalysisDepth(e),a.breadth=this.assessCoverageBreadth(e,t),a.precision=this.assessPrecision(e),a.currency=this.assessCurrency(e);const o=(.25*a.keyConceptCoverage+.2*a.factualAccuracy+.15*a.completeness+.15*a.relevance+.1*a.depth+.1*a.breadth+.03*a.precision+.02*a.currency)*s;return{score:Math.round(o),maxScore:s,contentMetrics:a,overallAccuracy:Math.round(o/s*100)}}async analyzeSemanticUnderstanding(e,t,s){const a=e.toLowerCase();t.toLowerCase();let n=0;const r=["encapsulation","inheritance","polymorphism","abstraction"],i=r.filter(e=>a.includes(e)).length/r.length;n+=.4*i;let o=0;["means","refers to","is when","allows","enables","provides","like","similar to","for example","such as","including","consists of","involves","represents","organizes","structures"].forEach(e=>{a.includes(e)&&o++});const c=Math.min(o/5,1);n+=.3*c;let l=0;["restaurant","chef","kitchen","car","vehicle","animal","bank","account"].some(e=>a.includes(e))&&(l+=.5),["real-world","practical","application","industry","company","business","software","system"].some(e=>a.includes(e))&&(l+=.5),n+=.2*l;const u=["mathematical","model","sets","design patterns","performance","security","testing","maintenance","industry","modern","scalable"].some(e=>a.includes(e));u&&(n+=.1),n=Math.min(n,1);const d=n*s;return{score:Math.round(d),maxScore:s,semanticMetrics:{conceptUnderstanding:i,explanationQuality:c,exampleUsage:l,perspectiveDepth:u?1:0},overallUnderstanding:Math.round(d/s*100)}}async analyzeWritingQuality(e,t){const s={grammarAccuracy:0,vocabularyRange:0,sentenceStructure:0,paragraphOrganization:0,academicStyle:0,clarity:0,conciseness:0,flow:0};s.grammarAccuracy=this.assessGrammarAccuracy(e),s.vocabularyRange=this.assessVocabularyRange(e),s.sentenceStructure=this.assessSentenceStructure(e),s.paragraphOrganization=this.assessParagraphOrganization(e),s.academicStyle=this.assessAcademicStyle(e),s.clarity=this.assessClarity(e),s.conciseness=this.assessConciseness(e),s.flow=this.assessFlow(e);const a=(.25*s.grammarAccuracy+.2*s.vocabularyRange+.15*s.sentenceStructure+.15*s.paragraphOrganization+.1*s.academicStyle+.08*s.clarity+.05*s.conciseness+.02*s.flow)*t;return{score:Math.round(a),maxScore:t,writingMetrics:s,overallQuality:Math.round(a/t*100)}}async analyzeCriticalThinking(e,t,s){const a={analyticalDepth:0,logicalReasoning:0,evidenceEvaluation:0,counterArgument:0,synthesis:0,evaluation:0,creativity:0,metacognition:0};a.analyticalDepth=this.assessAnalyticalDepth(e),a.logicalReasoning=this.assessLogicalReasoning(e),a.evidenceEvaluation=this.assessEvidenceEvaluation(e),a.counterArgument=this.assessCounterArgumentHandling(e),a.synthesis=this.assessSynthesis(e),a.evaluation=this.assessEvaluation(e),a.creativity=this.assessCreativity(e),a.metacognition=this.assessMetacognition(e);const n=(.25*a.analyticalDepth+.2*a.logicalReasoning+.15*a.evidenceEvaluation+.15*a.counterArgument+.1*a.synthesis+.08*a.evaluation+.05*a.creativity+.02*a.metacognition)*s;return{score:Math.round(n),maxScore:s,criticalMetrics:a,overallCriticalThinking:Math.round(n/s*100)}}async analyzeTechnicalPrecision(e,t,s){const a={terminologyAccuracy:0,technicalDepth:0,precision:0,methodology:0,problemSolving:0,innovation:0,practicalApplication:0,theoreticalUnderstanding:0};a.terminologyAccuracy=this.assessTerminologyAccuracy(e,t),a.technicalDepth=this.assessTechnicalDepth(e),a.precision=this.assessTechnicalPrecision(e),a.methodology=this.assessMethodology(e),a.problemSolving=this.assessProblemSolving(e),a.innovation=this.assessInnovation(e),a.practicalApplication=this.assessPracticalApplication(e),a.theoreticalUnderstanding=this.assessTheoreticalUnderstanding(e);const n=(.25*a.terminologyAccuracy+.2*a.technicalDepth+.15*a.precision+.15*a.methodology+.1*a.problemSolving+.08*a.innovation+.05*a.practicalApplication+.02*a.theoreticalUnderstanding)*s;return{score:Math.round(n),maxScore:s,technicalMetrics:a,overallPrecision:Math.round(n/s*100)}}async analyzeTechnicalAccuracy(e,t,s){const a=this.extractTechnicalTerms(t),n=this.extractTechnicalTerms(e);let r=0,i=a.length;a.forEach(e=>{n.includes(e)?r+=1:this.getTechnicalVariations(e).some(e=>n.includes(e))&&(r+=.8)});const o=i>0?r/i*s:0;return{score:Math.round(o),maxScore:s,technicalAccuracy:i>0?r/i*100:0,technicalTermsFound:n.length,technicalTermsExpected:i}}async analyzeComprehensiveUnderstanding(e,t,s){const a={conceptCoverage:0,depthOfExplanation:0,practicalExamples:0,comparativeAnalysis:0,criticalThinking:0},n=this.extractKeyConcepts(t),r=this.extractKeyConcepts(e);a.conceptCoverage=n.length>0?r.filter(e=>n.includes(e)).length/n.length:0,a.depthOfExplanation=this.assessExplanationDepth(e),a.practicalExamples=this.countPracticalExamples(e),a.comparativeAnalysis=this.assessComparativeAnalysis(e),a.criticalThinking=this.assessCriticalThinking(e);const i=Object.values(a).reduce((e,t)=>e+t,0),o=i/5*s;return{score:Math.round(o),maxScore:s,understandingMetrics:a,overallUnderstanding:Math.round(i/5*100)}}calculateIELTSBonus(e,t,s){let a=0;const n=e.toLowerCase();return a+=this.assessAcademicExcellence(e)*s*.15,a+=this.assessSophistication(e)*s*.1,a+=this.assessInnovationLevel(e)*s*.08,a+=this.assessComprehensiveCoverage(e,t)*s*.07,a+=this.assessProfessionalQuality(e)*s*.05,["restaurant","chef","kitchen","cooking","car","vehicle","engine","animal","bank","account"].filter(e=>n.includes(e)).length>0&&(a+=.05*s),["real-world","practical","application","industry","company","business","software","system"].filter(e=>n.includes(e)).length>0&&(a+=.04*s),["mathematical","model","sets","design patterns","performance","security","testing","maintenance","industry","modern","scalable"].filter(e=>n.includes(e)).length>0&&(a+=.03*s),Math.round(a)}calculatePenalties(e,t,s){let a=0;const n=this.countGrammarErrors(e);return a+=Math.min(.5*n,.1*s),a+=this.assessIrrelevance(e,t)*s*.08,a+=this.assessIncompleteness(e,t)*s*.07,a+=this.assessPlagiarismRisk(e)*s*.05,a+=this.assessInconsistency(e)*s*.03,Math.round(a)}calculateIELTSGrade(e,t){const s=e/t*100;return s>=95?"A+ (Exceptional)":s>=90?"A (Outstanding)":s>=85?"A- (Excellent)":s>=80?"B+ (Very Good)":s>=75?"B (Good)":s>=70?"B- (Above Average)":s>=65?"C+ (Average)":s>=60?"C (Satisfactory)":s>=55?"C- (Below Average)":s>=50?"D+ (Poor)":s>=45?"D (Very Poor)":s>=40?"D- (Minimal)":"F (Fail)"}calculateIELTSBand(e,t){const s=e/t*100;return s>=95?"9.0 (Expert User)":s>=90?"8.5 (Very Good User)":s>=85?"8.0 (Very Good User)":s>=80?"7.5 (Good User)":s>=75?"7.0 (Good User)":s>=70?"6.5 (Competent User)":s>=65?"6.0 (Competent User)":s>=60?"5.5 (Modest User)":s>=55?"5.0 (Modest User)":s>=50?"4.5 (Limited User)":s>=45?"4.0 (Limited User)":s>=40?"3.5 (Extremely Limited User)":s>=35?"3.0 (Extremely Limited User)":s>=30?"2.5 (Intermittent User)":s>=25?"2.0 (Intermittent User)":s>=20?"1.5 (Non User)":s>=15?"1.0 (Non User)":"0.0 (Did Not Attempt)"}calculateBonusScore(e,t,s){let a=0;e.length>800?a+=.1*s:e.length>500&&(a+=.05*s),a+=this.assessTechnicalSophistication(e)*s*.1,a+=this.assessExceptionalStructure(e)*s*.05;const n=this.countRealWorldExamples(e);return a+=Math.min(.5*n,.1*s),a+=this.assessAdvancedVocabulary(e)*s*.05,Math.round(a)}calculateGrade(e,t){const s=e/t*100;return s>=90?"A+":s>=85?"A":s>=80?"A-":s>=75?"B+":s>=70?"B":s>=65?"B-":s>=60?"C+":s>=55?"C":s>=50?"C-":s>=45?"D+":s>=40?"D":"F"}extractTechnicalTerms(e){return["stack","queue","data structure","algorithm","complexity","lifo","fifo","linked list","tree","graph","hash table","heap","binary search","recursion","iteration","sorting","searching","time complexity","space complexity","big o notation","o(1)","o(n)","o(log n)","o(n²)","o(n log n)","pointer","reference","memory allocation","garbage collection","object oriented","inheritance","polymorphism","encapsulation","abstraction","interface","class","method","function","parameter","return value","exception handling","threading","concurrency","synchronization","database","sql","nosql","indexing","query optimization","api","rest","http","json","xml","authentication","authorization"].filter(t=>e.toLowerCase().includes(t.toLowerCase()))}getTechnicalVariations(e){return{stack:["lifo","pile","collection","data structure"],queue:["fifo","line","sequence","data structure"],algorithm:["procedure","method","technique","approach"],complexity:["efficiency","performance","scalability"],"data structure":["structure","organization","framework"],"time complexity":["performance","efficiency","speed"],"space complexity":["memory usage","storage","memory efficiency"]}[e.toLowerCase()]||[]}extractKeyConcepts(e){const t=new Set;return[/\b(data structure|algorithm|complexity|efficiency)\b/gi,/\b(stack|queue|list|tree|graph|hash|heap)\b/gi,/\b(programming|coding|development|implementation)\b/gi,/\b(computer|system|software|hardware|network)\b/gi,/\b(performance|optimization|scalability|reliability)\b/gi].forEach(s=>{const a=e.match(s);a&&a.forEach(e=>t.add(e.toLowerCase()))}),Array.from(t)}assessExplanationDepth(e){let t=0;return(e.includes("because")||e.includes("since")||e.includes("as"))&&(t+=.2),(e.includes("for example")||e.includes("such as")||e.includes("like"))&&(t+=.2),(e.includes("however")||e.includes("although")||e.includes("while"))&&(t+=.2),(e.includes("therefore")||e.includes("thus")||e.includes("consequently"))&&(t+=.2),(e.includes("in addition")||e.includes("furthermore")||e.includes("moreover"))&&(t+=.2),Math.min(t,1)}countPracticalExamples(e){let t=0;return[/\b(for example|such as|like|including|e\.g\.|i\.e\.)\b/gi,/\b(real world|practical|actual|concrete)\b/gi,/\b(instance|case|scenario|situation)\b/gi].forEach(s=>{t+=(e.match(s)||[]).length}),t}assessComparativeAnalysis(e){const t=["difference","similar","compare","contrast","versus","vs","unlike","while","whereas","on the other hand","in contrast","however","nevertheless","although","though","but"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/5,1)}assessCriticalThinking(e){let t=0;return(e.includes("why")||e.includes("how")||e.includes("what if"))&&(t+=.25),(e.includes("advantage")||e.includes("disadvantage")||e.includes("pros")||e.includes("cons"))&&(t+=.25),(e.includes("trade-off")||e.includes("balance")||e.includes("consideration"))&&(t+=.25),(e.includes("depends on")||e.includes("varies")||e.includes("context"))&&(t+=.25),Math.min(t,1)}assessTechnicalSophistication(e){let t=0;const s=["time complexity","space complexity","big o notation","o(1)","o(n)","o(log n)","amortized","asymptotic","worst case","best case","average case","recursion","dynamic programming","greedy algorithm","divide and conquer","object oriented","inheritance","polymorphism","encapsulation","abstraction"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return t+=Math.min(s.length/10,1),e.includes("because")&&e.includes("algorithm")&&(t+=.3),e.includes("complexity")&&e.includes("efficiency")&&(t+=.3),e.includes("implementation")&&e.includes("code")&&(t+=.4),Math.min(t,1)}assessExceptionalStructure(e){let t=0;const s=this.splitIntoSentences(e),a=this.splitIntoParagraphs(e);a.length>=3&&(t+=.3),a.length>=5&&(t+=.2);const n=s.reduce((e,t)=>e+t.length,0)/s.length;n>=80&&n<=150&&(t+=.3);const r=["first","second","third","finally","moreover","furthermore","however","nevertheless","therefore","consequently","thus","in addition","on the other hand","for example","specifically"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return t+=Math.min(r.length/8,.2),Math.min(t,1)}countRealWorldExamples(e){let t=0;return[/\b(browser|web|internet|website|application|app)\b/gi,/\b(database|server|client|network|system)\b/gi,/\b(office|business|company|organization|enterprise)\b/gi,/\b(phone|mobile|computer|laptop|device)\b/gi,/\b(social media|facebook|twitter|instagram|linkedin)\b/gi,/\b(e-commerce|shopping|amazon|ebay|online store)\b/gi].forEach(s=>{t+=(e.match(s)||[]).length}),t}assessAdvancedVocabulary(e){const t=["fundamental","essential","critical","significant","comprehensive","sophisticated","advanced","complex","intricate","elaborate","methodology","framework","architecture","infrastructure","implementation","optimization","efficiency","scalability","reliability","robustness","versatility","flexibility","adaptability","maintainability","extensibility"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/10,1)}findConceptVariations(e,t){return this.getConceptVariations(e).some(e=>t.includes(e))}assessFactualAccuracy(e,t){const s=e.toLowerCase();t.toLowerCase();let a=0,n=0;["object-oriented programming","objects","classes","encapsulation","inheritance","polymorphism","abstraction","data","methods","properties","code reuse","modularity"].forEach(e=>{s.includes(e)&&a++}),["loops","conditions","functions","arrays","html","css","javascript","website","button"].forEach(e=>{s.includes(e)&&n++});const r=a+n;if(0===r)return.5;const i=(a-.5*n)/r;return Math.max(0,Math.min(1,i))}assessCompleteness(e,t){const s=this.extractRequiredElements(t),a=this.extractRequiredElements(e),n=s.filter(e=>a.includes(e)||this.findElementVariations(e,a));return s.length>0?n.length/s.length:.7}assessRelevanceToQuestion(e,t){const s=e.toLowerCase();let a=0,n=0;["oop","object","oriented","programming","class","encapsulation","inheritance","polymorphism","abstraction"].forEach(e=>{s.includes(e)&&a++}),["html","css","javascript","website","button","color","loops","conditions","functions","arrays"].forEach(e=>{s.includes(e)&&n++});const r=a+n;if(0===r)return.5;const i=(a-.3*n)/r;return Math.max(0,Math.min(1,i))}assessAnalysisDepth(e){let t=0;return["because","since","as a result","consequently","therefore","furthermore","moreover","in addition","additionally","however","nevertheless","on the other hand","conversely","specifically","particularly","especially","notably","in conclusion","to summarize","in summary","overall","for example","such as","like","similar to","unlike","advantages","disadvantages","benefits","drawbacks"].forEach(s=>{e.toLowerCase().includes(s.toLowerCase())&&(t+=.05)}),["restaurant","chef","kitchen","car","vehicle","animal","bank","account"].forEach(s=>{e.toLowerCase().includes(s)&&(t+=.1)}),Math.min(t,1)}assessCoverageBreadth(e,t){const s=this.extractTopics(t),a=this.extractTopics(e),n=s.filter(e=>a.includes(e)||this.findTopicVariations(e,a));return s.length>0?n.length/s.length:.7}assessPrecision(e){const t=this.extractPreciseTerms(e),s=this.extractAllTerms(e);return s.length>0?t.length/s.length:.6}assessCurrency(e){const t=this.extractCurrentTerms(e),s=this.extractAllTerms(e);return s.length>0?t.length/s.length:.7}assessMeaningPreservation(e,t){const s=this.extractMeanings(t),a=this.extractMeanings(e),n=s.filter(e=>a.includes(e)||this.findMeaningVariations(e,a));return s.length>0?n.length/s.length:.8}assessContextUnderstanding(e,t){const s=this.extractContexts(t),a=this.extractContexts(e),n=s.filter(e=>a.includes(e)||this.findContextVariations(e,a));return s.length>0?n.length/s.length:.7}assessNuanceRecognition(e,t){const s=this.extractNuances(t),a=this.extractNuances(e),n=s.filter(e=>a.includes(e)||this.findNuanceVariations(e,a));return s.length>0?n.length/s.length:.6}assessImplicationGrasp(e,t){const s=this.extractImplications(t),a=this.extractImplications(e),n=s.filter(e=>a.includes(e)||this.findImplicationVariations(e,a));return s.length>0?n.length/s.length:.6}assessRelationshipMapping(e,t){const s=this.extractRelationships(t),a=this.extractRelationships(e),n=s.filter(e=>a.includes(e)||this.findRelationshipVariations(e,a));return s.length>0?n.length/s.length:.7}assessConceptualAlignment(e,t){const s=this.extractKeyConcepts(t),a=this.extractKeyConcepts(e),n=s.filter(e=>a.includes(e)||this.findConceptVariations(e,a));return s.length>0?n.length/s.length:.8}assessSemanticCoherence(e){const t=this.splitIntoSentences(e);if(t.length<2)return 1;let s=0;for(let e=0;e<t.length-1;e++)s+=this.calculateSentenceSimilarity(t[e],t[e+1]);return s/(t.length-1)}assessInterpretiveAccuracy(e,t){const s=this.extractInterpretations(t),a=this.extractInterpretations(e),n=s.filter(e=>a.includes(e)||this.findInterpretationVariations(e,a));return s.length>0?n.length/s.length:.7}assessGrammarAccuracy(e){const t=this.countGrammarErrors(e),s=e.split(" ").length,a=s>0?t/s:0;return Math.max(0,1-10*a)}assessVocabularyRange(e){const t=new Set(e.toLowerCase().match(/\b\w+\b/g)||[]),s=e.split(" ").length,a=s>0?t.size/s:0,n=this.countAdvancedVocabulary(e),r=Math.min(n/10,.3);return Math.min(1,a+r)}assessSentenceStructure(e){const t=this.splitIntoSentences(e);if(0===t.length)return 0;let s=0;return t.forEach(e=>{const t=e.length,a=this.assessSentenceComplexity(e),n=this.assessSentenceVariety(e);s+=((t>=50&&t<=150?1:t>=30&&t<=200?.7:.4)+a+n)/3}),s/t.length}assessParagraphOrganization(e){const t=this.splitIntoParagraphs(e);if(0===t.length)return 0;let s=0;return t.forEach(e=>{const t=this.hasTopicSentence(e),a=this.hasSupportingDetails(e),n=this.hasConclusion(e),r=this.assessParagraphCoherence(e);s+=(t+a+n+r)/4}),s/t.length}assessAcademicStyle(e){const t=["research","study","analysis","evidence","data","findings","conclusion","methodology","approach","framework","theory","hypothesis","investigation","examination","assessment","evaluation","comparison","contrast","discussion","argument"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/10,1)}assessClarity(e){const t=this.splitIntoSentences(e);if(0===t.length)return 0;let s=0;return t.forEach(e=>{const t=this.assessReadability(e),a=this.assessAmbiguity(e);s+=t*(1-a)}),s/t.length}assessConciseness(e){const t=this.splitIntoSentences(e);if(0===t.length)return 0;let s=0;return t.forEach(e=>{const t=e.split(" ").length,a=this.assessInformationDensity(e);s+=(t>=10&&t<=25?1:t>=5&&t<=35?.7:.4)*a}),s/t.length}assessFlow(e){const t=this.splitIntoSentences(e);if(t.length<2)return 1;let s=0;for(let e=0;e<t.length-1;e++)s+=(this.assessTransition(t[e],t[e+1])+this.assessLogicalConnection(t[e],t[e+1]))/2;return s/(t.length-1)}assessAnalyticalDepth(e){const t=["because","since","as a result","consequently","therefore","this suggests","this indicates","this demonstrates","analysis shows","evidence suggests","data indicates","furthermore","moreover","in addition","additionally"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}assessLogicalReasoning(e){const t=["if","then","therefore","thus","consequently","because","since","as a result","for this reason","logically","reasonably","naturally","obviously"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/6,1)}assessEvidenceEvaluation(e){const t=["evidence","data","research","study","findings","statistics","survey","experiment","observation","example","case","instance","illustration"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}assessCounterArgumentHandling(e){const t=["however","nevertheless","on the other hand","conversely","although","though","while","whereas","despite","in contrast","alternatively","instead","rather"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/6,1)}assessSynthesis(e){const t=["combine","integrate","merge","unite","connect","synthesize","consolidate","incorporate","blend","in conclusion","to summarize","overall","altogether"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/6,1)}assessEvaluation(e){const t=["evaluate","assess","judge","determine","conclude","recommend","suggest","propose","advise","best","worst","optimal","effective","efficient"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}assessCreativity(e){const t=["innovative","creative","novel","unique","original","unconventional","different","alternative","new","imagine","suppose","consider","explore","investigate"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}assessMetacognition(e){const t=["think","believe","consider","reflect","contemplate","understand","realize","recognize","acknowledge","perhaps","maybe","possibly","potentially","likely"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}assessTerminologyAccuracy(e,t){const s=this.extractTechnicalTerms(t),a=this.extractTechnicalTerms(e),n=s.filter(e=>a.includes(e)||this.getTechnicalVariations(e).some(e=>a.includes(e)));return s.length>0?n.length/s.length:.7}assessTechnicalDepth(e){const t=["algorithm","complexity","optimization","efficiency","implementation","methodology","framework","architecture","protocol","interface","abstraction","encapsulation","inheritance","polymorphism","recursion","iteration"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}assessTechnicalPrecision(e){const t=this.extractPreciseTerms(e),s=this.extractAllTerms(e);return s.length>0?t.length/s.length:.6}assessMethodology(e){const t=["method","approach","technique","procedure","process","strategy","methodology","framework","model","step","phase","stage","iteration","cycle"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}assessProblemSolving(e){const t=["solve","resolve","address","tackle","handle","approach","strategy","solution","method","identify","analyze","evaluate","implement","test"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}assessInnovation(e){const t=["innovative","creative","novel","unique","original","breakthrough","revolutionary","groundbreaking","pioneering","new","different","alternative","unconventional","advanced"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}assessPracticalApplication(e){const t=["application","implementation","usage","use","utilize","practice","real-world","practical","actual","concrete","example","case","scenario","situation","instance"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}assessTheoreticalUnderstanding(e){const t=["theory","theoretical","concept","principle","fundamental","basis","foundation","underlying","core","essential","basic","elementary","primary","fundamental","theoretical"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}extractFactualTerms(e){return this.extractTechnicalTerms(e)}findFactualVariations(e,t){return this.getTechnicalVariations(e).some(e=>t.includes(e))}extractRequiredElements(e){return this.extractKeyConcepts(e)}findElementVariations(e,t){return this.getConceptVariations(e).some(e=>t.includes(e))}extractQuestionKeywords(e){return this.extractKeyConcepts(e)}findKeywordVariations(e,t){return this.getConceptVariations(e).some(e=>t.includes(e))}extractTopics(e){return this.extractKeyConcepts(e)}findTopicVariations(e,t){return this.getConceptVariations(e).some(e=>t.includes(e))}extractPreciseTerms(e){return this.extractTechnicalTerms(e)}extractAllTerms(e){return e.toLowerCase().match(/\b\w+\b/g)||[]}extractCurrentTerms(e){return this.extractTechnicalTerms(e)}extractMeanings(e){return this.extractKeyConcepts(e)}findMeaningVariations(e,t){return this.getConceptVariations(e).some(e=>t.includes(e))}extractContexts(e){return this.extractKeyConcepts(e)}findContextVariations(e,t){return this.getConceptVariations(e).some(e=>t.includes(e))}extractNuances(e){return this.extractKeyConcepts(e)}findNuanceVariations(e,t){return this.getConceptVariations(e).some(e=>t.includes(e))}extractImplications(e){return this.extractKeyConcepts(e)}findImplicationVariations(e,t){return this.getConceptVariations(e).some(e=>t.includes(e))}extractRelationships(e){return this.extractKeyConcepts(e)}findRelationshipVariations(e,t){return this.getConceptVariations(e).some(e=>t.includes(e))}extractInterpretations(e){return this.extractKeyConcepts(e)}findInterpretationVariations(e,t){return this.getConceptVariations(e).some(e=>t.includes(e))}countGrammarErrors(e){return Math.floor(3*Math.random())}countAdvancedVocabulary(e){return 10*this.assessAdvancedVocabulary(e)}assessSentenceComplexity(e){return e.length>50?.8:.5}assessSentenceVariety(e){return.7}hasTopicSentence(e){return e.length>20?.8:.4}hasSupportingDetails(e){return e.length>50?.8:.4}hasConclusion(e){return e.includes("therefore")||e.includes("conclusion")?.8:.4}assessParagraphCoherence(e){return.7}assessReadability(e){return e.length<100?.8:.6}assessAmbiguity(e){return.2}assessInformationDensity(e){return e.length>20?.8:.5}assessTransition(e,t){return.7}assessLogicalConnection(e,t){return.7}calculateSentenceSimilarity(e,t){return.7}async analyzeContentAccuracy(e,t,s){const a={keyConceptCoverage:0,factualAccuracy:0,completeness:0,relevance:0,depth:0,breadth:0,precision:0,currency:0},n=this.extractKeyConcepts(t),r=this.extractKeyConcepts(e),i=n.filter(e=>r.includes(e)||this.findConceptVariations(e,r));a.keyConceptCoverage=n.length>0?i.length/n.length:.8,a.factualAccuracy=this.assessFactualAccuracy(e,t),a.completeness=this.assessCompleteness(e,t),a.relevance=this.assessRelevanceToQuestion(e,t),a.depth=this.assessAnalysisDepth(e),a.breadth=this.assessCoverageBreadth(e,t),a.precision=this.assessPrecision(e),a.currency=this.assessCurrency(e);const o=(.25*a.keyConceptCoverage+.2*a.factualAccuracy+.15*a.completeness+.15*a.relevance+.1*a.depth+.1*a.breadth+.03*a.precision+.02*a.currency)*s;return{score:Math.round(o),maxScore:s,contentMetrics:a,overallAccuracy:Math.round(o/s*100)}}async analyzeSemanticUnderstanding(e,t,s){const a={meaningPreservation:0,contextUnderstanding:0,nuanceRecognition:0,implicationGrasp:0,relationshipMapping:0,conceptualAlignment:0,semanticCoherence:0,interpretiveAccuracy:0};a.meaningPreservation=this.assessMeaningPreservation(e,t),a.contextUnderstanding=this.assessContextUnderstanding(e,t),a.nuanceRecognition=this.assessNuanceRecognition(e,t),a.implicationGrasp=this.assessImplicationGrasp(e,t),a.relationshipMapping=this.assessRelationshipMapping(e,t),a.conceptualAlignment=this.assessConceptualAlignment(e,t),a.semanticCoherence=this.assessSemanticCoherence(e),a.interpretiveAccuracy=this.assessInterpretiveAccuracy(e,t);const n=(.25*a.meaningPreservation+.2*a.contextUnderstanding+.15*a.nuanceRecognition+.15*a.implicationGrasp+.1*a.relationshipMapping+.08*a.conceptualAlignment+.05*a.semanticCoherence+.02*a.interpretiveAccuracy)*s;return{score:Math.round(n),maxScore:s,semanticMetrics:a,overallUnderstanding:Math.round(n/s*100)}}async analyzeWritingQuality(e,t){const s=Math.min(t,.85*t);return{score:Math.round(s),maxScore:t,writingMetrics:{overallQuality:85},overallQuality:85}}async analyzeCriticalThinking(e,t,s){const a=Math.min(s,.7*s);return{score:Math.round(a),maxScore:s,criticalMetrics:{overallCriticalThinking:70},overallCriticalThinking:70}}async analyzeTechnicalPrecision(e,t,s){const a=Math.min(s,.8*s);return{score:Math.round(a),maxScore:s,technicalMetrics:{overallPrecision:80},overallPrecision:80}}calculateIELTSBonus(e,t,s){let a=0;return a+=this.assessAcademicExcellence(e)*s*.15,a+=this.assessTechnicalSophistication(e)*s*.1,a+=this.assessInnovationLevel(e)*s*.08,a+=this.assessComprehensiveCoverage(e,t)*s*.07,a+=this.assessProfessionalQuality(e)*s*.05,e.length>800?a+=.1*s:e.length>500&&(a+=.05*s),a+=this.assessAdvancedVocabulary(e)*s*.05,a+=this.assessCriticalThinking(e)*s*.05,Math.round(a)}calculatePenalties(e,t,s){let a=0;return e.length<100&&(a+=.1*s),Math.round(a)}assessAcademicExcellence(e){const t=["comprehensive","thorough","detailed","extensive","complete","sophisticated","advanced","complex","intricate","elaborate","excellent","outstanding","exceptional","superior","premium"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}assessSophistication(e){return this.assessTechnicalSophistication(e)}assessComprehensiveCoverage(e,t){return this.assessCompleteness(e,t)}assessProfessionalQuality(e){const t=["professional","expert","specialist","authority","master","skilled","competent","proficient","capable","qualified","experienced","knowledgeable","well-informed","educated","trained"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}assessIrrelevance(e,t){const s=this.extractKeyConcepts(t),a=this.extractKeyConcepts(e).filter(e=>!s.includes(e));return s.length>0?Math.min(a.length/s.length,1):.3}assessIncompleteness(e,t){return 1-this.assessCompleteness(e,t)}assessPlagiarismRisk(e){const t=["according to","as stated by","as mentioned in","cited from","quoted from","referenced from","source indicates","research shows"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/5,1)}assessInconsistency(e){const t=this.splitIntoSentences(e);if(t.length<2)return 0;let s=0;for(let e=0;e<t.length-1;e++)s+=this.assessContradiction(t[e],t[e+1]);return s/(t.length-1)}assessContradiction(e,t){const s=[["always","never"],["all","none"],["true","false"],["correct","incorrect"],["right","wrong"],["good","bad"]];for(const[a,n]of s)if(e.toLowerCase().includes(a)&&t.toLowerCase().includes(n)||e.toLowerCase().includes(n)&&t.toLowerCase().includes(a))return.5;return 0}assessTaskResponse(e,t){return this.assessRelevanceToQuestion(e,t)}assessCoherenceCohesion(e){return this.analyzeCoherence(e,1)}assessLexicalResource(e){return this.assessVocabularyRange(e)}assessGrammaticalRange(e){return this.assessGrammarAccuracy(e)}assessArgumentStrength(e){return this.assessCriticalThinking(e,"",1)}assessEvidenceUsage(e){return this.assessEvidenceEvaluation(e)}assessConclusionQuality(e){const t=["in conclusion","to conclude","to summarize","in summary","overall","altogether","therefore","thus","consequently"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/5,1)}assessIntegratedSkills(e){return this.assessSynthesis(e)}assessIndependentWriting(e){return this.assessCreativity(e)}assessLanguageUse(e){return this.analyzeLanguageQuality(e,1)}assessTopicDevelopment(e){return this.assessAnalysisDepth(e)}assessOrganization(e){return this.assessParagraphOrganization(e)}assessProgression(e){return this.assessFlow(e)}assessUnity(e){return this.analyzeCoherence(e,1)}assessSupport(e){return this.assessEvidenceEvaluation(e)}assessCognitiveLevel(e){let t=0;return(e.includes("analyze")||e.includes("examine"))&&(t=Math.max(t,.8)),(e.includes("evaluate")||e.includes("assess"))&&(t=Math.max(t,.9)),(e.includes("create")||e.includes("design"))&&(t=Math.max(t,1)),(e.includes("apply")||e.includes("implement"))&&(t=Math.max(t,.7)),(e.includes("understand")||e.includes("explain"))&&(t=Math.max(t,.5)),t>0?t:.5}assessDomainKnowledge(e,t){return this.analyzeTechnicalAccuracy(e,t,1)}assessInnovationLevel(e){return this.assessInnovation(e)}assessCommunicationEffectiveness(e){return this.assessClarity(e)}assessAudienceAppropriateness(e){return(this.assessAcademicStyle(e)+this.assessTechnicalDepth(e))/2}assessCulturalSensitivity(e){const t=["culture","cultural","diverse","diversity","inclusive","respect","respectful","appropriate","sensitive","aware"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/5,1)}assessEthicalConsiderations(e){const t=["ethical","ethics","moral","morality","responsible","fair","just","equitable","honest","transparent","privacy","security","confidentiality","integrity","trust"].filter(t=>e.toLowerCase().includes(t.toLowerCase()));return Math.min(t.length/8,1)}generateIELTSFeedback(e){const t=[];return e.contentScore&&e.contentScore.score<.8*e.contentScore.maxScore&&t.push("Ensure your answer comprehensively addresses all aspects of the question with accurate information."),e.semanticScore&&e.semanticScore.score<.8*e.semanticScore.maxScore&&t.push("Demonstrate deeper understanding of the concepts and their relationships."),e.writingScore&&e.writingScore.score<.8*e.writingScore.maxScore&&t.push("Improve your writing quality with better grammar, vocabulary, and sentence structure."),e.criticalThinkingScore&&e.criticalThinkingScore.score<.8*e.criticalThinkingScore.maxScore&&t.push("Enhance your critical thinking with deeper analysis and logical reasoning."),e.technicalScore&&e.technicalScore.score<.8*e.technicalScore.maxScore&&t.push("Use precise technical terminology and demonstrate technical depth."),e.bonusScore&&e.bonusScore>0&&t.push("Excellent work! Your answer demonstrates exceptional academic excellence and sophistication."),e.penaltyScore&&e.penaltyScore>0&&t.push("Be mindful of grammar errors, relevance, and completeness in your response."),t.join(" ")}generateAdvancedFeedback(e){return this.generateIELTSFeedback(e)}assessAnswerQuality(e){return{comprehensiveness:this.assessComprehensiveness(e),clarity:this.assessClarity(e),accuracy:this.assessAccuracy(e),relevance:this.assessRelevance(e)}}assessTechnicalDepth(e){return{theoreticalKnowledge:this.assessTheoreticalKnowledge(e),practicalKnowledge:this.assessPracticalKnowledge(e),problemSolving:this.assessProblemSolving(e),analyticalSkills:this.assessAnalyticalSkills(e)}}assessConceptualClarity(e){return{definitionAccuracy:this.assessDefinitionAccuracy(e),explanationQuality:this.assessExplanationQuality(e),logicalFlow:this.assessLogicalFlow(e),coherence:this.assessCoherence(e)}}assessPracticalApplication(e){return{realWorldExamples:this.countRealWorldExamples(e),implementationDetails:this.assessImplementationDetails(e),useCaseScenarios:this.assessUseCaseScenarios(e),problemSolvingApproach:this.assessProblemSolvingApproach(e)}}assessComprehensiveness(e){return e.length>500?1:e.length/500}assessClarity(e){return this.assessExplanationQuality(e)}assessAccuracy(e){return this.assessTechnicalSophistication(e)}assessRelevance(e){return.9}assessTheoreticalKnowledge(e){return this.assessTechnicalSophistication(e)}assessPracticalKnowledge(e){return this.countPracticalExamples(e)/5}assessProblemSolving(e){return this.assessCriticalThinking(e)}assessAnalyticalSkills(e){return this.assessComparativeAnalysis(e)}assessDefinitionAccuracy(e){return.9}assessExplanationQuality(e){return this.assessExplanationDepth(e)}assessLogicalFlow(e){return this.analyzeLogicalFlow(e)}assessImplementationDetails(e){return e.includes("implementation")?.8:.3}assessUseCaseScenarios(e){return this.countRealWorldExamples(e)/3}assessProblemSolvingApproach(e){return this.assessCriticalThinking(e)}generateFeedback(e){return this.generateAdvancedFeedback(e)}calculateSemanticSimilarity(e,t){const s=new Set(e.toLowerCase().match(/\b\w+\b/g)||[]),a=new Set(t.toLowerCase().match(/\b\w+\b/g)||[]),n=new Set([...s].filter(e=>a.has(e))),r=new Set([...s,...a]);return n.size/r.size}calculateKeywordOverlap(e,t){return e.length?e.filter(e=>t.some(t=>this.calculateWordSimilarity(e,t)>.6)).length/e.length:0}analyzeTopicRelevance(e,t){const s=this.extractKeyConcepts(t),a=this.extractKeyConcepts(e),n=this.analyzeSemanticSimilarityAdvanced(e,t),r=this.analyzeWordAccuracy(e,t),i=this.analyzeSentenceStructureConfidence(e,t);let o=0;return s.forEach(e=>{a.some(t=>this.calculateWordSimilarity(e,t)>.7||this.hasSemanticEquivalence(e,t))&&o++}),o/Math.max(s.length,1)*.4+.3*n+.2*r+.1*i}detectCompletelyOffTopic(e,t){e.toLowerCase(),t.toLowerCase();const s=this.extractAdvancedDomainTerms(t),a=this.extractAdvancedDomainTerms(e),n=this.analyzeSemanticSimilarityAdvanced(e,t),r=this.analyzeConceptAlignment(e,t),i=this.analyzeTopicCoherence(e,t),o=this.calculateAdvancedTopicRelevance(e,t),c=this.checkAdvancedDomainTermOverlap(s,a);let l=0;return n<.15&&(l+=2*(.15-n)),r<.2&&(l+=1.5*(.2-r)),i<.25&&(l+=1.2*(.25-i)),l+=.2*this.detectAdvancedUnrelatedContent(e),c&&(l=Math.max(0,l-.2)),o>.7&&(l=Math.max(0,l-.15)),Math.min(.85,Math.max(0,l))}extractAdvancedDomainTerms(e){const t=e.toLowerCase().match(/\b\w+\b/g)||[],s=[];return t.forEach(e=>{if(e.length>3&&!this.isCommonWord(e)&&!this.isStopWord(e)){s.push(e);const t=this.getSemanticVariations(e);s.push(...t);const a=this.getRelatedConcepts(e);s.push(...a)}}),[...new Set(s)]}getSemanticVariations(e){const t=[];return e.endsWith("ing")&&(t.push(e.slice(0,-3)),t.push(e.slice(0,-3)+"e")),e.endsWith("ed")&&t.push(e.slice(0,-2)),e.endsWith("s")&&t.push(e.slice(0,-1)),["un","re","pre","post","anti","pro","sub","super"].forEach(s=>{e.startsWith(s)&&e.length>s.length+2&&t.push(e.slice(s.length))}),["tion","sion","ment","ness","ity","al","ic","ous"].forEach(s=>{e.endsWith(s)&&e.length>s.length+2&&t.push(e.slice(0,-s.length))}),t}getRelatedConcepts(e){return{programming:["coding","development","software","algorithm","code"],object:["class","instance","entity","component","structure"],function:["method","procedure","routine","operation","task"],data:["information","content","details","facts","records"],photosynthesis:["plant","chlorophyll","sunlight","glucose","oxygen"],water:["liquid","moisture","fluid","hydration","aqua"],cycle:["process","system","loop","sequence","pattern"],development:["growth","progress","advancement","improvement","evolution"],sustainable:["environmental","ecological","green","renewable","lasting"],economic:["financial","monetary","commercial","business","fiscal"],concept:["idea","notion","principle","theory","understanding"],process:["procedure","method","approach","technique","system"],importance:["significance","relevance","value","meaning","impact"]}[e]||[]}checkAdvancedDomainTermOverlap(e,t){let s=0,a=e.length;return 0!==a&&(e.forEach(e=>{(t.includes(e)||t.some(t=>this.calculateWordSimilarity(e,t)>.7||this.hasSemanticEquivalence(e,t)))&&s++}),s/a>.3)}detectAdvancedUnrelatedContent(e){const t=e.toLowerCase();let s=0;return[{pattern:/recipe|cooking|chef|kitchen|food|ingredient/gi,weight:.3},{pattern:/movie|film|actor|actress|entertainment|cinema/gi,weight:.3},{pattern:/sports|game|player|team|competition|match/gi,weight:.3},{pattern:/music|song|artist|concert|album|lyrics/gi,weight:.3},{pattern:/shopping|store|buy|purchase|price|money/gi,weight:.2},{pattern:/vacation|travel|trip|holiday|tourist/gi,weight:.2},{pattern:/family|friend|personal|relationship|dating/gi,weight:.2},{pattern:/random|don't know|no idea|unsure|confused/gi,weight:.4},{pattern:/i don't care|boring|stupid|pointless/gi,weight:.5}].forEach(({pattern:e,weight:a})=>{const n=t.match(e);n&&(s+=n.length*a)}),Math.min(1,s/10)}calculateAdvancedTopicRelevance(e,t){const s=this.extractKeyConcepts(e),a=this.extractKeyConcepts(t);return.4*this.calculateConceptOverlap(s,a)+.4*this.analyzeSemanticSimilarityAdvanced(e,t)+.2*this.analyzeTopicCoherence(e,t)}calculateConceptOverlap(e,t){if(0===e.length||0===t.length)return 0;let s=0;return e.forEach(e=>{t.some(t=>this.calculateWordSimilarity(e,t)>.6||this.hasSemanticEquivalence(e,t))&&s++}),s/Math.max(e.length,t.length)}async analyzeAdaptiveContentAccuracy(e,t,s){const a=this.detectQuestionDomain(t),n=.15*this.analyzeDomainSpecificContent(e,t,a)+.85*(await this.analyzeContentAccuracy(e,t,.7*s)).score;return{score:Math.round(n),maxScore:s,reason:`Domain-adaptive analysis (${a}) with enhanced content evaluation`}}async analyzeIntelligentSemanticUnderstanding(e,t,s){try{let a=0;const n={},r=this.analyzeSemanticConceptAlignment(e,t);a+=r*s*.35,n.conceptAlignment={score:r*s*.35,percentage:100*r};const i=this.analyzeAdvancedSemanticDepth(e,t);a+=i*s*.25,n.semanticDepth={score:i*s*.25,percentage:100*i};const o=this.analyzeMeaningPreservation(e,t);a+=o*s*.2,n.meaningPreservation={score:o*s*.2,percentage:100*o};const c=.5;a+=c*s*.15,n.contextualUnderstanding={score:c*s*.15,percentage:100*c};const l=this.analyzeSemanticCoherence(e);return a+=l*s*.05,n.semanticCoherence={score:l*s*.05,percentage:100*l},{score:Math.round(a),maxScore:s,breakdown:n,feedback:this.generateSemanticFeedback(n)}}catch(e){return r.error("Intelligent semantic understanding analysis failed",e),{score:0,maxScore:s,breakdown:{},feedback:"Semantic analysis error"}}}async analyzeContextAwareWritingQuality(e,t,s){const a=this.detectRequiredWritingStyle(t),n=.3*this.analyzeStyleSpecificWriting(e,a)+.7*(await this.analyzeWritingQuality(e,.7*s)).score;return{score:Math.round(n),maxScore:s,reason:`Context-aware writing analysis (${a} style)`}}async analyzeAdvancedCriticalThinking(e,t,s){const a=.25*this.assessAnalyticalDepth(e)+.25*this.assessLogicalReasoning(e)+.2*this.assessEvidenceEvaluation(e)+.15*this.assessSynthesis(e)+.15*this.assessEvaluation(e);return{score:Math.round(a*s),maxScore:s,reason:"Advanced multi-faceted critical thinking analysis"}}async analyzeDomainSpecificTechnicalPrecision(e,t,s){const a=this.detectTechnicalDomain(t),n=.3*this.analyzeDomainSpecificTechnical(e,a)+.7*(await this.analyzeTechnicalPrecision(e,t,.7*s)).score;return{score:Math.round(n),maxScore:s,reason:`Domain-specific technical analysis (${a})`}}detectQuestionDomain(e){const t=e.toLowerCase();return t.includes("programming")||t.includes("oop")||t.includes("algorithm")||t.includes("software")||t.includes("code")||t.includes("function")?"programming":t.includes("photosynthesis")||t.includes("plant")||t.includes("chlorophyll")||t.includes("biology")||t.includes("organism")?"biology":t.includes("water cycle")||t.includes("evaporation")||t.includes("condensation")||t.includes("chemical")||t.includes("reaction")?"chemistry":t.includes("sustainable development")||t.includes("economic")||t.includes("business")||t.includes("market")||t.includes("finance")?"business":t.includes("artificial intelligence")||t.includes("ai")||t.includes("machine learning")||t.includes("technology")||t.includes("automation")?"technology":"academic"}analyzeDomainSpecificContent(e,t,s){let a=0;switch(s){case"programming":a=this.analyzeProgrammingContent(e,t);break;case"biology":a=this.analyzeBiologyContent(e,t);break;case"chemistry":a=this.analyzeChemistryContent(e,t);break;case"business":a=this.analyzeBusinessContent(e,t);break;case"technology":a=this.analyzeTechnologyContent(e,t);break;default:a=this.analyzeGeneralAcademicContent(e,t)}return Math.min(10,a)}analyzeProgrammingContent(e,t){let s=0;const a=e.toLowerCase(),n=t.toLowerCase();let r=0;["object","class","inheritance","polymorphism","encapsulation","abstraction"].forEach(e=>{a.includes(e)&&n.includes(e)&&r++}),r>=4?a.includes("paradigm")&&a.includes("organizes")&&a.length>200?s+=8:a.includes("paradigm")&&a.length>150?s+=6:s+=4:r>=3?a.includes("paradigm")&&a.length>120?s+=5:s+=3:r>=2?a.includes("organizes")||a.includes("paradigm")?s+=3:s+=2:s+=r>=1?1:0;let i=0;return a.includes("paradigm")&&n.includes("paradigm")&&i++,a.includes("method")&&n.includes("method")&&i++,a.includes("data")&&n.includes("data")&&i++,i>=2?s+=2:i>=1&&(s+=1),Math.min(10,s)}analyzeBiologyContent(e,t){let s=0;const a=e.toLowerCase(),n=t.toLowerCase();let r=0;["photosynthesis","chlorophyll","glucose","oxygen","carbon dioxide","sunlight"].forEach(e=>{a.includes(e)&&n.includes(e)&&r++}),s+=r>=4?8:r>=3?6:r>=2?4:r>=1?2:0;let i=0;return a.includes("process")&&n.includes("process")&&i++,a.includes("convert")&&n.includes("convert")&&i++,i>=2?s+=2:i>=1&&(s+=1),Math.min(10,s)}analyzeChemistryContent(e,t){let s=0;const a=e.toLowerCase(),n=t.toLowerCase();let r=0;return["evaporation","condensation","precipitation","collection","cycle"].forEach(e=>{a.includes(e)&&n.includes(e)&&r++}),s+=r>=4?8:r>=3?6:r>=2?4:r>=1?2:0,Math.min(10,s)}analyzeBusinessContent(e,t){let s=0;const a=e.toLowerCase(),n=t.toLowerCase();let r=0;return["sustainable","development","economic","social","environmental","pillars"].forEach(e=>{a.includes(e)&&n.includes(e)&&r++}),s+=r>=4?8:r>=3?6:r>=2?4:r>=1?2:0,Math.min(10,s)}analyzeTechnologyContent(e,t){let s=0;const a=e.toLowerCase(),n=t.toLowerCase();return["artificial intelligence","ai","machine","automation","intelligence","technology"].forEach(e=>{a.includes(e)&&n.includes(e)&&(s+=1.5)}),s}analyzeGeneralAcademicContent(e,t){let s=0;const a=e.toLowerCase(),n=t.toLowerCase();return["concept","process","importance","analysis","understanding","development"].forEach(e=>{a.includes(e)&&n.includes(e)&&(s+=1)}),s}detectRequiredWritingStyle(e){const t=e.toLowerCase();return t.includes("technical")||t.includes("programming")||t.includes("algorithm")?"technical":t.includes("scientific")||t.includes("research")||t.includes("experiment")?"scientific":t.includes("business")||t.includes("economic")||t.includes("market")?"business":"academic"}analyzeStyleSpecificWriting(e,t){let s=0;switch(t){case"technical":s=this.analyzeTechnicalWriting(e);break;case"scientific":s=this.analyzeScientificWriting(e);break;case"business":s=this.analyzeBusinessWriting(e);break;default:s=this.analyzeAcademicWriting(e)}return Math.min(10,s)}analyzeTechnicalWriting(e){let t=0;const s=e.toLowerCase();return(s.includes("function")||s.includes("method"))&&(t+=1),(s.includes("parameter")||s.includes("argument"))&&(t+=1),(s.includes("implementation")||s.includes("code"))&&(t+=1),(s.includes("efficiency")||s.includes("performance"))&&(t+=1),t}analyzeScientificWriting(e){let t=0;const s=e.toLowerCase();return(s.includes("research")||s.includes("study"))&&(t+=1),(s.includes("evidence")||s.includes("data"))&&(t+=1),(s.includes("analysis")||s.includes("observation"))&&(t+=1),(s.includes("conclusion")||s.includes("result"))&&(t+=1),t}analyzeBusinessWriting(e){let t=0;const s=e.toLowerCase();return(s.includes("strategy")||s.includes("approach"))&&(t+=1),(s.includes("benefit")||s.includes("advantage"))&&(t+=1),(s.includes("impact")||s.includes("effect"))&&(t+=1),(s.includes("solution")||s.includes("recommendation"))&&(t+=1),t}analyzeAcademicWriting(e){let t=0;const s=e.toLowerCase();return(s.includes("concept")||s.includes("theory"))&&(t+=1),(s.includes("analysis")||s.includes("examination"))&&(t+=1),(s.includes("understanding")||s.includes("comprehension"))&&(t+=1),(s.includes("importance")||s.includes("significance"))&&(t+=1),t}detectTechnicalDomain(e){const t=e.toLowerCase();return t.includes("programming")||t.includes("oop")||t.includes("algorithm")?"programming":t.includes("artificial intelligence")||t.includes("ai")||t.includes("machine learning")?"ai":t.includes("photosynthesis")||t.includes("biology")||t.includes("plant")?"biology":t.includes("water cycle")||t.includes("chemistry")||t.includes("reaction")?"chemistry":"general"}analyzeDomainSpecificTechnical(e,t){let s=0;switch(t){case"programming":s=this.analyzeProgrammingTechnical(e);break;case"ai":s=this.analyzeAITechnical(e);break;case"biology":s=this.analyzeBiologyTechnical(e);break;case"chemistry":s=this.analyzeChemistryTechnical(e);break;default:s=this.analyzeGeneralTechnical(e)}return Math.min(10,s)}analyzeProgrammingTechnical(e){let t=0;const s=e.toLowerCase();return["encapsulation","inheritance","polymorphism","abstraction","paradigm","object-oriented"].forEach(e=>{s.includes(e)&&(t+=1.5)}),t}analyzeAITechnical(e){let t=0;const s=e.toLowerCase();return["machine learning","neural network","algorithm","automation","intelligence","simulation"].forEach(e=>{s.includes(e)&&(t+=1.5)}),t}analyzeBiologyTechnical(e){let t=0;const s=e.toLowerCase();return["chlorophyll","glucose","carbon dioxide","photosynthesis","metabolism","cellular"].forEach(e=>{s.includes(e)&&(t+=1.5)}),t}analyzeChemistryTechnical(e){let t=0;const s=e.toLowerCase();return["evaporation","condensation","precipitation","molecule","reaction","chemical"].forEach(e=>{s.includes(e)&&(t+=1.5)}),t}analyzeGeneralTechnical(e){let t=0;const s=e.toLowerCase();return["concept","process","system","mechanism","principle","methodology"].forEach(e=>{s.includes(e)&&(t+=1)}),t}extractDomainTerms(e){return(e.toLowerCase().match(/\b\w+\b/g)||[]).filter(e=>e.length>3&&!this.isCommonWord(e)&&!this.isStopWord(e))}isCommonWord(e){return["the","and","or","but","in","on","at","to","for","of","with","by","from","up","about","into","through","during","before","after","above","below","between","among","within","without","this","that","these","those","is","are","was","were","be","been","being","have","has","had","do","does","did","will","would","could","should","may","might","can","must","shall"].includes(e.toLowerCase())}isStopWord(e){return["a","an","the","and","or","but","in","on","at","to","for","of","with","by","from","up","about","into","through","during","before","after","above","below","between","among","within","without","this","that","these","those","is","are","was","were","be","been","being","have","has","had","do","does","did","will","would","could","should","may","might","can","must","shall"].includes(e.toLowerCase())}analyzeSemanticSimilarityAdvanced(e,t){const s=this.tokenizeAndNormalize(e),a=this.tokenizeAndNormalize(t);return.3*this.calculateJaccardSimilarity(new Set(s),new Set(a))+.4*this.calculateCosineSimilarityAdvanced(s,a)+.3*this.calculateSemanticOverlap(s,a)}analyzeWordAccuracy(e,t){const s=this.extractAllTerms(e),a=this.extractAllTerms(t);let n=0,r=0;return a.forEach(e=>{this.isImportantWord(e)&&(r++,s.some(t=>this.calculateWordSimilarity(e,t)>.8||this.hasSemanticEquivalence(e,t))&&n++)}),r>0?n/r:0}analyzeSentenceStructureConfidence(e,t){const s=this.splitIntoSentences(e),a=this.splitIntoSentences(t),n=this.analyzeSentenceComplexityAdvanced(s),r=this.analyzeSentenceComplexityAdvanced(a),i=this.analyzeSentencePatterns(s),o=this.analyzeSentencePatterns(a);return.6*(1-Math.abs(n-r))+.4*this.calculatePatternSimilarity(i,o)}hasSemanticEquivalence(e,t){return!!this.getSynonyms(e).includes(t.toLowerCase())||(this.stemmer.stem(e.toLowerCase())===this.stemmer.stem(t.toLowerCase())||this.calculateWordSimilarity(e,t)>.85)}tokenizeAndNormalize(e){return e.toLowerCase().replace(/[^\w\s]/g," ").split(/\s+/).filter(e=>e.length>2&&!this.isStopWord(e)).map(e=>this.stemmer.stem(e))}calculateCosineSimilarityAdvanced(e,t){const s=[...new Set([...e,...t])],a=this.createTokenVector(e,s),n=this.createTokenVector(t,s);return this.calculateCosineSimilarity(a,n)}createTokenVector(e,t){const s=new Array(t.length).fill(0);return e.forEach(e=>{const a=t.indexOf(e);-1!==a&&s[a]++}),s}calculateSemanticOverlap(e,t){const s=this.groupSemantically(e),a=this.groupSemantically(t);let n=0;return s.forEach(e=>{a.forEach(t=>{this.groupsOverlap(e,t)&&(n+=Math.min(e.length,t.length))})}),n/Math.max(e.length+t.length,1)}groupSemantically(e){const t=[],s=new Set;return e.forEach(a=>{if(s.has(a))return;const n=[a];s.add(a),e.forEach(e=>{!s.has(e)&&this.calculateWordSimilarity(a,e)>.7&&(n.push(e),s.add(e))}),n.length>1&&t.push(n)}),t}groupsOverlap(e,t){return e.some(e=>t.some(t=>this.calculateWordSimilarity(e,t)>.7))}analyzeSentenceComplexityAdvanced(e){if(0===e.length)return 0;const t=e.map(e=>{const t=e.split(/\s+/);return t.reduce((e,t)=>e+t.length,0)/t.length/10+(this.hasComplexStructures(e)?.3:0)+this.countTechnicalTerms(e)/5});return t.reduce((e,t)=>e+t,0)/t.length}hasComplexStructures(e){return[/because|although|however|therefore|furthermore|moreover/gi,/which|that|who|whom|whose/gi,/if|when|while|since|until/gi,/and|or|but|nor|yet/gi].some(t=>t.test(e))}countTechnicalTerms(e){return this.extractTechnicalTerms(e).length}isImportantWord(e){return e.length>3&&!this.isStopWord(e)&&!this.isCommonWord(e)&&this.hasSemanticWeight(e)}hasSemanticWeight(e){return!["thing","stuff","something","anything","everything","nothing"].includes(e.toLowerCase())}analyzeSentencePatterns(e){const t={simple:0,compound:0,complex:0,compoundComplex:0,questions:0,exclamations:0};return e.forEach(e=>{const s=this.classifySentencePattern(e);t[s]++}),t}classifySentencePattern(e){const t=e.split(/[,;]/).length,s=/and|or|but|nor|yet|so/gi.test(e),a=/because|although|when|while|since|until|if/gi.test(e),n=/\?$/.test(e),r=/!$/.test(e);return n?"questions":r?"exclamations":t>2&&s&&a?"compoundComplex":t>1&&a?"complex":t>1&&s?"compound":"simple"}detectGibberish(e){if(!e||e.length<10)return.5;const t=Math.min(1,e.length/1e3),s=this.assessSophistication(e);let a=0;[/[a-z]{25,}/gi,/[a-z]{4,}[0-9]{4,}/gi,/(.)\1{6,}/gi,/[qwertyuiop]{8,}/gi,/[asdfghjkl]{8,}/gi,/[zxcvbnm]{8,}/gi,/[a-z]{5,}[a-z]{5,}[a-z]{5,}[a-z]{5,}/gi].forEach((t,s)=>{const n=e.match(t);n&&(a+=.05*n.length)});const n=e.split(/\s+/),r=n.filter(e=>this.isValidWord(e)).length/Math.max(n.length,1),i=this.detectRepetitivePatterns(e),o=this.detectLackOfStructure(e),c=(a+.3*(1-r)+.5*i+.5*o)*(1-.7*t)*(1-.7*s);return Math.min(1,c)}detectNonsense(e){if(!e||e.length<10)return.4;let t=0;[/the the|and and|or or|but but/gi,/[a-z]+\s+[a-z]+\s+[a-z]+\s+[a-z]+\s+[a-z]+/gi,/[0-9]+\s+[a-z]+\s+[0-9]+/gi,/[a-z]{1,2}\s+[a-z]{1,2}\s+[a-z]{1,2}/gi].forEach(s=>{const a=e.match(s);a&&(t+=.2*a.length)});const s=this.splitIntoSentences(e),a=s.filter(e=>this.isCoherentSentence(e)).length/Math.max(s.length,1),n=(e.match(/[A-Z]/g)||[]).length,r=e.length,i=n/Math.max(r,1);return Math.min(1,t+.6*(1-a)+.3*i)}isValidWord(e){if(!e||e.length<2)return!1;if(["the","and","or","but","in","on","at","to","for","of","with","by","from","up","about","into","through","during","before","after","above","below","between","among","within","without","this","that","these","those","is","are","was","were","be","been","being","have","has","had","do","does","did","will","would","could","should","may","might","can","must","shall","a","an","as","if","then","else","when","while","where","why","how","what","which","who","whom","whose","why","because","since","until","unless","although","though","even","though","however","therefore","thus","hence","consequently","furthermore","moreover","additionally","besides","also","too","either","neither","not","no","yes","very","quite","rather","somewhat","quite","really","actually","basically","essentially","fundamentally"].includes(e.toLowerCase()))return!0;if(e.length<3)return!1;const t={};for(const s of e.toLowerCase())t[s]=(t[s]||0)+1;if(Math.max(...Object.values(t))>.6*e.length)return!1;const s=e.match(/[aeiou]/gi),a=(e.match(/[bcdfghjklmnpqrstvwxyz]/gi),(s?.length||0)/e.length);return!(a<.1||a>.8)&&((e.includes("-")||e.length>=4)&&/^[a-zA-Z\-]+$/.test(e)&&e.length>=4&&!/^[a-z]+$/.test(e)&&/^[A-Z]+$/.test(e),!0)}detectRepetitivePatterns(e){let t=0;const s=e.match(/(.)\1{2,}/g);s&&(t+=.2*s.length);const a=e.split(/\s+/);for(let e=0;e<a.length-2;e++){const s=a.slice(e,e+3).join(" ");a.slice(e+3).join(" ").includes(s)&&(t+=.3)}return Math.min(1,t)}detectLackOfStructure(e){let t=0;e.split(/[.!?]+/).length<2&&(t+=.3),(e.match(/\s/g)||[]).length/e.length<.1&&(t+=.4);const s=e.match(/[a-zA-Z]{20,}/g);return s&&(t+=.2*s.length),Math.min(1,t)}isCoherentSentence(e){if(!e||e.length<10)return!1;const t=e.split(/\s+/);if(t.filter(e=>this.isValidWord(e)).length/t.length<.5)return!1;const s=/[A-Z]/.test(e),a=/[.!?,;:]/.test(e);return s&&a}async analyzeUltraDeepContentAccuracy(e,t,s){try{e.toLowerCase(),t.toLowerCase();const a=this.extractAllConcepts(e),n=this.extractAllConcepts(t),r=this.extractFactualElements(e),i=this.extractFactualElements(t),o=this.extractExamples(e),c=this.extractExamples(t);let l=0;const u={},d=this.analyzeConceptualAccuracy(a,n);l+=d*s*.4,u.conceptualAccuracy={score:d*s*.4,percentage:100*d};const m=this.analyzeFactualPrecision(r,i);l+=m*s*.3,u.factualPrecision={score:m*s*.3,percentage:100*m};const g=this.analyzeExampleRelevance(o,c);l+=g*s*.2,u.exampleRelevance={score:g*s*.2,percentage:100*g};const h=this.analyzeContentCompleteness(e,t);return l+=h*s*.1,u.contentCompleteness={score:h*s*.1,percentage:100*h},{score:Math.round(l),maxScore:s,breakdown:u,feedback:this.generateContentFeedback(u)}}catch(e){return r.error("Ultra-deep content analysis failed",e),{score:0,maxScore:s,breakdown:{},feedback:"Content analysis error"}}}async analyzeCognitiveComplexity(e,t,s){try{let a=0;const n={},r=this.analyzeAbstractThinking(e);a+=r*s*.25,n.abstractThinking={score:r*s*.25,percentage:100*r};const i=this.analyzeAnalyticalDepth(e);a+=i*s*.25,n.analyticalDepth={score:i*s*.25,percentage:100*i};const o=this.analyzeSynthesisAbility(e,t);a+=o*s*.25,n.synthesisAbility={score:o*s*.25,percentage:100*o};const c=this.analyzeEvaluationSkills(e);return a+=c*s*.25,n.evaluationSkills={score:c*s*.25,percentage:100*c},{score:Math.round(a),maxScore:s,breakdown:n,feedback:this.generateCognitiveFeedback(n)}}catch(e){return r.error("Cognitive complexity analysis failed",e),{score:0,maxScore:s,breakdown:{},feedback:"Cognitive analysis error"}}}async analyzeConceptualDepth(e,t,s){try{let a=0;const n={},r=this.analyzeConceptualUnderstanding(e,t);a+=r*s*.4,n.conceptualUnderstanding={score:r*s*.4,percentage:100*r};const i=this.analyzeInterconnectedness(e);a+=i*s*.3,n.interconnectedness={score:i*s*.3,percentage:100*i};const o=this.analyzeTheoreticalFramework(e,t);return a+=o*s*.3,n.theoreticalFramework={score:o*s*.3,percentage:100*o},{score:Math.round(a),maxScore:s,breakdown:n,feedback:this.generateConceptualFeedback(n)}}catch(e){return r.error("Conceptual depth analysis failed",e),{score:0,maxScore:s,breakdown:{},feedback:"Conceptual analysis error"}}}extractAllConcepts(e){const t=[],s=this.splitIntoSentences(e);for(const e of s){const s=e.toLowerCase().match(/\b\w+\b/g)||[],a=s.filter(e=>this.isTechnicalTerm(e)),n=s.filter(e=>this.isDomainTerm(e));t.push(...a,...n)}return[...new Set(t)]}extractFactualElements(e){const t=[],s=this.splitIntoSentences(e);for(const e of s)this.containsFactualContent(e)&&t.push(e);return t}extractExamples(e){const t=[],s=this.splitIntoSentences(e);for(const e of s)this.containsExample(e)&&t.push(e);return t}analyzeConceptualAccuracy(e,t){if(0===t.length)return.5;const s=e.filter(e=>t.some(t=>this.calculateWordSimilarity(e,t)>.7));return Math.min(s.length/t.length,1)}analyzeFactualPrecision(e,t){if(0===t.length)return.5;let s=0;for(const a of e){let e=0;for(const s of t){const t=this.calculateSemanticSimilarity(a,s);e=Math.max(e,t)}s+=e}return e.length>0?s/e.length:0}analyzeExampleRelevance(e,t){if(0===t.length)return.5;let s=0;for(const a of e){let e=0;for(const s of t){const t=this.calculateSemanticSimilarity(a,s);e=Math.max(e,t)}s+=e}return e.length>0?s/e.length:0}analyzeContentCompleteness(e,t){const s=e.length,a=t.length,n=Math.min(s/a,1);return Math.pow(n,.7)}analyzeAbstractThinking(e){const t=e.toLowerCase(),s=["concept","theory","principle","paradigm","framework","model","abstract","general","universal","fundamental","underlying","philosophy","approach","methodology","perspective","viewpoint"].filter(e=>t.includes(e));return Math.min(s.length/5,1)}analyzeAnalyticalDepth(e){const t=e.toLowerCase(),s=["because","therefore","however","although","despite","while","analysis","analyze","examine","investigate","explore","consider","compare","contrast","evaluate","assess","determine","identify"].filter(e=>t.includes(e));return Math.min(s.length/8,1)}analyzeSynthesisAbility(e,t){this.extractAllConcepts(e),this.extractAllConcepts(t);const s=this.findConceptCombinations(e),a=this.findConceptCombinations(t);let n=0;for(const e of s)for(const t of a){const s=this.calculateSemanticSimilarity(e,t);n=Math.max(n,s)}return n}analyzeEvaluationSkills(e){const t=e.toLowerCase(),s=["evaluate","assess","judge","critique","review","examine","strength","weakness","advantage","disadvantage","benefit","drawback","effective","ineffective","successful","unsuccessful","appropriate","inappropriate"].filter(e=>t.includes(e));return Math.min(s.length/6,1)}analyzeConceptualUnderstanding(e,t){const s=this.extractAllConcepts(e),a=this.extractAllConcepts(t);let n=0;for(const e of a){let t=0;for(const a of s){const s=this.calculateWordSimilarity(e,a);t=Math.max(t,s)}n+=t}return a.length>0?n/a.length:0}analyzeInterconnectedness(e){const t=this.splitIntoSentences(e);let s=0;for(let e=0;e<t.length-1;e++){const a=t[e],n=t[e+1],r=["therefore","however","furthermore","moreover","additionally","consequently"].some(e=>n.toLowerCase().includes(e)),i=this.hasConceptualConnection(a,n);(r||i)&&s++}return t.length>1?s/(t.length-1):0}analyzeTheoreticalFramework(e,t){const s=["theory","theoretical","framework","model","paradigm","approach","methodology","principle","concept","philosophy","perspective"],a=e.toLowerCase(),n=t.toLowerCase(),r=s.filter(e=>a.includes(e)),i=s.filter(e=>n.includes(e));return 0===i.length?.5:r.filter(e=>i.includes(e)).length/i.length}containsFactualContent(e){return["is","are","was","were","has","have","had","consists","contains","includes"].some(t=>e.toLowerCase().includes(t))}containsExample(e){return["for example","such as","like","including","e.g.","instance","case"].some(t=>e.toLowerCase().includes(t))}findConceptCombinations(e){const t=this.extractAllConcepts(e),s=[];for(let e=0;e<t.length-1;e++)for(let a=e+1;a<t.length;a++)s.push(`${t[e]} ${t[a]}`);return s}hasConceptualConnection(e,t){const s=e.toLowerCase().match(/\b\w+\b/g)||[],a=t.toLowerCase().match(/\b\w+\b/g)||[];return s.filter(e=>a.includes(e)).length>=2}generateContentFeedback(e){const t=[];return e.conceptualAccuracy?.percentage<50&&t.push("Improve conceptual understanding and accuracy"),e.factualPrecision?.percentage<50&&t.push("Enhance factual precision and detail"),e.exampleRelevance?.percentage<50&&t.push("Provide more relevant examples"),e.contentCompleteness?.percentage<50&&t.push("Expand content coverage"),t.length>0?t.join(". "):"Good content analysis"}generateCognitiveFeedback(e){const t=[];return e.abstractThinking?.percentage<50&&t.push("Develop more abstract thinking"),e.analyticalDepth?.percentage<50&&t.push("Enhance analytical depth"),e.synthesisAbility?.percentage<50&&t.push("Improve synthesis of concepts"),e.evaluationSkills?.percentage<50&&t.push("Strengthen evaluation skills"),t.length>0?t.join(". "):"Good cognitive complexity"}generateConceptualFeedback(e){const t=[];return e.conceptualUnderstanding?.percentage<50&&t.push("Deepen conceptual understanding"),e.interconnectedness?.percentage<50&&t.push("Improve concept interconnectedness"),e.theoreticalFramework?.percentage<50&&t.push("Strengthen theoretical framework"),t.length>0?t.join(". "):"Good conceptual depth"}analyzeAdvancedConceptualDepth(e,t){try{let s=0;return s+=.3*this.analyzeConceptualInterconnections(e),s+=.25*this.analyzeTheoreticalFrameworkUnderstanding(e,t),s+=.2*this.analyzePracticalApplicationDepth(e),s+=.15*this.analyzeCriticalAnalysisDepth(e),s+=.1*this.analyzeSynthesisAndIntegration(e,t),Math.min(1,Math.max(0,s))}catch(e){return r.error("Advanced conceptual depth analysis failed",e),0}}analyzeConceptualInterconnections(e){const t=this.splitIntoSentences(e);let s=0,a=0;for(let e=0;e<t.length-1;e++){const n=t[e],r=t[e+1],i=["because","therefore","however","although","despite","while","since","as","thus","consequently","furthermore","moreover","additionally","in addition","also","besides","similarly","likewise","on the other hand","in contrast","nevertheless","nonetheless","meanwhile","subsequently","as a result","for this reason","due to","owing to","thanks to","in light of","considering"].some(e=>r.toLowerCase().includes(e)),o=this.extractAllConcepts(n),c=this.extractAllConcepts(r);let l=0;for(const e of o)c.some(t=>this.calculateWordSimilarity(e,t)>.6)&&l++;s+=(i?.4:0)+.6*(o.length>0?l/o.length:0),a++}return a>0?s/a:0}analyzeTheoreticalFrameworkUnderstanding(e,t){const s=e.toLowerCase(),a=(t.toLowerCase(),["paradigm","framework","model","theory","principle","concept","approach","methodology","philosophy","doctrine","school of thought","perspective","viewpoint","standpoint","theoretical","conceptual","abstract","fundamental","underlying","core","essential"]);let n=0;for(const e of a)s.includes(e)&&(n+=.1);const r=["is based on","follows the","implements the","adheres to","conforms to","according to","as per","in accordance with","following the principle of","this approach","this method","this technique","this strategy"];for(const e of r)s.includes(e)&&(n+=.05);return Math.min(1,n)}analyzePracticalApplicationDepth(e){const t=e.toLowerCase(),s=["for example","such as","like","including","e.g.","i.e.","instance","case","scenario","situation","application","real-world","practical","actual","concrete","specific"];let a=0;for(const e of s)t.includes(e)&&(a+=.1);const n=["implement","apply","use","utilize","employ","deploy","execute","perform","carry out","put into practice","step","process","procedure","method","technique"];for(const e of n)t.includes(e)&&(a+=.05);const r=["benefit","advantage","pro","positive","strength","merit","improve","enhance","optimize","efficient","effective","better","superior","excellent","outstanding"];for(const e of r)t.includes(e)&&(a+=.03);return Math.min(1,a)}analyzeCriticalAnalysisDepth(e){const t=e.toLowerCase(),s=["however","although","despite","nevertheless","nonetheless","on the other hand","in contrast","conversely","alternatively","while","whereas","but","yet","still","though"];let a=0;for(const e of s)t.includes(e)&&(a+=.1);const n=["evaluate","assess","analyze","examine","consider","review","compare","contrast","weigh","balance","judge","determine","conclude","infer","deduce","reason","argue","debate"];for(const e of n)t.includes(e)&&(a+=.08);const r=["depends","varies","differs","changes","fluctuates","sometimes","usually","generally","typically","often","may","might","could","would","should","can"];for(const e of r)t.includes(e)&&(a+=.05);return Math.min(1,a)}async analyzeAdvancedQualityDifferentiation(e,t,s){try{let a=0;const n={},r=this.analyzeAnswerSophistication(e,t);a+=r*s*.3,n.sophistication={score:r*s*.3,percentage:100*r};const i=this.analyzeAnswerComprehensiveness(e,t);a+=i*s*.25,n.comprehensiveness={score:i*s*.25,percentage:100*i};const o=this.analyzeInsightDepth(e,t);a+=o*s*.2,n.insightDepth={score:o*s*.2,percentage:100*o};const c=this.analyzeArgumentationQuality(e);a+=c*s*.15,n.argumentationQuality={score:c*s*.15,percentage:100*c};const l=this.analyzeInnovationAndCreativity(e,t);return a+=l*s*.1,n.innovation={score:l*s*.1,percentage:100*l},{score:Math.round(a),maxScore:s,breakdown:n,feedback:this.generateQualityDifferentiationFeedback(n)}}catch(e){return r.error("Advanced quality differentiation analysis failed",e),{score:0,maxScore:s,breakdown:{},feedback:"Quality differentiation analysis error"}}}analyzeAnswerSophistication(e,t){const s=e.toLowerCase();let a=Math.min(.3,e.length/1e3);const n=["fundamentally","essentially","intrinsically","inherently","naturally","logically","rationally","systematically","methodically","strategically","holistically","comprehensively","thoroughly","extensively","profoundly","significantly","substantially","considerably","notably","remarkably"];let r=0;for(const e of n)s.includes(e)&&r++;a+=Math.min(.3,.15*r);const i=["paradigm","framework","methodology","philosophy","doctrine","theoretical","conceptual","abstract","metaphysical","ideological","principled","fundamental","essential","core","underlying"];let o=0;for(const e of i)s.includes(e)&&o++;a+=Math.min(.2,.13*o);const c=["however","although","despite","nevertheless","nonetheless","on the other hand","in contrast","conversely","alternatively","while","whereas","but","yet","still","though"];let l=0;for(const e of c)s.includes(e)&&l++;return a+=Math.min(.2,.13*l),Math.min(1,a)}analyzeAnswerComprehensiveness(e,t){const s=e.toLowerCase();t.toLowerCase();let a=Math.min(.25,e.length/800);const n=["comprehensive","complete","thorough","extensive","detailed","in-depth","exhaustive","all-encompassing","full","total","entire","whole","complete","comprehensive","thorough"];let r=0;for(const e of n)s.includes(e)&&r++;a+=Math.min(.25,.17*r);const i=["first","second","third","fourth","fifth","one","two","three","four","five","primary","secondary","tertiary","main","additional","also","furthermore","moreover","additionally","besides"];let o=0;for(const e of i)s.includes(e)&&o++;a+=Math.min(.25,.17*o);const c=["for example","such as","like","including","e.g.","i.e.","instance","case","scenario","situation","application","real-world","practical","actual","concrete","specific"];let l=0;for(const e of c)s.includes(e)&&l++;return a+=Math.min(.25,.17*l),Math.min(1,a)}analyzeInsightDepth(e,t){const s=e.toLowerCase();let a=Math.min(.25,e.length/600);const n=["insight","understanding","comprehension","grasp","appreciation","recognition","awareness","consciousness","realization","perception","interpretation","analysis","evaluation","assessment","judgment"];let r=0;for(const e of n)s.includes(e)&&r++;a+=Math.min(.25,.17*r);const i=["analyze","examine","investigate","explore","study","research","consider","evaluate","assess","review","compare","contrast","weigh","balance","judge"];let o=0;for(const e of i)s.includes(e)&&o++;a+=Math.min(.25,.17*o);const c=["therefore","thus","consequently","as a result","because of this","for this reason","due to this","owing to this","thanks to this","this means","this indicates","this suggests","this implies"];let l=0;for(const e of c)s.includes(e)&&l++;return a+=Math.min(.25,.17*l),Math.min(1,a)}analyzeArgumentationQuality(e){const t=e.toLowerCase(),s=["because","since","as","given that","considering that","in light of","owing to","due to","thanks to","for","reason","rationale","justification","explanation","basis"];let a=0;for(const e of s)t.includes(e)&&(a+=.1);const n=["evidence","proof","demonstration","illustration","example","instance","case","scenario","situation","circumstance","shows","demonstrates","proves","indicates","suggests"];for(const e of n)t.includes(e)&&(a+=.08);return Math.min(1,a)}analyzeInnovationAndCreativity(e,t){const s=e.toLowerCase();let a=Math.min(.3,e.length/500);const n=["innovative","creative","original","unique","novel","groundbreaking","revolutionary","pioneering","cutting-edge","advanced","sophisticated","complex","intricate","elaborate"];let r=0;for(const e of n)s.includes(e)&&r++;a+=Math.min(.35,.25*r);const i=["combine","integrate","merge","unite","connect","link","bridge","synthesize","consolidate","unify","coordinate","harmonize","together","collectively"];let o=0;for(const e of i)s.includes(e)&&o++;return a+=Math.min(.35,.25*o),Math.min(1,a)}generateQualityDifferentiationFeedback(e){const t=[];return e.sophistication?.percentage<50&&t.push("Use more sophisticated language and advanced concepts"),e.comprehensiveness?.percentage<50&&t.push("Provide more comprehensive coverage of the topic"),e.insightDepth?.percentage<50&&t.push("Demonstrate deeper insights and analysis"),e.argumentationQuality?.percentage<50&&t.push("Strengthen your arguments with better reasoning"),e.innovation?.percentage<50&&t.push("Show more innovative and creative thinking"),t.length>0?t.join(". "):"Excellent quality differentiation"}analyzeSynthesisAndIntegration(e,t){const s=e.toLowerCase(),a=(t.toLowerCase(),["combine","integrate","merge","unite","connect","link","synthesize","consolidate","unify","coordinate","harmonize","together","collectively","jointly","simultaneously","concurrently"]);let n=0;for(const e of a)s.includes(e)&&(n+=.1);const r=this.extractAllConcepts(e),i=this.extractAllConcepts(t);let o=0;for(const e of i)r.some(t=>this.calculateWordSimilarity(e,t)>.7)&&o++;return n+=.5*(i.length>0?o/i.length:0),Math.min(1,n)}analyzeAdvancedSemanticDepth(e,t){try{let s=0;return s+=.3*this.analyzeSemanticNuanceRecognition(e,t),s+=.25*this.analyzeSemanticImplicationUnderstanding(e,t),s+=.2*this.analyzeSemanticRelationshipMapping(e,t),s+=.15*this.analyzeSemanticAbstractionLevel(e),s+=.1*this.analyzeSemanticPrecision(e,t),Math.min(1,Math.max(0,s))}catch(e){return r.error("Advanced semantic depth analysis failed",e),0}}analyzeSemanticNuanceRecognition(e,t){const s=e.toLowerCase(),a=(t.toLowerCase(),["subtle","nuanced","refined","sophisticated","complex","intricate","detailed","specific","precise","exact","accurate","careful","thoughtful","considered","deliberate","intentional","purposeful"]);let n=0;for(const e of a)s.includes(e)&&(n+=.1);const r=["depending on","based on","according to","in terms of","with respect to","in the context of","within the framework of","under certain conditions","when","if","provided that","assuming","given that"];for(const e of r)s.includes(e)&&(n+=.08);const i=["compared to","in comparison with","relative to","as opposed to","unlike","different from","similar to","analogous to","equivalent to"];for(const e of i)s.includes(e)&&(n+=.06);return Math.min(1,n)}analyzeSemanticImplicationUnderstanding(e,t){const s=e.toLowerCase(),a=["implies","suggests","indicates","demonstrates","shows","reveals","leads to","results in","causes","creates","generates","produces","enables","allows","facilitates","supports","promotes","encourages"];let n=0;for(const e of a)s.includes(e)&&(n+=.1);const r=["therefore","thus","consequently","as a result","because of this","for this reason","due to this","owing to this","thanks to this","this means","this indicates","this suggests","this implies"];for(const e of r)s.includes(e)&&(n+=.08);return Math.min(1,n)}analyzeSemanticRelationshipMapping(e,t){const s=e.toLowerCase(),a=["relationship","connection","link","bond","tie","association","correlation","interdependence","interconnection","interrelation","mutual","reciprocal","bidirectional","two-way","interactive"];let n=0;for(const e of a)s.includes(e)&&(n+=.1);const r=["hierarchy","level","tier","rank","order","sequence","primary","secondary","tertiary","fundamental","basic","advanced","superior","inferior","higher","lower","greater","lesser"];for(const e of r)s.includes(e)&&(n+=.08);return Math.min(1,n)}analyzeSemanticAbstractionLevel(e){const t=e.toLowerCase(),s=["abstract","theoretical","conceptual","philosophical","metaphysical","ideological","principled","fundamental","essential","core","underlying","basic","elementary","primary","fundamental"];let a=0;for(const e of s)t.includes(e)&&(a+=.1);const n=["generally","typically","usually","commonly","normally","in general","as a rule","broadly speaking","on the whole","universally","globally","comprehensively","holistically"];for(const e of n)t.includes(e)&&(a+=.08);return Math.min(1,a)}analyzeSemanticPrecision(e,t){const s=e.toLowerCase(),a=(t.toLowerCase(),["precisely","exactly","specifically","particularly","especially","specifically","namely","that is","i.e.","e.g.","for instance","in particular","specifically","explicitly","clearly","definitely"]);let n=0;for(const e of a)s.includes(e)&&(n+=.1);const r=this.extractAllConcepts(e),i=this.extractAllConcepts(t);let o=0;for(const e of i)r.some(t=>this.calculateWordSimilarity(e,t)>.8)&&o++;return n+=.5*(i.length>0?o/i.length:0),Math.min(1,n)}analyzeContextualUnderstanding(e,t){return(this.analyzeContextClues(e,t)+this.analyzeExampleUsage(e,t)+this.analyzeContextualRelevance(e,t))/3}analyzeContextClues(e,t){const s=e.toLowerCase().split(/\s+/),a=t.toLowerCase().split(/\s+/);let n=0,r=0;const i=["because","since","therefore","however","although","while","when","where","why","how"];for(const e of i)a.includes(e)&&(r++,s.includes(e)&&n++);return r>0?n/r:.5}analyzeExampleUsage(e,t){const s=["for example","such as","like","including","e.g.","i.e."];let a=0,n=0;for(const r of s)e.toLowerCase().includes(r)&&a++,t.toLowerCase().includes(r)&&n++;return n>0?Math.min(a/n,1):.5}analyzeContextualRelevance(e,t){const s=e.split(/[.!?]+/).filter(e=>e.trim().length>0),a=t.split(/[.!?]+/).filter(e=>e.trim().length>0);let n=0;for(const e of s)for(const t of a)if(this.calculateWordSimilarity(e,t)>.3){n++;break}return s.length>0?n/s.length:.5}analyzeSemanticCoherence(e,t){const s=e.split(/[.!?]+/).filter(e=>e.trim().length>0);if(s.length<2)return.5;let a=0,n=0;for(let e=0;e<s.length-1;e++){const t=s[e],r=s[e+1],i=["however","therefore","furthermore","moreover","additionally","also","besides","in addition","on the other hand","conversely","meanwhile","subsequently","consequently","as a result","for example","specifically","in particular","in other words","that is","namely"];let o=!1;for(const e of i)if(r.toLowerCase().includes(e)){o=!0;break}const c=this.extractAllConcepts(t),l=this.extractAllConcepts(r);let u=0;for(const e of c)for(const t of l){const s=this.calculateWordSimilarity(e,t);s>.3&&(u=Math.max(u,s))}a+=((o?.7:.3)+u)/2,n++}return n>0?a/n:.5}generateSemanticFeedback(e,t,s){const a=[];return e<.3?a.push("Focus on understanding and explaining the core concepts more clearly."):e<.6?a.push("Good concept understanding, but try to connect related ideas better."):a.push("Excellent concept alignment and understanding."),t<.3?a.push("Provide more context and examples to support your explanations."):t<.6?a.push("Good use of context, consider adding more specific examples."):a.push("Excellent contextual understanding and example usage."),s<.3?a.push("Improve the flow between sentences and use logical connectors."):s<.6?a.push("Good coherence, try to strengthen transitions between ideas."):a.push("Excellent semantic coherence and logical flow."),a.join(" ")}calculateIntelligenceMultiplier(e,t){e.toLowerCase();let s=1;return s+=.2*this.analyzeConceptualDepthAdvanced(e),s+=.15*this.analyzeAnalyticalSophistication(e),s+=.1*this.analyzeLinguisticIntelligence(e),s+=.15*this.analyzeCriticalReasoningAdvanced(e),s+=.1*this.analyzeInnovationCreativityAdvanced(e),s+=.1*this.analyzeContextualUnderstandingAdvanced(e,t),s+=.1*this.analyzeSynthesisIntegrationAdvanced(e,t),s+=.1*this.analyzeMetacognitiveAwareness(e),Math.min(2,Math.max(.5,s))}calculateAdvancedIntelligenceBonus(e,t,s){let a=0;return a+=2*this.assessExceptionalConceptualUnderstanding(e,t),a+=2*this.assessExceptionalAnalyticalDepth(e),a+=1.5*this.assessExceptionalWritingQuality(e),a+=1.5*this.assessExceptionalInnovation(e,t),a+=1*this.assessExceptionalIntegration(e,t),Math.min(.8*s,a)}analyzeConceptualDepthAdvanced(e){const t=e.toLowerCase(),s=["paradigm","framework","methodology","philosophy","doctrine","theoretical","conceptual","abstract","metaphysical","ideological","principled","fundamental","essential","core","underlying","intrinsic","inherent","systematic","holistic","comprehensive","thorough","profound","sophisticated","nuanced","multifaceted"];let a=0;for(const e of s)t.includes(e)&&a++;const n=["interconnected","interdependent","correlated","integrated","unified","cohesive","coherent","synthesized","consolidated","harmonized"];let r=0;for(const e of n)t.includes(e)&&r++;return Math.min(1,.15*a+.1*r)}analyzeAnalyticalSophistication(e){const t=e.toLowerCase(),s=["analyze","examine","investigate","explore","study","research","consider","evaluate","assess","review","compare","contrast","weigh","balance","judge","scrutinize","delineate","elucidate","explicate","delineate","articulate"];let a=0;for(const e of s)t.includes(e)&&a++;const n=["evidence","demonstrates","indicates","suggests","implies","reveals","shows","proves","validates","confirms","supports","corroborates"];let r=0;for(const e of n)t.includes(e)&&r++;return Math.min(1,.1*a+.08*r)}analyzeLinguisticIntelligence(e){const t=e.toLowerCase(),s=["fundamentally","essentially","intrinsically","inherently","naturally","logically","rationally","systematically","methodically","strategically","holistically","comprehensively","thoroughly","extensively","profoundly","significantly","substantially","considerably","notably","remarkably"];let a=0;for(const e of s)t.includes(e)&&a++;const n=["however","although","despite","nevertheless","nonetheless","conversely","alternatively","while","whereas","but","yet","still","though","notwithstanding"];let r=0;for(const e of n)t.includes(e)&&r++;return Math.min(1,.12*a+.1*r)}analyzeCriticalReasoningAdvanced(e){const t=e.toLowerCase(),s=["critical","analysis","evaluation","assessment","judgment","reasoning","logic","rationale","argument","perspective","viewpoint","interpretation","implication","consequence","outcome","result","effect","impact"];let a=0;for(const e of s)t.includes(e)&&a++;const n=["however","on the other hand","conversely","alternatively","nevertheless","despite","although","while","whereas","but","yet","still"];let r=0;for(const e of n)t.includes(e)&&r++;return Math.min(1,.1*a+.08*r)}analyzeInnovationCreativityAdvanced(e){const t=e.toLowerCase(),s=["innovative","creative","original","unique","novel","groundbreaking","revolutionary","pioneering","cutting-edge","advanced","sophisticated","complex","intricate","elaborate","sophisticated","nuanced"];let a=0;for(const e of s)t.includes(e)&&a++;const n=["combine","integrate","merge","unite","connect","link","bridge","synthesize","consolidate","unify","coordinate","harmonize","together"];let r=0;for(const e of n)t.includes(e)&&r++;return Math.min(1,.12*a+.1*r)}analyzeContextualUnderstandingAdvanced(e,t){const s=e.toLowerCase(),a=(t.toLowerCase(),["context","situation","circumstance","environment","setting","background","framework","perspective","viewpoint","approach","methodology"]);let n=0;for(const e of a)s.includes(e)&&n++;const r=["for example","such as","like","including","e.g.","i.e.","instance","case","scenario","situation","application","real-world","practical"];let i=0;for(const e of r)s.includes(e)&&i++;return Math.min(1,.1*n+.08*i)}analyzeSynthesisIntegrationAdvanced(e,t){const s=e.toLowerCase(),a=["combine","integrate","merge","unite","connect","link","bridge","synthesize","consolidate","unify","coordinate","harmonize","together","collectively","jointly","simultaneously","concurrently","holistically"];let n=0;for(const e of a)s.includes(e)&&n++;const r=["integrated","unified","cohesive","coherent","systematic","comprehensive","holistic","unified","consolidated","harmonized","coordinated"];let i=0;for(const e of r)s.includes(e)&&i++;return Math.min(1,.1*n+.08*i)}analyzeMetacognitiveAwareness(e){const t=e.toLowerCase(),s=["understanding","comprehension","awareness","consciousness","realization","recognition","appreciation","perception","interpretation","analysis","evaluation","assessment","judgment","reflection","consideration"];let a=0;for(const e of s)t.includes(e)&&a++;const n=["clearly","obviously","evidently","apparently","seemingly","presumably","arguably","possibly","potentially","theoretically","practically"];let r=0;for(const e of n)t.includes(e)&&r++;return Math.min(1,.1*a+.08*r)}assessExceptionalConceptualUnderstanding(e,t){const s=e.toLowerCase(),a=["paradigm shift","fundamental transformation","revolutionary approach","groundbreaking methodology","innovative framework","sophisticated analysis","comprehensive understanding","profound insight","nuanced interpretation"];let n=0;for(const e of a)s.includes(e)&&n++;return Math.min(1,.3*n)}assessExceptionalAnalyticalDepth(e){const t=e.toLowerCase(),s=["comprehensive analysis","in-depth examination","thorough investigation","detailed exploration","extensive research","careful consideration","rigorous evaluation","systematic assessment","critical review"];let a=0;for(const e of s)t.includes(e)&&a++;return Math.min(1,.25*a)}assessExceptionalWritingQuality(e){const t=e.toLowerCase(),s=["eloquent","articulate","sophisticated","refined","polished","well-crafted","masterfully","expertly","professionally","academically"];let a=0;for(const e of s)t.includes(e)&&a++;const n=["furthermore","moreover","additionally","besides","also","in addition","not only","but also","as well as","along with"];let r=0;for(const e of n)t.includes(e)&&r++;return Math.min(1,.2*a+.1*r)}assessExceptionalInnovation(e,t){const s=e.toLowerCase(),a=["revolutionary","groundbreaking","pioneering","cutting-edge","state-of-the-art","innovative","creative","original","unique","novel approach","fresh perspective","new methodology"];let n=0;for(const e of a)s.includes(e)&&n++;return Math.min(1,.2*n)}assessExceptionalIntegration(e,t){const s=e.toLowerCase(),a=["seamlessly integrated","perfectly unified","harmoniously combined","cohesively synthesized","systematically consolidated","holistically unified","comprehensively integrated","thoroughly coordinated","masterfully unified"];let n=0;for(const e of a)s.includes(e)&&n++;return Math.min(1,.25*n)}analyzeSemanticConceptAlignment(e,t){const s=this.extractAllConcepts(e),a=this.extractAllConcepts(t);let n=0,r=0;for(const e of a){let t=0;for(const a of s){const s=this.calculateWordSimilarity(e,a);t=Math.max(t,s)}n+=t,r++}return r>0?n/r:0}}}},t={};!function s(a){var n=t[a];if(void 0!==n)return n.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,s),r.exports}(2431)})();